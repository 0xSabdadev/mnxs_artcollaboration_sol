{
	"id": "a98d7360fbcc8e616a67402a5ed6029e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CollaborativeArt.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\";\r\n\r\n// project : develop\r\ncontract CollaborativeArt{\r\n    using ECDSA for bytes32;\r\n\r\n    struct Artist{\r\n        address artistAddress;\r\n        uint256 ownershipPercentage;\r\n    }\r\n    struct Milestone{\r\n        string description;\r\n        uint256 deadline;\r\n        bool completed;\r\n    }\r\n\r\n    address public owner;\r\n    Artist[] public artists;\r\n    Milestone[] public milestones;\r\n\r\n    mapping(address => uint256) public artistToOwnershipPercentage;\r\n    mapping(address => bool) public artistSigned;\r\n    uint256 public totalPercentage = 0;\r\n    uint256 public artworkPrice;\r\n\r\n    event ArtworkSold(uint256 price, string message);\r\n    event DisputeResolved(string message);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyArtist() {\r\n        require(artistSigned[msg.sender], \"Only an artist can call this function\");\r\n        _;\r\n    }\r\n\r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // base function add\r\n    function addArtist(address _artistAddress, uint256 _ownershipPercentage) public onlyOwner{\r\n        require(totalPercentage + _ownershipPercentage <=100,\"Total Ownership max 100%\");\r\n        Artist memory newArtist = Artist(_artistAddress, _ownershipPercentage);\r\n        artists.push(newArtist);\r\n        artistToOwnershipPercentage[_artistAddress] = _ownershipPercentage;\r\n        artistSigned[_artistAddress] = true;\r\n        totalPercentage += _ownershipPercentage;\r\n    }\r\n\r\n    // base function artwork price\r\n    function setArtworkPrice(uint256 _price) public onlyOwner{\r\n        artworkPrice = _price;\r\n    }\r\n\r\n    // base function purchase\r\n    function purchaseArtwork() public payable{\r\n        require(msg.value == artworkPrice, \"Payment must equal to art price\");\r\n        distributeFunds();\r\n        emit ArtworkSold(artworkPrice, \"artwork sold\");\r\n    }\r\n\r\n    // base func pay\r\n    function distributeFunds() private{\r\n        for (uint256 i = 0; i < artists.length; i++){\r\n            Artist memory artist = artists[i];\r\n            payable(artist.artistAddress).transfer((artworkPrice * artist.ownershipPercentage )/100);\r\n        }\r\n    }\r\n\r\n    // base func dispute\r\n    function resolveDispute(string memory _message) public view onlyOwner returns (string memory) {\r\n        return _message;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/draft-EIP712.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-712 is Final as of 2022-08-11. This file is deprecated.\n\nimport \"./EIP712.sol\";\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b2f1cfaaacef5d0935b23f5392df8703ea527589c82bd6cdc28555b92a9a230964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b2f1cfaaacef5d0935b23f5392df8703ea527589c82bd6cdc28555b92a9a230964736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALL 0xCF 0xAA 0xAC 0xEF TSTORE MULMOD CALLDATALOAD 0xB2 EXTCODEHASH MSTORE8 SWAP3 0xDF DUP8 SUB 0xEA MSTORE PUSH22 0x89C82BD6CDC28555B92A9A230964736F6C6343000818 STOP CALLER ",
							"sourceMap": "1255:3053:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b2f1cfaaacef5d0935b23f5392df8703ea527589c82bd6cdc28555b92a9a230964736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALL 0xCF 0xAA 0xAC 0xEF TSTORE MULMOD CALLDATALOAD 0xB2 EXTCODEHASH MSTORE8 SWAP3 0xDF DUP8 SUB 0xEA MSTORE PUSH22 0x89C82BD6CDC28555B92A9A230964736F6C6343000818 STOP CALLER ",
							"sourceMap": "1255:3053:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2f1cfaaacef5d0935b23f5392df8703ea527589c82bd6cdc28555b92a9a230964736f6c63430008180033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/CollaborativeArt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP2 MOD PUSH24 0x3EEEC084ADE89857853ADF18EABEA7AC19B669DD0F333182 0xB9 DUP5 0xC3 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1245:2685:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP2 MOD PUSH24 0x3EEEC084ADE89857853ADF18EABEA7AC19B669DD0F333182 0xB9 DUP5 0xC3 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1245:2685:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/CollaborativeArt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/CollaborativeArt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e9a25f34a400f56c0d85b5baa93ae6ef52b60a3be5ff7f145980e919fdf7293264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e9a25f34a400f56c0d85b5baa93ae6ef52b60a3be5ff7f145980e919fdf7293264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG2 PUSH0 CALLVALUE LOG4 STOP CREATE2 PUSH13 0xD85B5BAA93AE6EF52B60A3BE5 SELFDESTRUCT PUSH32 0x145980E919FDF7293264736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "344:7386:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e9a25f34a400f56c0d85b5baa93ae6ef52b60a3be5ff7f145980e919fdf7293264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG2 PUSH0 CALLVALUE LOG4 STOP CREATE2 PUSH13 0xD85B5BAA93AE6EF52B60A3BE5 SELFDESTRUCT PUSH32 0x145980E919FDF7293264736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "344:7386:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9a25f34a400f56c0d85b5baa93ae6ef52b60a3be5ff7f145980e919fdf7293264736f6c63430008180033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/CollaborativeArt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 991,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 993,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208818dd9d24d4511f374f24a9aad3842034bef77422f74ef19dc9b4286fbfa05664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208818dd9d24d4511f374f24a9aad3842034bef77422f74ef19dc9b4286fbfa05664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 XOR 0xDD SWAP14 0x24 0xD4 MLOAD 0x1F CALLDATACOPY 0x4F 0x24 0xA9 0xAA 0xD3 DUP5 KECCAK256 CALLVALUE 0xBE 0xF7 PUSH21 0x22F74EF19DC9B4286FBFA05664736F6C6343000818 STOP CALLER ",
							"sourceMap": "521:3235:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208818dd9d24d4511f374f24a9aad3842034bef77422f74ef19dc9b4286fbfa05664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 XOR 0xDD SWAP14 0x24 0xD4 MLOAD 0x1F CALLDATACOPY 0x4F 0x24 0xA9 0xAA 0xD3 DUP5 KECCAK256 CALLVALUE 0xBE 0xF7 PUSH21 0x22F74EF19DC9B4286FBFA05664736F6C6343000818 STOP CALLER ",
							"sourceMap": "521:3235:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208818dd9d24d4511f374f24a9aad3842034bef77422f74ef19dc9b4286fbfa05664736f6c63430008180033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/CollaborativeArt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/CollaborativeArt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/CollaborativeArt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CollaborativeArt.sol": {
				"CollaborativeArt": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "ArtworkSold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "DisputeResolved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_artistAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ownershipPercentage",
									"type": "uint256"
								}
							],
							"name": "addArtist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "artistSigned",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "artistToOwnershipPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "artists",
							"outputs": [
								{
									"internalType": "address",
									"name": "artistAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "ownershipPercentage",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "artworkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "milestones",
							"outputs": [
								{
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "completed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "purchaseArtwork",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_message",
									"type": "string"
								}
							],
							"name": "resolveDispute",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setArtworkPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CollaborativeArt.sol\":219:2558  contract CollaborativeArt{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CollaborativeArt.sol\":741:742  0 */\n  0x00\n    /* \"contracts/CollaborativeArt.sol\":708:742  uint256 public totalPercentage = 0 */\n  0x05\n  sstore\n    /* \"contracts/CollaborativeArt.sol\":1150:1200  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/CollaborativeArt.sol\":1182:1192  msg.sender */\n  caller\n    /* \"contracts/CollaborativeArt.sol\":1174:1179  owner */\n  0x00\n  dup1\n    /* \"contracts/CollaborativeArt.sol\":1174:1192  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CollaborativeArt.sol\":219:2558  contract CollaborativeArt{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CollaborativeArt.sol\":219:2558  contract CollaborativeArt{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8f2238ba\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xab1ce0b0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xcd7e10c1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd44a0e61\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe89e4ed6\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_13:\n      dup1\n      0x538b7242\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5d1b5805\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6beeedb8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7f8fbc22\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x89b5efa7\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CollaborativeArt.sol\":657:701  mapping(address => bool) public artistSigned */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollaborativeArt.sol\":1234:1710  function addArtist(address _artistAddress, uint256 _ownershipPercentage) public onlyOwner{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/CollaborativeArt.sol\":1754:1851  function setArtworkPrice(uint256 _price) public onlyOwner{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/CollaborativeArt.sol\":588:650  mapping(address => uint256) public artistToOwnershipPercentage */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollaborativeArt.sol\":749:776  uint256 public artworkPrice */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollaborativeArt.sol\":493:513  address public owner */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollaborativeArt.sol\":2427:2555  function resolveDispute(string memory _message) public view onlyOwner returns (string memory) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollaborativeArt.sol\":1890:2104  function purchaseArtwork() public payable{... */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/CollaborativeArt.sol\":520:543  Artist[] public artists */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollaborativeArt.sol\":708:742  uint256 public totalPercentage = 0 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollaborativeArt.sol\":550:579  Milestone[] public milestones */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollaborativeArt.sol\":657:701  mapping(address => bool) public artistSigned */\n    tag_18:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":1234:1710  function addArtist(address _artistAddress, uint256 _ownershipPercentage) public onlyOwner{... */\n    tag_25:\n        /* \"contracts/CollaborativeArt.sol\":940:945  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CollaborativeArt.sol\":926:945  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CollaborativeArt.sol\":926:936  msg.sender */\n      caller\n        /* \"contracts/CollaborativeArt.sol\":926:945  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CollaborativeArt.sol\":918:987  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"contracts/CollaborativeArt.sol\":1383:1386  100 */\n      0x64\n        /* \"contracts/CollaborativeArt.sol\":1360:1380  _ownershipPercentage */\n      dup2\n        /* \"contracts/CollaborativeArt.sol\":1342:1357  totalPercentage */\n      sload(0x05)\n        /* \"contracts/CollaborativeArt.sol\":1342:1380  totalPercentage + _ownershipPercentage */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/CollaborativeArt.sol\":1342:1386  totalPercentage + _ownershipPercentage <=100 */\n      gt\n      iszero\n        /* \"contracts/CollaborativeArt.sol\":1334:1414  require(totalPercentage + _ownershipPercentage <=100,\"Total Ownership max 100%\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/CollaborativeArt.sol\":1425:1448  Artist memory newArtist */\n      0x00\n        /* \"contracts/CollaborativeArt.sol\":1451:1495  Artist(_artistAddress, _ownershipPercentage) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CollaborativeArt.sol\":1458:1472  _artistAddress */\n      dup5\n        /* \"contracts/CollaborativeArt.sol\":1451:1495  Artist(_artistAddress, _ownershipPercentage) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CollaborativeArt.sol\":1474:1494  _ownershipPercentage */\n      dup4\n        /* \"contracts/CollaborativeArt.sol\":1451:1495  Artist(_artistAddress, _ownershipPercentage) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/CollaborativeArt.sol\":1425:1495  Artist memory newArtist = Artist(_artistAddress, _ownershipPercentage) */\n      swap1\n      pop\n        /* \"contracts/CollaborativeArt.sol\":1506:1513  artists */\n      0x01\n        /* \"contracts/CollaborativeArt.sol\":1519:1528  newArtist */\n      dup2\n        /* \"contracts/CollaborativeArt.sol\":1506:1529  artists.push(newArtist) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/CollaborativeArt.sol\":1586:1606  _ownershipPercentage */\n      dup2\n        /* \"contracts/CollaborativeArt.sol\":1540:1567  artistToOwnershipPercentage */\n      0x03\n        /* \"contracts/CollaborativeArt.sol\":1540:1583  artistToOwnershipPercentage[_artistAddress] */\n      0x00\n        /* \"contracts/CollaborativeArt.sol\":1568:1582  _artistAddress */\n      dup6\n        /* \"contracts/CollaborativeArt.sol\":1540:1583  artistToOwnershipPercentage[_artistAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CollaborativeArt.sol\":1540:1606  artistToOwnershipPercentage[_artistAddress] = _ownershipPercentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CollaborativeArt.sol\":1648:1652  true */\n      0x01\n        /* \"contracts/CollaborativeArt.sol\":1617:1629  artistSigned */\n      0x04\n        /* \"contracts/CollaborativeArt.sol\":1617:1645  artistSigned[_artistAddress] */\n      0x00\n        /* \"contracts/CollaborativeArt.sol\":1630:1644  _artistAddress */\n      dup6\n        /* \"contracts/CollaborativeArt.sol\":1617:1645  artistSigned[_artistAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CollaborativeArt.sol\":1617:1652  artistSigned[_artistAddress] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CollaborativeArt.sol\":1682:1702  _ownershipPercentage */\n      dup2\n        /* \"contracts/CollaborativeArt.sol\":1663:1678  totalPercentage */\n      0x05\n      0x00\n        /* \"contracts/CollaborativeArt.sol\":1663:1702  totalPercentage += _ownershipPercentage */\n      dup3\n      dup3\n      sload\n      tag_82\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_82:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CollaborativeArt.sol\":1323:1710  {... */\n      pop\n        /* \"contracts/CollaborativeArt.sol\":1234:1710  function addArtist(address _artistAddress, uint256 _ownershipPercentage) public onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":1754:1851  function setArtworkPrice(uint256 _price) public onlyOwner{... */\n    tag_30:\n        /* \"contracts/CollaborativeArt.sol\":940:945  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CollaborativeArt.sol\":926:945  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CollaborativeArt.sol\":926:936  msg.sender */\n      caller\n        /* \"contracts/CollaborativeArt.sol\":926:945  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CollaborativeArt.sol\":918:987  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_74\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/CollaborativeArt.sol\":1837:1843  _price */\n      dup1\n        /* \"contracts/CollaborativeArt.sol\":1822:1834  artworkPrice */\n      0x06\n        /* \"contracts/CollaborativeArt.sol\":1822:1843  artworkPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CollaborativeArt.sol\":1754:1851  function setArtworkPrice(uint256 _price) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":588:650  mapping(address => uint256) public artistToOwnershipPercentage */\n    tag_34:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":749:776  uint256 public artworkPrice */\n    tag_39:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":493:513  address public owner */\n    tag_43:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":2427:2555  function resolveDispute(string memory _message) public view onlyOwner returns (string memory) {... */\n    tag_50:\n        /* \"contracts/CollaborativeArt.sol\":2506:2519  string memory */\n      0x60\n        /* \"contracts/CollaborativeArt.sol\":940:945  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CollaborativeArt.sol\":926:945  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CollaborativeArt.sol\":926:936  msg.sender */\n      caller\n        /* \"contracts/CollaborativeArt.sol\":926:945  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CollaborativeArt.sol\":918:987  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_74\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/CollaborativeArt.sol\":2539:2547  _message */\n      dup2\n        /* \"contracts/CollaborativeArt.sol\":2532:2547  return _message */\n      swap1\n      pop\n        /* \"contracts/CollaborativeArt.sol\":2427:2555  function resolveDispute(string memory _message) public view onlyOwner returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":1890:2104  function purchaseArtwork() public payable{... */\n    tag_54:\n        /* \"contracts/CollaborativeArt.sol\":1963:1975  artworkPrice */\n      sload(0x06)\n        /* \"contracts/CollaborativeArt.sol\":1950:1959  msg.value */\n      callvalue\n        /* \"contracts/CollaborativeArt.sol\":1950:1975  msg.value == artworkPrice */\n      eq\n        /* \"contracts/CollaborativeArt.sol\":1942:2011  require(msg.value == artworkPrice, \"Payment must equal to art price\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/CollaborativeArt.sol\":2022:2039  distributeFunds() */\n      tag_95\n        /* \"contracts/CollaborativeArt.sol\":2022:2037  distributeFunds */\n      tag_96\n        /* \"contracts/CollaborativeArt.sol\":2022:2039  distributeFunds() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/CollaborativeArt.sol\":2055:2096  ArtworkSold(artworkPrice, \"artwork sold\") */\n      0xd9952cbf75a3b7d22cfb7c2b9c7c00a23513676e5a486e14dcaf74485b483127\n        /* \"contracts/CollaborativeArt.sol\":2067:2079  artworkPrice */\n      sload(0x06)\n        /* \"contracts/CollaborativeArt.sol\":2055:2096  ArtworkSold(artworkPrice, \"artwork sold\") */\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/CollaborativeArt.sol\":1890:2104  function purchaseArtwork() public payable{... */\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":520:543  Artist[] public artists */\n    tag_58:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":708:742  uint256 public totalPercentage = 0 */\n    tag_63:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":550:579  Milestone[] public milestones */\n    tag_68:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/CollaborativeArt.sol\":2134:2393  function distributeFunds() private{... */\n    tag_96:\n        /* \"contracts/CollaborativeArt.sol\":2184:2193  uint256 i */\n      0x00\n        /* \"contracts/CollaborativeArt.sol\":2179:2386  for (uint256 i = 0; i < artists.length; i++){... */\n    tag_110:\n        /* \"contracts/CollaborativeArt.sol\":2203:2210  artists */\n      0x01\n        /* \"contracts/CollaborativeArt.sol\":2203:2217  artists.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/CollaborativeArt.sol\":2199:2200  i */\n      dup2\n        /* \"contracts/CollaborativeArt.sol\":2199:2217  i < artists.length */\n      lt\n        /* \"contracts/CollaborativeArt.sol\":2179:2386  for (uint256 i = 0; i < artists.length; i++){... */\n      iszero\n      tag_111\n      jumpi\n        /* \"contracts/CollaborativeArt.sol\":2238:2258  Artist memory artist */\n      0x00\n        /* \"contracts/CollaborativeArt.sol\":2261:2268  artists */\n      0x01\n        /* \"contracts/CollaborativeArt.sol\":2269:2270  i */\n      dup3\n        /* \"contracts/CollaborativeArt.sol\":2261:2271  artists[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n    tag_113:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/CollaborativeArt.sol\":2238:2271  Artist memory artist = artists[i] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CollaborativeArt.sol\":2294:2300  artist */\n      dup1\n        /* \"contracts/CollaborativeArt.sol\":2294:2314  artist.artistAddress */\n      0x00\n      add\n      mload\n        /* \"contracts/CollaborativeArt.sol\":2286:2324  payable(artist.artistAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CollaborativeArt.sol\":2286:2374  payable(artist.artistAddress).transfer((artworkPrice * artist.ownershipPercentage )/100) */\n      0x08fc\n        /* \"contracts/CollaborativeArt.sol\":2370:2373  100 */\n      0x64\n        /* \"contracts/CollaborativeArt.sol\":2341:2347  artist */\n      dup4\n        /* \"contracts/CollaborativeArt.sol\":2341:2367  artist.ownershipPercentage */\n      0x20\n      add\n      mload\n        /* \"contracts/CollaborativeArt.sol\":2326:2338  artworkPrice */\n      sload(0x06)\n        /* \"contracts/CollaborativeArt.sol\":2326:2367  artworkPrice * artist.ownershipPercentage */\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"contracts/CollaborativeArt.sol\":2325:2373  (artworkPrice * artist.ownershipPercentage )/100 */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/CollaborativeArt.sol\":2286:2374  payable(artist.artistAddress).transfer((artworkPrice * artist.ownershipPercentage )/100) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n        /* \"contracts/CollaborativeArt.sol\":2223:2386  {... */\n      pop\n        /* \"contracts/CollaborativeArt.sol\":2219:2222  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/CollaborativeArt.sol\":2179:2386  for (uint256 i = 0; i < artists.length; i++){... */\n      jump(tag_110)\n    tag_111:\n      pop\n        /* \"contracts/CollaborativeArt.sol\":2134:2393  function distributeFunds() private{... */\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_123:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_124:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_125:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_126:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_127:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_168\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_126\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_128:\n        /* \"#utility.yul\":641:665   */\n      tag_170\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_127\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_171:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_129:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_173\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_128\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_17:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_176\n      tag_124\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":917:1036   */\n    tag_175:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_177\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_129\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_130:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_131:\n        /* \"#utility.yul\":1353:1374   */\n      tag_180\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_130\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_20:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_182\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_131\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1680   */\n    tag_132:\n        /* \"#utility.yul\":1640:1647   */\n      0x00\n        /* \"#utility.yul\":1669:1674   */\n      dup2\n        /* \"#utility.yul\":1658:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1603:1680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1808   */\n    tag_133:\n        /* \"#utility.yul\":1759:1783   */\n      tag_185\n        /* \"#utility.yul\":1777:1782   */\n      dup2\n        /* \"#utility.yul\":1759:1783   */\n      tag_132\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1752:1757   */\n      dup2\n        /* \"#utility.yul\":1749:1784   */\n      eq\n        /* \"#utility.yul\":1739:1802   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1798:1799   */\n      0x00\n        /* \"#utility.yul\":1795:1796   */\n      dup1\n        /* \"#utility.yul\":1788:1800   */\n      revert\n        /* \"#utility.yul\":1739:1802   */\n    tag_186:\n        /* \"#utility.yul\":1686:1808   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1814:1953   */\n    tag_134:\n        /* \"#utility.yul\":1860:1865   */\n      0x00\n        /* \"#utility.yul\":1898:1904   */\n      dup2\n        /* \"#utility.yul\":1885:1905   */\n      calldataload\n        /* \"#utility.yul\":1876:1905   */\n      swap1\n      pop\n        /* \"#utility.yul\":1914:1947   */\n      tag_188\n        /* \"#utility.yul\":1941:1946   */\n      dup2\n        /* \"#utility.yul\":1914:1947   */\n      tag_133\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1814:1953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2433   */\n    tag_24:\n        /* \"#utility.yul\":2027:2033   */\n      0x00\n        /* \"#utility.yul\":2035:2041   */\n      dup1\n        /* \"#utility.yul\":2084:2086   */\n      0x40\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2063:2070   */\n      dup6\n        /* \"#utility.yul\":2059:2082   */\n      sub\n        /* \"#utility.yul\":2055:2087   */\n      slt\n        /* \"#utility.yul\":2052:2171   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2090:2169   */\n      tag_191\n      tag_124\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2052:2171   */\n    tag_190:\n        /* \"#utility.yul\":2210:2211   */\n      0x00\n        /* \"#utility.yul\":2235:2288   */\n      tag_192\n        /* \"#utility.yul\":2280:2287   */\n      dup6\n        /* \"#utility.yul\":2271:2277   */\n      dup3\n        /* \"#utility.yul\":2260:2269   */\n      dup7\n        /* \"#utility.yul\":2256:2278   */\n      add\n        /* \"#utility.yul\":2235:2288   */\n      tag_129\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2225:2288   */\n      swap3\n      pop\n        /* \"#utility.yul\":2181:2298   */\n      pop\n        /* \"#utility.yul\":2337:2339   */\n      0x20\n        /* \"#utility.yul\":2363:2416   */\n      tag_193\n        /* \"#utility.yul\":2408:2415   */\n      dup6\n        /* \"#utility.yul\":2399:2405   */\n      dup3\n        /* \"#utility.yul\":2388:2397   */\n      dup7\n        /* \"#utility.yul\":2384:2406   */\n      add\n        /* \"#utility.yul\":2363:2416   */\n      tag_134\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2353:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2308:2426   */\n      pop\n        /* \"#utility.yul\":1959:2433   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2439:2768   */\n    tag_29:\n        /* \"#utility.yul\":2498:2504   */\n      0x00\n        /* \"#utility.yul\":2547:2549   */\n      0x20\n        /* \"#utility.yul\":2535:2544   */\n      dup3\n        /* \"#utility.yul\":2526:2533   */\n      dup5\n        /* \"#utility.yul\":2522:2545   */\n      sub\n        /* \"#utility.yul\":2518:2550   */\n      slt\n        /* \"#utility.yul\":2515:2634   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2553:2632   */\n      tag_196\n      tag_124\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2515:2634   */\n    tag_195:\n        /* \"#utility.yul\":2673:2674   */\n      0x00\n        /* \"#utility.yul\":2698:2751   */\n      tag_197\n        /* \"#utility.yul\":2743:2750   */\n      dup5\n        /* \"#utility.yul\":2734:2740   */\n      dup3\n        /* \"#utility.yul\":2723:2732   */\n      dup6\n        /* \"#utility.yul\":2719:2741   */\n      add\n        /* \"#utility.yul\":2698:2751   */\n      tag_134\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2688:2751   */\n      swap2\n      pop\n        /* \"#utility.yul\":2644:2761   */\n      pop\n        /* \"#utility.yul\":2439:2768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2774:2892   */\n    tag_135:\n        /* \"#utility.yul\":2861:2885   */\n      tag_199\n        /* \"#utility.yul\":2879:2884   */\n      dup2\n        /* \"#utility.yul\":2861:2885   */\n      tag_132\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2856:2859   */\n      dup3\n        /* \"#utility.yul\":2849:2886   */\n      mstore\n        /* \"#utility.yul\":2774:2892   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2898:3120   */\n    tag_36:\n        /* \"#utility.yul\":2991:2995   */\n      0x00\n        /* \"#utility.yul\":3029:3031   */\n      0x20\n        /* \"#utility.yul\":3018:3027   */\n      dup3\n        /* \"#utility.yul\":3014:3032   */\n      add\n        /* \"#utility.yul\":3006:3032   */\n      swap1\n      pop\n        /* \"#utility.yul\":3042:3113   */\n      tag_201\n        /* \"#utility.yul\":3110:3111   */\n      0x00\n        /* \"#utility.yul\":3099:3108   */\n      dup4\n        /* \"#utility.yul\":3095:3112   */\n      add\n        /* \"#utility.yul\":3086:3092   */\n      dup5\n        /* \"#utility.yul\":3042:3113   */\n      tag_135\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2898:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3244   */\n    tag_136:\n        /* \"#utility.yul\":3213:3237   */\n      tag_203\n        /* \"#utility.yul\":3231:3236   */\n      dup2\n        /* \"#utility.yul\":3213:3237   */\n      tag_127\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3208:3211   */\n      dup3\n        /* \"#utility.yul\":3201:3238   */\n      mstore\n        /* \"#utility.yul\":3126:3244   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3250:3472   */\n    tag_45:\n        /* \"#utility.yul\":3343:3347   */\n      0x00\n        /* \"#utility.yul\":3381:3383   */\n      0x20\n        /* \"#utility.yul\":3370:3379   */\n      dup3\n        /* \"#utility.yul\":3366:3384   */\n      add\n        /* \"#utility.yul\":3358:3384   */\n      swap1\n      pop\n        /* \"#utility.yul\":3394:3465   */\n      tag_205\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3394:3465   */\n      tag_136\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3250:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3595   */\n    tag_137:\n        /* \"#utility.yul\":3587:3588   */\n      0x00\n        /* \"#utility.yul\":3584:3585   */\n      dup1\n        /* \"#utility.yul\":3577:3589   */\n      revert\n        /* \"#utility.yul\":3601:3718   */\n    tag_138:\n        /* \"#utility.yul\":3710:3711   */\n      0x00\n        /* \"#utility.yul\":3707:3708   */\n      dup1\n        /* \"#utility.yul\":3700:3712   */\n      revert\n        /* \"#utility.yul\":3724:3826   */\n    tag_139:\n        /* \"#utility.yul\":3765:3771   */\n      0x00\n        /* \"#utility.yul\":3816:3818   */\n      0x1f\n        /* \"#utility.yul\":3812:3819   */\n      not\n        /* \"#utility.yul\":3807:3809   */\n      0x1f\n        /* \"#utility.yul\":3800:3805   */\n      dup4\n        /* \"#utility.yul\":3796:3810   */\n      add\n        /* \"#utility.yul\":3792:3820   */\n      and\n        /* \"#utility.yul\":3782:3820   */\n      swap1\n      pop\n        /* \"#utility.yul\":3724:3826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3832:4012   */\n    tag_140:\n        /* \"#utility.yul\":3880:3957   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3877:3878   */\n      0x00\n        /* \"#utility.yul\":3870:3958   */\n      mstore\n        /* \"#utility.yul\":3977:3981   */\n      0x41\n        /* \"#utility.yul\":3974:3975   */\n      0x04\n        /* \"#utility.yul\":3967:3982   */\n      mstore\n        /* \"#utility.yul\":4001:4005   */\n      0x24\n        /* \"#utility.yul\":3998:3999   */\n      0x00\n        /* \"#utility.yul\":3991:4006   */\n      revert\n        /* \"#utility.yul\":4018:4299   */\n    tag_141:\n        /* \"#utility.yul\":4101:4128   */\n      tag_211\n        /* \"#utility.yul\":4123:4127   */\n      dup3\n        /* \"#utility.yul\":4101:4128   */\n      tag_139\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4093:4099   */\n      dup2\n        /* \"#utility.yul\":4089:4129   */\n      add\n        /* \"#utility.yul\":4231:4237   */\n      dup2\n        /* \"#utility.yul\":4219:4229   */\n      dup2\n        /* \"#utility.yul\":4216:4238   */\n      lt\n        /* \"#utility.yul\":4195:4213   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4183:4193   */\n      dup3\n        /* \"#utility.yul\":4180:4214   */\n      gt\n        /* \"#utility.yul\":4177:4239   */\n      or\n        /* \"#utility.yul\":4174:4262   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":4242:4260   */\n      tag_213\n      tag_140\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4174:4262   */\n    tag_212:\n        /* \"#utility.yul\":4282:4292   */\n      dup1\n        /* \"#utility.yul\":4278:4280   */\n      0x40\n        /* \"#utility.yul\":4271:4293   */\n      mstore\n        /* \"#utility.yul\":4061:4299   */\n      pop\n        /* \"#utility.yul\":4018:4299   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4305:4434   */\n    tag_142:\n        /* \"#utility.yul\":4339:4345   */\n      0x00\n        /* \"#utility.yul\":4366:4386   */\n      tag_215\n      tag_123\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4356:4386   */\n      swap1\n      pop\n        /* \"#utility.yul\":4395:4428   */\n      tag_216\n        /* \"#utility.yul\":4423:4427   */\n      dup3\n        /* \"#utility.yul\":4415:4421   */\n      dup3\n        /* \"#utility.yul\":4395:4428   */\n      tag_141\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4305:4434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4440:4748   */\n    tag_143:\n        /* \"#utility.yul\":4502:4506   */\n      0x00\n        /* \"#utility.yul\":4592:4610   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4584:4590   */\n      dup3\n        /* \"#utility.yul\":4581:4611   */\n      gt\n        /* \"#utility.yul\":4578:4634   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":4614:4632   */\n      tag_219\n      tag_140\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4578:4634   */\n    tag_218:\n        /* \"#utility.yul\":4652:4681   */\n      tag_220\n        /* \"#utility.yul\":4674:4680   */\n      dup3\n        /* \"#utility.yul\":4652:4681   */\n      tag_139\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4644:4681   */\n      swap1\n      pop\n        /* \"#utility.yul\":4736:4740   */\n      0x20\n        /* \"#utility.yul\":4730:4734   */\n      dup2\n        /* \"#utility.yul\":4726:4741   */\n      add\n        /* \"#utility.yul\":4718:4741   */\n      swap1\n      pop\n        /* \"#utility.yul\":4440:4748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4754:4900   */\n    tag_144:\n        /* \"#utility.yul\":4851:4857   */\n      dup3\n        /* \"#utility.yul\":4846:4849   */\n      dup2\n        /* \"#utility.yul\":4841:4844   */\n      dup4\n        /* \"#utility.yul\":4828:4858   */\n      calldatacopy\n        /* \"#utility.yul\":4892:4893   */\n      0x00\n        /* \"#utility.yul\":4883:4889   */\n      dup4\n        /* \"#utility.yul\":4878:4881   */\n      dup4\n        /* \"#utility.yul\":4874:4890   */\n      add\n        /* \"#utility.yul\":4867:4894   */\n      mstore\n        /* \"#utility.yul\":4754:4900   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4906:5331   */\n    tag_145:\n        /* \"#utility.yul\":4984:4989   */\n      0x00\n        /* \"#utility.yul\":5009:5075   */\n      tag_223\n        /* \"#utility.yul\":5025:5074   */\n      tag_224\n        /* \"#utility.yul\":5067:5073   */\n      dup5\n        /* \"#utility.yul\":5025:5074   */\n      tag_143\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5009:5075   */\n      tag_142\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5000:5075   */\n      swap1\n      pop\n        /* \"#utility.yul\":5098:5104   */\n      dup3\n        /* \"#utility.yul\":5091:5096   */\n      dup2\n        /* \"#utility.yul\":5084:5105   */\n      mstore\n        /* \"#utility.yul\":5136:5140   */\n      0x20\n        /* \"#utility.yul\":5129:5134   */\n      dup2\n        /* \"#utility.yul\":5125:5141   */\n      add\n        /* \"#utility.yul\":5174:5177   */\n      dup5\n        /* \"#utility.yul\":5165:5171   */\n      dup5\n        /* \"#utility.yul\":5160:5163   */\n      dup5\n        /* \"#utility.yul\":5156:5172   */\n      add\n        /* \"#utility.yul\":5153:5178   */\n      gt\n        /* \"#utility.yul\":5150:5262   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":5181:5260   */\n      tag_226\n      tag_138\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5150:5262   */\n    tag_225:\n        /* \"#utility.yul\":5271:5325   */\n      tag_227\n        /* \"#utility.yul\":5318:5324   */\n      dup5\n        /* \"#utility.yul\":5313:5316   */\n      dup3\n        /* \"#utility.yul\":5308:5311   */\n      dup6\n        /* \"#utility.yul\":5271:5325   */\n      tag_144\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4990:5331   */\n      pop\n        /* \"#utility.yul\":4906:5331   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5351:5691   */\n    tag_146:\n        /* \"#utility.yul\":5407:5412   */\n      0x00\n        /* \"#utility.yul\":5456:5459   */\n      dup3\n        /* \"#utility.yul\":5449:5453   */\n      0x1f\n        /* \"#utility.yul\":5441:5447   */\n      dup4\n        /* \"#utility.yul\":5437:5454   */\n      add\n        /* \"#utility.yul\":5433:5460   */\n      slt\n        /* \"#utility.yul\":5423:5545   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":5464:5543   */\n      tag_230\n      tag_137\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5423:5545   */\n    tag_229:\n        /* \"#utility.yul\":5581:5587   */\n      dup2\n        /* \"#utility.yul\":5568:5588   */\n      calldataload\n        /* \"#utility.yul\":5606:5685   */\n      tag_231\n        /* \"#utility.yul\":5681:5684   */\n      dup5\n        /* \"#utility.yul\":5673:5679   */\n      dup3\n        /* \"#utility.yul\":5666:5670   */\n      0x20\n        /* \"#utility.yul\":5658:5664   */\n      dup7\n        /* \"#utility.yul\":5654:5671   */\n      add\n        /* \"#utility.yul\":5606:5685   */\n      tag_145\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5597:5685   */\n      swap2\n      pop\n        /* \"#utility.yul\":5413:5691   */\n      pop\n        /* \"#utility.yul\":5351:5691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5697:6206   */\n    tag_49:\n        /* \"#utility.yul\":5766:5772   */\n      0x00\n        /* \"#utility.yul\":5815:5817   */\n      0x20\n        /* \"#utility.yul\":5803:5812   */\n      dup3\n        /* \"#utility.yul\":5794:5801   */\n      dup5\n        /* \"#utility.yul\":5790:5813   */\n      sub\n        /* \"#utility.yul\":5786:5818   */\n      slt\n        /* \"#utility.yul\":5783:5902   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":5821:5900   */\n      tag_234\n      tag_124\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5783:5902   */\n    tag_233:\n        /* \"#utility.yul\":5969:5970   */\n      0x00\n        /* \"#utility.yul\":5958:5967   */\n      dup3\n        /* \"#utility.yul\":5954:5971   */\n      add\n        /* \"#utility.yul\":5941:5972   */\n      calldataload\n        /* \"#utility.yul\":5999:6017   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5991:5997   */\n      dup2\n        /* \"#utility.yul\":5988:6018   */\n      gt\n        /* \"#utility.yul\":5985:6102   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":6021:6100   */\n      tag_236\n      tag_125\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5985:6102   */\n    tag_235:\n        /* \"#utility.yul\":6126:6189   */\n      tag_237\n        /* \"#utility.yul\":6181:6188   */\n      dup5\n        /* \"#utility.yul\":6172:6178   */\n      dup3\n        /* \"#utility.yul\":6161:6170   */\n      dup6\n        /* \"#utility.yul\":6157:6179   */\n      add\n        /* \"#utility.yul\":6126:6189   */\n      tag_146\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6116:6189   */\n      swap2\n      pop\n        /* \"#utility.yul\":5912:6199   */\n      pop\n        /* \"#utility.yul\":5697:6206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6212:6311   */\n    tag_147:\n        /* \"#utility.yul\":6264:6270   */\n      0x00\n        /* \"#utility.yul\":6298:6303   */\n      dup2\n        /* \"#utility.yul\":6292:6304   */\n      mload\n        /* \"#utility.yul\":6282:6304   */\n      swap1\n      pop\n        /* \"#utility.yul\":6212:6311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6317:6486   */\n    tag_148:\n        /* \"#utility.yul\":6401:6412   */\n      0x00\n        /* \"#utility.yul\":6435:6441   */\n      dup3\n        /* \"#utility.yul\":6430:6433   */\n      dup3\n        /* \"#utility.yul\":6423:6442   */\n      mstore\n        /* \"#utility.yul\":6475:6479   */\n      0x20\n        /* \"#utility.yul\":6470:6473   */\n      dup3\n        /* \"#utility.yul\":6466:6480   */\n      add\n        /* \"#utility.yul\":6451:6480   */\n      swap1\n      pop\n        /* \"#utility.yul\":6317:6486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6492:6738   */\n    tag_149:\n        /* \"#utility.yul\":6573:6574   */\n      0x00\n        /* \"#utility.yul\":6583:6696   */\n    tag_241:\n        /* \"#utility.yul\":6597:6603   */\n      dup4\n        /* \"#utility.yul\":6594:6595   */\n      dup2\n        /* \"#utility.yul\":6591:6604   */\n      lt\n        /* \"#utility.yul\":6583:6696   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":6682:6683   */\n      dup1\n        /* \"#utility.yul\":6677:6680   */\n      dup3\n        /* \"#utility.yul\":6673:6684   */\n      add\n        /* \"#utility.yul\":6667:6685   */\n      mload\n        /* \"#utility.yul\":6663:6664   */\n      dup2\n        /* \"#utility.yul\":6658:6661   */\n      dup5\n        /* \"#utility.yul\":6654:6665   */\n      add\n        /* \"#utility.yul\":6647:6686   */\n      mstore\n        /* \"#utility.yul\":6619:6621   */\n      0x20\n        /* \"#utility.yul\":6616:6617   */\n      dup2\n        /* \"#utility.yul\":6612:6622   */\n      add\n        /* \"#utility.yul\":6607:6622   */\n      swap1\n      pop\n        /* \"#utility.yul\":6583:6696   */\n      jump(tag_241)\n    tag_243:\n        /* \"#utility.yul\":6730:6731   */\n      0x00\n        /* \"#utility.yul\":6721:6727   */\n      dup5\n        /* \"#utility.yul\":6716:6719   */\n      dup5\n        /* \"#utility.yul\":6712:6728   */\n      add\n        /* \"#utility.yul\":6705:6732   */\n      mstore\n        /* \"#utility.yul\":6554:6738   */\n      pop\n        /* \"#utility.yul\":6492:6738   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6744:7121   */\n    tag_150:\n        /* \"#utility.yul\":6832:6835   */\n      0x00\n        /* \"#utility.yul\":6860:6899   */\n      tag_245\n        /* \"#utility.yul\":6893:6898   */\n      dup3\n        /* \"#utility.yul\":6860:6899   */\n      tag_147\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6915:6986   */\n      tag_246\n        /* \"#utility.yul\":6979:6985   */\n      dup2\n        /* \"#utility.yul\":6974:6977   */\n      dup6\n        /* \"#utility.yul\":6915:6986   */\n      tag_148\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6908:6986   */\n      swap4\n      pop\n        /* \"#utility.yul\":6995:7060   */\n      tag_247\n        /* \"#utility.yul\":7053:7059   */\n      dup2\n        /* \"#utility.yul\":7048:7051   */\n      dup6\n        /* \"#utility.yul\":7041:7045   */\n      0x20\n        /* \"#utility.yul\":7034:7039   */\n      dup7\n        /* \"#utility.yul\":7030:7046   */\n      add\n        /* \"#utility.yul\":6995:7060   */\n      tag_149\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7085:7114   */\n      tag_248\n        /* \"#utility.yul\":7107:7113   */\n      dup2\n        /* \"#utility.yul\":7085:7114   */\n      tag_139\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7080:7083   */\n      dup5\n        /* \"#utility.yul\":7076:7115   */\n      add\n        /* \"#utility.yul\":7069:7115   */\n      swap2\n      pop\n        /* \"#utility.yul\":6836:7121   */\n      pop\n        /* \"#utility.yul\":6744:7121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7127:7440   */\n    tag_52:\n        /* \"#utility.yul\":7240:7244   */\n      0x00\n        /* \"#utility.yul\":7278:7280   */\n      0x20\n        /* \"#utility.yul\":7267:7276   */\n      dup3\n        /* \"#utility.yul\":7263:7281   */\n      add\n        /* \"#utility.yul\":7255:7281   */\n      swap1\n      pop\n        /* \"#utility.yul\":7327:7336   */\n      dup2\n        /* \"#utility.yul\":7321:7325   */\n      dup2\n        /* \"#utility.yul\":7317:7337   */\n      sub\n        /* \"#utility.yul\":7313:7314   */\n      0x00\n        /* \"#utility.yul\":7302:7311   */\n      dup4\n        /* \"#utility.yul\":7298:7315   */\n      add\n        /* \"#utility.yul\":7291:7338   */\n      mstore\n        /* \"#utility.yul\":7355:7433   */\n      tag_250\n        /* \"#utility.yul\":7428:7432   */\n      dup2\n        /* \"#utility.yul\":7419:7425   */\n      dup5\n        /* \"#utility.yul\":7355:7433   */\n      tag_150\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7347:7433   */\n      swap1\n      pop\n        /* \"#utility.yul\":7127:7440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7446:7778   */\n    tag_60:\n        /* \"#utility.yul\":7567:7571   */\n      0x00\n        /* \"#utility.yul\":7605:7607   */\n      0x40\n        /* \"#utility.yul\":7594:7603   */\n      dup3\n        /* \"#utility.yul\":7590:7608   */\n      add\n        /* \"#utility.yul\":7582:7608   */\n      swap1\n      pop\n        /* \"#utility.yul\":7618:7689   */\n      tag_252\n        /* \"#utility.yul\":7686:7687   */\n      0x00\n        /* \"#utility.yul\":7675:7684   */\n      dup4\n        /* \"#utility.yul\":7671:7688   */\n      add\n        /* \"#utility.yul\":7662:7668   */\n      dup6\n        /* \"#utility.yul\":7618:7689   */\n      tag_136\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7699:7771   */\n      tag_253\n        /* \"#utility.yul\":7767:7769   */\n      0x20\n        /* \"#utility.yul\":7756:7765   */\n      dup4\n        /* \"#utility.yul\":7752:7770   */\n      add\n        /* \"#utility.yul\":7743:7749   */\n      dup5\n        /* \"#utility.yul\":7699:7771   */\n      tag_135\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7446:7778   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7784:8305   */\n    tag_70:\n        /* \"#utility.yul\":7947:7951   */\n      0x00\n        /* \"#utility.yul\":7985:7987   */\n      0x60\n        /* \"#utility.yul\":7974:7983   */\n      dup3\n        /* \"#utility.yul\":7970:7988   */\n      add\n        /* \"#utility.yul\":7962:7988   */\n      swap1\n      pop\n        /* \"#utility.yul\":8034:8043   */\n      dup2\n        /* \"#utility.yul\":8028:8032   */\n      dup2\n        /* \"#utility.yul\":8024:8044   */\n      sub\n        /* \"#utility.yul\":8020:8021   */\n      0x00\n        /* \"#utility.yul\":8009:8018   */\n      dup4\n        /* \"#utility.yul\":8005:8022   */\n      add\n        /* \"#utility.yul\":7998:8045   */\n      mstore\n        /* \"#utility.yul\":8062:8140   */\n      tag_255\n        /* \"#utility.yul\":8135:8139   */\n      dup2\n        /* \"#utility.yul\":8126:8132   */\n      dup7\n        /* \"#utility.yul\":8062:8140   */\n      tag_150\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8054:8140   */\n      swap1\n      pop\n        /* \"#utility.yul\":8150:8222   */\n      tag_256\n        /* \"#utility.yul\":8218:8220   */\n      0x20\n        /* \"#utility.yul\":8207:8216   */\n      dup4\n        /* \"#utility.yul\":8203:8221   */\n      add\n        /* \"#utility.yul\":8194:8200   */\n      dup6\n        /* \"#utility.yul\":8150:8222   */\n      tag_135\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8232:8298   */\n      tag_257\n        /* \"#utility.yul\":8294:8296   */\n      0x40\n        /* \"#utility.yul\":8283:8292   */\n      dup4\n        /* \"#utility.yul\":8279:8297   */\n      add\n        /* \"#utility.yul\":8270:8276   */\n      dup5\n        /* \"#utility.yul\":8232:8298   */\n      tag_131\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7784:8305   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8311:8535   */\n    tag_151:\n        /* \"#utility.yul\":8451:8485   */\n      0x4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e\n        /* \"#utility.yul\":8447:8448   */\n      0x00\n        /* \"#utility.yul\":8439:8445   */\n      dup3\n        /* \"#utility.yul\":8435:8449   */\n      add\n        /* \"#utility.yul\":8428:8486   */\n      mstore\n        /* \"#utility.yul\":8520:8527   */\n      0x6374696f6e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8515:8517   */\n      0x20\n        /* \"#utility.yul\":8507:8513   */\n      dup3\n        /* \"#utility.yul\":8503:8518   */\n      add\n        /* \"#utility.yul\":8496:8528   */\n      mstore\n        /* \"#utility.yul\":8311:8535   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8541:8907   */\n    tag_152:\n        /* \"#utility.yul\":8683:8686   */\n      0x00\n        /* \"#utility.yul\":8704:8771   */\n      tag_260\n        /* \"#utility.yul\":8768:8770   */\n      0x25\n        /* \"#utility.yul\":8763:8766   */\n      dup4\n        /* \"#utility.yul\":8704:8771   */\n      tag_148\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8697:8771   */\n      swap2\n      pop\n        /* \"#utility.yul\":8780:8873   */\n      tag_261\n        /* \"#utility.yul\":8869:8872   */\n      dup3\n        /* \"#utility.yul\":8780:8873   */\n      tag_151\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8898:8900   */\n      0x40\n        /* \"#utility.yul\":8893:8896   */\n      dup3\n        /* \"#utility.yul\":8889:8901   */\n      add\n        /* \"#utility.yul\":8882:8901   */\n      swap1\n      pop\n        /* \"#utility.yul\":8541:8907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8913:9332   */\n    tag_74:\n        /* \"#utility.yul\":9079:9083   */\n      0x00\n        /* \"#utility.yul\":9117:9119   */\n      0x20\n        /* \"#utility.yul\":9106:9115   */\n      dup3\n        /* \"#utility.yul\":9102:9120   */\n      add\n        /* \"#utility.yul\":9094:9120   */\n      swap1\n      pop\n        /* \"#utility.yul\":9166:9175   */\n      dup2\n        /* \"#utility.yul\":9160:9164   */\n      dup2\n        /* \"#utility.yul\":9156:9176   */\n      sub\n        /* \"#utility.yul\":9152:9153   */\n      0x00\n        /* \"#utility.yul\":9141:9150   */\n      dup4\n        /* \"#utility.yul\":9137:9154   */\n      add\n        /* \"#utility.yul\":9130:9177   */\n      mstore\n        /* \"#utility.yul\":9194:9325   */\n      tag_263\n        /* \"#utility.yul\":9320:9324   */\n      dup2\n        /* \"#utility.yul\":9194:9325   */\n      tag_152\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9186:9325   */\n      swap1\n      pop\n        /* \"#utility.yul\":8913:9332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9338:9518   */\n    tag_153:\n        /* \"#utility.yul\":9386:9463   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9383:9384   */\n      0x00\n        /* \"#utility.yul\":9376:9464   */\n      mstore\n        /* \"#utility.yul\":9483:9487   */\n      0x11\n        /* \"#utility.yul\":9480:9481   */\n      0x04\n        /* \"#utility.yul\":9473:9488   */\n      mstore\n        /* \"#utility.yul\":9507:9511   */\n      0x24\n        /* \"#utility.yul\":9504:9505   */\n      0x00\n        /* \"#utility.yul\":9497:9512   */\n      revert\n        /* \"#utility.yul\":9524:9715   */\n    tag_77:\n        /* \"#utility.yul\":9564:9567   */\n      0x00\n        /* \"#utility.yul\":9583:9603   */\n      tag_266\n        /* \"#utility.yul\":9601:9602   */\n      dup3\n        /* \"#utility.yul\":9583:9603   */\n      tag_132\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9578:9603   */\n      swap2\n      pop\n        /* \"#utility.yul\":9617:9637   */\n      tag_267\n        /* \"#utility.yul\":9635:9636   */\n      dup4\n        /* \"#utility.yul\":9617:9637   */\n      tag_132\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9612:9637   */\n      swap3\n      pop\n        /* \"#utility.yul\":9660:9661   */\n      dup3\n        /* \"#utility.yul\":9657:9658   */\n      dup3\n        /* \"#utility.yul\":9653:9662   */\n      add\n        /* \"#utility.yul\":9646:9662   */\n      swap1\n      pop\n        /* \"#utility.yul\":9681:9684   */\n      dup1\n        /* \"#utility.yul\":9678:9679   */\n      dup3\n        /* \"#utility.yul\":9675:9685   */\n      gt\n        /* \"#utility.yul\":9672:9708   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":9688:9706   */\n      tag_269\n      tag_153\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9672:9708   */\n    tag_268:\n        /* \"#utility.yul\":9524:9715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9721:9895   */\n    tag_154:\n        /* \"#utility.yul\":9861:9887   */\n      0x546f74616c204f776e657273686970206d617820313030250000000000000000\n        /* \"#utility.yul\":9857:9858   */\n      0x00\n        /* \"#utility.yul\":9849:9855   */\n      dup3\n        /* \"#utility.yul\":9845:9859   */\n      add\n        /* \"#utility.yul\":9838:9888   */\n      mstore\n        /* \"#utility.yul\":9721:9895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9901:10267   */\n    tag_155:\n        /* \"#utility.yul\":10043:10046   */\n      0x00\n        /* \"#utility.yul\":10064:10131   */\n      tag_272\n        /* \"#utility.yul\":10128:10130   */\n      0x18\n        /* \"#utility.yul\":10123:10126   */\n      dup4\n        /* \"#utility.yul\":10064:10131   */\n      tag_148\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10057:10131   */\n      swap2\n      pop\n        /* \"#utility.yul\":10140:10233   */\n      tag_273\n        /* \"#utility.yul\":10229:10232   */\n      dup3\n        /* \"#utility.yul\":10140:10233   */\n      tag_154\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10258:10260   */\n      0x20\n        /* \"#utility.yul\":10253:10256   */\n      dup3\n        /* \"#utility.yul\":10249:10261   */\n      add\n        /* \"#utility.yul\":10242:10261   */\n      swap1\n      pop\n        /* \"#utility.yul\":9901:10267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10273:10692   */\n    tag_80:\n        /* \"#utility.yul\":10439:10443   */\n      0x00\n        /* \"#utility.yul\":10477:10479   */\n      0x20\n        /* \"#utility.yul\":10466:10475   */\n      dup3\n        /* \"#utility.yul\":10462:10480   */\n      add\n        /* \"#utility.yul\":10454:10480   */\n      swap1\n      pop\n        /* \"#utility.yul\":10526:10535   */\n      dup2\n        /* \"#utility.yul\":10520:10524   */\n      dup2\n        /* \"#utility.yul\":10516:10536   */\n      sub\n        /* \"#utility.yul\":10512:10513   */\n      0x00\n        /* \"#utility.yul\":10501:10510   */\n      dup4\n        /* \"#utility.yul\":10497:10514   */\n      add\n        /* \"#utility.yul\":10490:10537   */\n      mstore\n        /* \"#utility.yul\":10554:10685   */\n      tag_275\n        /* \"#utility.yul\":10680:10684   */\n      dup2\n        /* \"#utility.yul\":10554:10685   */\n      tag_155\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10546:10685   */\n      swap1\n      pop\n        /* \"#utility.yul\":10273:10692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10698:10879   */\n    tag_156:\n        /* \"#utility.yul\":10838:10871   */\n      0x5061796d656e74206d75737420657175616c20746f2061727420707269636500\n        /* \"#utility.yul\":10834:10835   */\n      0x00\n        /* \"#utility.yul\":10826:10832   */\n      dup3\n        /* \"#utility.yul\":10822:10836   */\n      add\n        /* \"#utility.yul\":10815:10872   */\n      mstore\n        /* \"#utility.yul\":10698:10879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10885:11251   */\n    tag_157:\n        /* \"#utility.yul\":11027:11030   */\n      0x00\n        /* \"#utility.yul\":11048:11115   */\n      tag_278\n        /* \"#utility.yul\":11112:11114   */\n      0x1f\n        /* \"#utility.yul\":11107:11110   */\n      dup4\n        /* \"#utility.yul\":11048:11115   */\n      tag_148\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":11041:11115   */\n      swap2\n      pop\n        /* \"#utility.yul\":11124:11217   */\n      tag_279\n        /* \"#utility.yul\":11213:11216   */\n      dup3\n        /* \"#utility.yul\":11124:11217   */\n      tag_156\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11242:11244   */\n      0x20\n        /* \"#utility.yul\":11237:11240   */\n      dup3\n        /* \"#utility.yul\":11233:11245   */\n      add\n        /* \"#utility.yul\":11226:11245   */\n      swap1\n      pop\n        /* \"#utility.yul\":10885:11251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11257:11676   */\n    tag_94:\n        /* \"#utility.yul\":11423:11427   */\n      0x00\n        /* \"#utility.yul\":11461:11463   */\n      0x20\n        /* \"#utility.yul\":11450:11459   */\n      dup3\n        /* \"#utility.yul\":11446:11464   */\n      add\n        /* \"#utility.yul\":11438:11464   */\n      swap1\n      pop\n        /* \"#utility.yul\":11510:11519   */\n      dup2\n        /* \"#utility.yul\":11504:11508   */\n      dup2\n        /* \"#utility.yul\":11500:11520   */\n      sub\n        /* \"#utility.yul\":11496:11497   */\n      0x00\n        /* \"#utility.yul\":11485:11494   */\n      dup4\n        /* \"#utility.yul\":11481:11498   */\n      add\n        /* \"#utility.yul\":11474:11521   */\n      mstore\n        /* \"#utility.yul\":11538:11669   */\n      tag_281\n        /* \"#utility.yul\":11664:11668   */\n      dup2\n        /* \"#utility.yul\":11538:11669   */\n      tag_157\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11530:11669   */\n      swap1\n      pop\n        /* \"#utility.yul\":11257:11676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11682:11844   */\n    tag_158:\n        /* \"#utility.yul\":11822:11836   */\n      0x617274776f726b20736f6c640000000000000000000000000000000000000000\n        /* \"#utility.yul\":11818:11819   */\n      0x00\n        /* \"#utility.yul\":11810:11816   */\n      dup3\n        /* \"#utility.yul\":11806:11820   */\n      add\n        /* \"#utility.yul\":11799:11837   */\n      mstore\n        /* \"#utility.yul\":11682:11844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11850:12216   */\n    tag_159:\n        /* \"#utility.yul\":11992:11995   */\n      0x00\n        /* \"#utility.yul\":12013:12080   */\n      tag_284\n        /* \"#utility.yul\":12077:12079   */\n      0x0c\n        /* \"#utility.yul\":12072:12075   */\n      dup4\n        /* \"#utility.yul\":12013:12080   */\n      tag_148\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":12006:12080   */\n      swap2\n      pop\n        /* \"#utility.yul\":12089:12182   */\n      tag_285\n        /* \"#utility.yul\":12178:12181   */\n      dup3\n        /* \"#utility.yul\":12089:12182   */\n      tag_158\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":12207:12209   */\n      0x20\n        /* \"#utility.yul\":12202:12205   */\n      dup3\n        /* \"#utility.yul\":12198:12210   */\n      add\n        /* \"#utility.yul\":12191:12210   */\n      swap1\n      pop\n        /* \"#utility.yul\":11850:12216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12222:12751   */\n    tag_98:\n        /* \"#utility.yul\":12416:12420   */\n      0x00\n        /* \"#utility.yul\":12454:12456   */\n      0x40\n        /* \"#utility.yul\":12443:12452   */\n      dup3\n        /* \"#utility.yul\":12439:12457   */\n      add\n        /* \"#utility.yul\":12431:12457   */\n      swap1\n      pop\n        /* \"#utility.yul\":12467:12538   */\n      tag_287\n        /* \"#utility.yul\":12535:12536   */\n      0x00\n        /* \"#utility.yul\":12524:12533   */\n      dup4\n        /* \"#utility.yul\":12520:12537   */\n      add\n        /* \"#utility.yul\":12511:12517   */\n      dup5\n        /* \"#utility.yul\":12467:12538   */\n      tag_135\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12585:12594   */\n      dup2\n        /* \"#utility.yul\":12579:12583   */\n      dup2\n        /* \"#utility.yul\":12575:12595   */\n      sub\n        /* \"#utility.yul\":12570:12572   */\n      0x20\n        /* \"#utility.yul\":12559:12568   */\n      dup4\n        /* \"#utility.yul\":12555:12573   */\n      add\n        /* \"#utility.yul\":12548:12596   */\n      mstore\n        /* \"#utility.yul\":12613:12744   */\n      tag_288\n        /* \"#utility.yul\":12739:12743   */\n      dup2\n        /* \"#utility.yul\":12613:12744   */\n      tag_159\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12605:12744   */\n      swap1\n      pop\n        /* \"#utility.yul\":12222:12751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12757:12937   */\n    tag_160:\n        /* \"#utility.yul\":12805:12882   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12802:12803   */\n      0x00\n        /* \"#utility.yul\":12795:12883   */\n      mstore\n        /* \"#utility.yul\":12902:12906   */\n      0x22\n        /* \"#utility.yul\":12899:12900   */\n      0x04\n        /* \"#utility.yul\":12892:12907   */\n      mstore\n        /* \"#utility.yul\":12926:12930   */\n      0x24\n        /* \"#utility.yul\":12923:12924   */\n      0x00\n        /* \"#utility.yul\":12916:12931   */\n      revert\n        /* \"#utility.yul\":12943:13263   */\n    tag_104:\n        /* \"#utility.yul\":12987:12993   */\n      0x00\n        /* \"#utility.yul\":13024:13025   */\n      0x02\n        /* \"#utility.yul\":13018:13022   */\n      dup3\n        /* \"#utility.yul\":13014:13026   */\n      div\n        /* \"#utility.yul\":13004:13026   */\n      swap1\n      pop\n        /* \"#utility.yul\":13071:13072   */\n      0x01\n        /* \"#utility.yul\":13065:13069   */\n      dup3\n        /* \"#utility.yul\":13061:13073   */\n      and\n        /* \"#utility.yul\":13092:13110   */\n      dup1\n        /* \"#utility.yul\":13082:13163   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":13148:13152   */\n      0x7f\n        /* \"#utility.yul\":13140:13146   */\n      dup3\n        /* \"#utility.yul\":13136:13153   */\n      and\n        /* \"#utility.yul\":13126:13153   */\n      swap2\n      pop\n        /* \"#utility.yul\":13082:13163   */\n    tag_291:\n        /* \"#utility.yul\":13210:13212   */\n      0x20\n        /* \"#utility.yul\":13202:13208   */\n      dup3\n        /* \"#utility.yul\":13199:13213   */\n      lt\n        /* \"#utility.yul\":13179:13197   */\n      dup2\n        /* \"#utility.yul\":13176:13214   */\n      sub\n        /* \"#utility.yul\":13173:13257   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":13229:13247   */\n      tag_293\n      tag_160\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":13173:13257   */\n    tag_292:\n        /* \"#utility.yul\":12994:13263   */\n      pop\n        /* \"#utility.yul\":12943:13263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13269:13449   */\n    tag_115:\n        /* \"#utility.yul\":13317:13394   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13314:13315   */\n      0x00\n        /* \"#utility.yul\":13307:13395   */\n      mstore\n        /* \"#utility.yul\":13414:13418   */\n      0x32\n        /* \"#utility.yul\":13411:13412   */\n      0x04\n        /* \"#utility.yul\":13404:13419   */\n      mstore\n        /* \"#utility.yul\":13438:13442   */\n      0x24\n        /* \"#utility.yul\":13435:13436   */\n      0x00\n        /* \"#utility.yul\":13428:13443   */\n      revert\n        /* \"#utility.yul\":13455:13865   */\n    tag_118:\n        /* \"#utility.yul\":13495:13502   */\n      0x00\n        /* \"#utility.yul\":13518:13538   */\n      tag_296\n        /* \"#utility.yul\":13536:13537   */\n      dup3\n        /* \"#utility.yul\":13518:13538   */\n      tag_132\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":13513:13538   */\n      swap2\n      pop\n        /* \"#utility.yul\":13552:13572   */\n      tag_297\n        /* \"#utility.yul\":13570:13571   */\n      dup4\n        /* \"#utility.yul\":13552:13572   */\n      tag_132\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":13547:13572   */\n      swap3\n      pop\n        /* \"#utility.yul\":13607:13608   */\n      dup3\n        /* \"#utility.yul\":13604:13605   */\n      dup3\n        /* \"#utility.yul\":13600:13609   */\n      mul\n        /* \"#utility.yul\":13629:13659   */\n      tag_298\n        /* \"#utility.yul\":13647:13658   */\n      dup2\n        /* \"#utility.yul\":13629:13659   */\n      tag_132\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":13618:13659   */\n      swap2\n      pop\n        /* \"#utility.yul\":13808:13809   */\n      dup3\n        /* \"#utility.yul\":13799:13806   */\n      dup3\n        /* \"#utility.yul\":13795:13810   */\n      div\n        /* \"#utility.yul\":13792:13793   */\n      dup5\n        /* \"#utility.yul\":13789:13811   */\n      eq\n        /* \"#utility.yul\":13769:13770   */\n      dup4\n        /* \"#utility.yul\":13762:13771   */\n      iszero\n        /* \"#utility.yul\":13742:13825   */\n      or\n        /* \"#utility.yul\":13719:13858   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":13838:13856   */\n      tag_300\n      tag_153\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":13719:13858   */\n    tag_299:\n        /* \"#utility.yul\":13503:13865   */\n      pop\n        /* \"#utility.yul\":13455:13865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13871:14051   */\n    tag_161:\n        /* \"#utility.yul\":13919:13996   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13916:13917   */\n      0x00\n        /* \"#utility.yul\":13909:13997   */\n      mstore\n        /* \"#utility.yul\":14016:14020   */\n      0x12\n        /* \"#utility.yul\":14013:14014   */\n      0x04\n        /* \"#utility.yul\":14006:14021   */\n      mstore\n        /* \"#utility.yul\":14040:14044   */\n      0x24\n        /* \"#utility.yul\":14037:14038   */\n      0x00\n        /* \"#utility.yul\":14030:14045   */\n      revert\n        /* \"#utility.yul\":14057:14242   */\n    tag_120:\n        /* \"#utility.yul\":14097:14098   */\n      0x00\n        /* \"#utility.yul\":14114:14134   */\n      tag_303\n        /* \"#utility.yul\":14132:14133   */\n      dup3\n        /* \"#utility.yul\":14114:14134   */\n      tag_132\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":14109:14134   */\n      swap2\n      pop\n        /* \"#utility.yul\":14148:14168   */\n      tag_304\n        /* \"#utility.yul\":14166:14167   */\n      dup4\n        /* \"#utility.yul\":14148:14168   */\n      tag_132\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":14143:14168   */\n      swap3\n      pop\n        /* \"#utility.yul\":14187:14188   */\n      dup3\n        /* \"#utility.yul\":14177:14212   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":14192:14210   */\n      tag_306\n      tag_161\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":14177:14212   */\n    tag_305:\n        /* \"#utility.yul\":14234:14235   */\n      dup3\n        /* \"#utility.yul\":14231:14232   */\n      dup3\n        /* \"#utility.yul\":14227:14236   */\n      div\n        /* \"#utility.yul\":14222:14236   */\n      swap1\n      pop\n        /* \"#utility.yul\":14057:14242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f71891fc40759925aba890bfd081e7c685fd0b586bb52483ed315d85c8107c1a64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2502": {
									"entryPoint": null,
									"id": 2502,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x10E1 DUP1 PUSH2 0x60 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x8F2238BA EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xAB1CE0B0 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xCD7E10C1 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xD44A0E61 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xE89E4ED6 EQ PUSH2 0x268 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0x538B7242 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5D1B5805 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x6BEEEDB8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x7F8FBC22 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x89B5EFA7 EQ PUSH2 0x167 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x347 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 PUSH1 0x5 SLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST GT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD CALLVALUE EQ PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A3 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B4 PUSH2 0x80A JUMP JUMPDEST PUSH32 0xD9952CBF75A3B7D22CFB7C2B9C7C00A23513676E5A486E14DCAF74485B483127 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6FE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x771 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79D SWAP1 PUSH2 0xFB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x917 JUMPI PUSH0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x82E JUMPI PUSH2 0x82D PUSH2 0xFE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x64 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x6 SLOAD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x908 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x80C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x954 DUP3 PUSH2 0x92B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x964 DUP2 PUSH2 0x94A JUMP JUMPDEST DUP2 EQ PUSH2 0x96E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x97F DUP2 PUSH2 0x95B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99A JUMPI PUSH2 0x999 PUSH2 0x923 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A7 DUP5 DUP3 DUP6 ADD PUSH2 0x971 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C4 DUP2 PUSH2 0x9B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DD PUSH0 DUP4 ADD DUP5 PUSH2 0x9BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F5 DUP2 PUSH2 0x9E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x9FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA10 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA2C JUMPI PUSH2 0xA2B PUSH2 0x923 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA39 DUP6 DUP3 DUP7 ADD PUSH2 0x971 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA4A DUP6 DUP3 DUP7 ADD PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA68 PUSH2 0x923 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA76 DUP5 DUP3 DUP6 ADD PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA88 DUP2 PUSH2 0x9E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA1 PUSH0 DUP4 ADD DUP5 PUSH2 0xA7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB0 DUP2 PUSH2 0x94A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC9 PUSH0 DUP4 ADD DUP5 PUSH2 0xAA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xB1D DUP3 PUSH2 0xAD7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E PUSH2 0x91A JUMP JUMPDEST SWAP1 POP PUSH2 0xB5A DUP3 DUP3 PUSH2 0xB14 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB79 JUMPI PUSH2 0xB78 PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST PUSH2 0xB82 DUP3 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBAF PUSH2 0xBAA DUP5 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xBCB JUMPI PUSH2 0xBCA PUSH2 0xAD3 JUMP JUMPDEST JUMPDEST PUSH2 0xBD6 DUP5 DUP3 DUP6 PUSH2 0xB8F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBF2 JUMPI PUSH2 0xBF1 PUSH2 0xACF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC02 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC20 JUMPI PUSH2 0xC1F PUSH2 0x923 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC3D JUMPI PUSH2 0xC3C PUSH2 0x927 JUMP JUMPDEST JUMPDEST PUSH2 0xC49 DUP5 DUP3 DUP6 ADD PUSH2 0xBDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC89 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC6E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC9E DUP3 PUSH2 0xC52 JUMP JUMPDEST PUSH2 0xCA8 DUP2 DUP6 PUSH2 0xC5C JUMP JUMPDEST SWAP4 POP PUSH2 0xCB8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xAD7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE4 DUP2 DUP5 PUSH2 0xC94 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCFF PUSH0 DUP4 ADD DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0xD0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD2B DUP2 DUP7 PUSH2 0xC94 JUMP JUMPDEST SWAP1 POP PUSH2 0xD3A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xD47 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDA9 PUSH1 0x25 DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xDB4 DUP3 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDD6 DUP2 PUSH2 0xD9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE14 DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1F DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE37 JUMPI PUSH2 0xE36 PUSH2 0xDDD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C204F776E657273686970206D617820313030250000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE71 PUSH1 0x18 DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xE7C DUP3 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE9E DUP2 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E74206D75737420657175616C20746F2061727420707269636500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xED9 PUSH1 0x1F DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xEE4 DUP3 PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF06 DUP2 PUSH2 0xECD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x617274776F726B20736F6C640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF41 PUSH1 0xC DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xF4C DUP3 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF6A PUSH0 DUP4 ADD DUP5 PUSH2 0xA7F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xF7B DUP2 PUSH2 0xF35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFDA JUMPI PUSH2 0xFD9 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1017 DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1022 DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1030 DUP2 PUSH2 0x9E3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1047 JUMPI PUSH2 0x1046 PUSH2 0xDDD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1085 DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1090 DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10A0 JUMPI PUSH2 0x109F PUSH2 0x104E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 XOR SWAP2 0xFC BLOCKHASH PUSH22 0x9925ABA890BFD081E7C685FD0B586BB52483ED315D85 0xC8 LT PUSH29 0x1A64736F6C634300081800330000000000000000000000000000000000 ",
							"sourceMap": "219:2339:10:-:0;;;741:1;708:34;;1150:50;;;;;;;;;;1182:10;1174:5;;:18;;;;;;;;;;;;;;;;;;219:2339;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addArtist_2551": {
									"entryPoint": 707,
									"id": 2551,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@artistSigned_2454": {
									"entryPoint": 678,
									"id": 2454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@artistToOwnershipPercentage_2450": {
									"entryPoint": 1427,
									"id": 2450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@artists_2442": {
									"entryPoint": 1775,
									"id": 2442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@artworkPrice_2459": {
									"entryPoint": 1448,
									"id": 2459,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@distributeFunds_2622": {
									"entryPoint": 2058,
									"id": 2622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@milestones_2446": {
									"entryPoint": 1859,
									"id": 2446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_2438": {
									"entryPoint": 1454,
									"id": 2438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@purchaseArtwork_2583": {
									"entryPoint": 1640,
									"id": 2583,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@resolveDispute_2634": {
									"entryPoint": 1489,
									"id": 2634,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setArtworkPrice_2563": {
									"entryPoint": 1276,
									"id": 2563,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalPercentage_2457": {
									"entryPoint": 1853,
									"id": 2457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 2973,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 3347,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3180,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face": {
									"entryPoint": 3407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14245:11",
										"nodeType": "YulBlock",
										"src": "0:14245:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "748:87:11",
													"nodeType": "YulBlock",
													"src": "748:87:11",
													"statements": [
														{
															"nativeSrc": "758:29:11",
															"nodeType": "YulAssignment",
															"src": "758:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:11"
																},
																"nativeSrc": "767:20:11",
																"nodeType": "YulFunctionCall",
																"src": "767:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:11"
																},
																"nativeSrc": "796:33:11",
																"nodeType": "YulFunctionCall",
																"src": "796:33:11"
															},
															"nativeSrc": "796:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:11",
														"nodeType": "YulTypedName",
														"src": "726:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:11",
														"nodeType": "YulTypedName",
														"src": "734:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:11",
														"nodeType": "YulTypedName",
														"src": "742:5:11",
														"type": ""
													}
												],
												"src": "696:139:11"
											},
											{
												"body": {
													"nativeSrc": "907:263:11",
													"nodeType": "YulBlock",
													"src": "907:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:11",
																"nodeType": "YulBlock",
																"src": "953:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:11"
																			},
																			"nativeSrc": "955:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:11"
																		},
																		"nativeSrc": "955:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:11"
																		},
																		"nativeSrc": "924:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:11",
																		"nodeType": "YulLiteral",
																		"src": "949:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:11"
																},
																"nativeSrc": "920:32:11",
																"nodeType": "YulFunctionCall",
																"src": "920:32:11"
															},
															"nativeSrc": "917:119:11",
															"nodeType": "YulIf",
															"src": "917:119:11"
														},
														{
															"nativeSrc": "1046:117:11",
															"nodeType": "YulBlock",
															"src": "1046:117:11",
															"statements": [
																{
																	"nativeSrc": "1061:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:11"
																				},
																				"nativeSrc": "1121:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:11"
																		},
																		"nativeSrc": "1100:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:11",
														"nodeType": "YulTypedName",
														"src": "877:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:11",
														"nodeType": "YulTypedName",
														"src": "888:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:11",
														"nodeType": "YulTypedName",
														"src": "900:6:11",
														"type": ""
													}
												],
												"src": "841:329:11"
											},
											{
												"body": {
													"nativeSrc": "1218:48:11",
													"nodeType": "YulBlock",
													"src": "1218:48:11",
													"statements": [
														{
															"nativeSrc": "1228:32:11",
															"nodeType": "YulAssignment",
															"src": "1228:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:11"
																		},
																		"nativeSrc": "1246:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:11"
																},
																"nativeSrc": "1239:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:11",
														"nodeType": "YulTypedName",
														"src": "1200:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:11",
														"nodeType": "YulTypedName",
														"src": "1210:7:11",
														"type": ""
													}
												],
												"src": "1176:90:11"
											},
											{
												"body": {
													"nativeSrc": "1331:50:11",
													"nodeType": "YulBlock",
													"src": "1331:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:11"
																		},
																		"nativeSrc": "1353:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:11"
																},
																"nativeSrc": "1341:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:11"
															},
															"nativeSrc": "1341:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:11",
														"nodeType": "YulTypedName",
														"src": "1319:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:11",
														"nodeType": "YulTypedName",
														"src": "1326:3:11",
														"type": ""
													}
												],
												"src": "1272:109:11"
											},
											{
												"body": {
													"nativeSrc": "1479:118:11",
													"nodeType": "YulBlock",
													"src": "1479:118:11",
													"statements": [
														{
															"nativeSrc": "1489:26:11",
															"nodeType": "YulAssignment",
															"src": "1489:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:11"
																},
																"nativeSrc": "1497:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:11"
																		},
																		"nativeSrc": "1572:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:11"
																},
																"nativeSrc": "1525:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:11"
															},
															"nativeSrc": "1525:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:11",
														"nodeType": "YulTypedName",
														"src": "1451:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:11",
														"nodeType": "YulTypedName",
														"src": "1463:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:11",
														"nodeType": "YulTypedName",
														"src": "1474:4:11",
														"type": ""
													}
												],
												"src": "1387:210:11"
											},
											{
												"body": {
													"nativeSrc": "1648:32:11",
													"nodeType": "YulBlock",
													"src": "1648:32:11",
													"statements": [
														{
															"nativeSrc": "1658:16:11",
															"nodeType": "YulAssignment",
															"src": "1658:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1669:5:11",
																"nodeType": "YulIdentifier",
																"src": "1669:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1658:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1658:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1603:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1630:5:11",
														"nodeType": "YulTypedName",
														"src": "1630:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1640:7:11",
														"nodeType": "YulTypedName",
														"src": "1640:7:11",
														"type": ""
													}
												],
												"src": "1603:77:11"
											},
											{
												"body": {
													"nativeSrc": "1729:79:11",
													"nodeType": "YulBlock",
													"src": "1729:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1786:16:11",
																"nodeType": "YulBlock",
																"src": "1786:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1795:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1795:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1798:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1798:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1788:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1788:6:11"
																			},
																			"nativeSrc": "1788:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1788:12:11"
																		},
																		"nativeSrc": "1788:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1788:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1752:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1752:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1777:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1777:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1759:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1759:17:11"
																				},
																				"nativeSrc": "1759:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1759:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1749:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1749:2:11"
																		},
																		"nativeSrc": "1749:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1749:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1742:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:11"
																},
																"nativeSrc": "1742:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1742:43:11"
															},
															"nativeSrc": "1739:63:11",
															"nodeType": "YulIf",
															"src": "1739:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1686:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1722:5:11",
														"nodeType": "YulTypedName",
														"src": "1722:5:11",
														"type": ""
													}
												],
												"src": "1686:122:11"
											},
											{
												"body": {
													"nativeSrc": "1866:87:11",
													"nodeType": "YulBlock",
													"src": "1866:87:11",
													"statements": [
														{
															"nativeSrc": "1876:29:11",
															"nodeType": "YulAssignment",
															"src": "1876:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1898:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1898:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1885:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1885:12:11"
																},
																"nativeSrc": "1885:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1885:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1876:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1876:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1941:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1941:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1914:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1914:26:11"
																},
																"nativeSrc": "1914:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1914:33:11"
															},
															"nativeSrc": "1914:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1914:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1814:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1844:6:11",
														"nodeType": "YulTypedName",
														"src": "1844:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1852:3:11",
														"nodeType": "YulTypedName",
														"src": "1852:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1860:5:11",
														"nodeType": "YulTypedName",
														"src": "1860:5:11",
														"type": ""
													}
												],
												"src": "1814:139:11"
											},
											{
												"body": {
													"nativeSrc": "2042:391:11",
													"nodeType": "YulBlock",
													"src": "2042:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2088:83:11",
																"nodeType": "YulBlock",
																"src": "2088:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2090:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2090:77:11"
																			},
																			"nativeSrc": "2090:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2090:79:11"
																		},
																		"nativeSrc": "2090:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2090:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2063:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2063:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2072:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2059:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2059:3:11"
																		},
																		"nativeSrc": "2059:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2059:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2084:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2055:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2055:3:11"
																},
																"nativeSrc": "2055:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2055:32:11"
															},
															"nativeSrc": "2052:119:11",
															"nodeType": "YulIf",
															"src": "2052:119:11"
														},
														{
															"nativeSrc": "2181:117:11",
															"nodeType": "YulBlock",
															"src": "2181:117:11",
															"statements": [
																{
																	"nativeSrc": "2196:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2196:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2210:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2210:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2200:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2200:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2225:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2225:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2260:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2260:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2271:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2271:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2256:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2256:3:11"
																				},
																				"nativeSrc": "2256:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2280:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2280:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2235:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2235:20:11"
																		},
																		"nativeSrc": "2235:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2235:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2225:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2225:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2308:118:11",
															"nodeType": "YulBlock",
															"src": "2308:118:11",
															"statements": [
																{
																	"nativeSrc": "2323:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2323:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2337:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2337:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2327:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2327:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2353:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2353:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2388:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2388:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2399:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2399:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2384:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2384:3:11"
																				},
																				"nativeSrc": "2384:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2384:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2408:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2408:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2363:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2363:20:11"
																		},
																		"nativeSrc": "2363:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2363:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2353:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2353:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1959:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2004:9:11",
														"nodeType": "YulTypedName",
														"src": "2004:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2015:7:11",
														"nodeType": "YulTypedName",
														"src": "2015:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2027:6:11",
														"nodeType": "YulTypedName",
														"src": "2027:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2035:6:11",
														"nodeType": "YulTypedName",
														"src": "2035:6:11",
														"type": ""
													}
												],
												"src": "1959:474:11"
											},
											{
												"body": {
													"nativeSrc": "2505:263:11",
													"nodeType": "YulBlock",
													"src": "2505:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2551:83:11",
																"nodeType": "YulBlock",
																"src": "2551:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2553:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2553:77:11"
																			},
																			"nativeSrc": "2553:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2553:79:11"
																		},
																		"nativeSrc": "2553:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2553:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2526:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2526:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2535:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2535:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2522:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2522:3:11"
																		},
																		"nativeSrc": "2522:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2522:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2547:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2547:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2518:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2518:3:11"
																},
																"nativeSrc": "2518:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2518:32:11"
															},
															"nativeSrc": "2515:119:11",
															"nodeType": "YulIf",
															"src": "2515:119:11"
														},
														{
															"nativeSrc": "2644:117:11",
															"nodeType": "YulBlock",
															"src": "2644:117:11",
															"statements": [
																{
																	"nativeSrc": "2659:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2659:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2673:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2673:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2663:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2663:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2688:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2688:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2723:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2723:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2734:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2734:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2719:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2719:3:11"
																				},
																				"nativeSrc": "2719:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2719:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2743:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2743:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2698:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2698:20:11"
																		},
																		"nativeSrc": "2698:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2688:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2688:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2439:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2475:9:11",
														"nodeType": "YulTypedName",
														"src": "2475:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2486:7:11",
														"nodeType": "YulTypedName",
														"src": "2486:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2498:6:11",
														"nodeType": "YulTypedName",
														"src": "2498:6:11",
														"type": ""
													}
												],
												"src": "2439:329:11"
											},
											{
												"body": {
													"nativeSrc": "2839:53:11",
													"nodeType": "YulBlock",
													"src": "2839:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2856:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2856:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2879:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2879:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2861:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2861:17:11"
																		},
																		"nativeSrc": "2861:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2861:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2849:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:11"
																},
																"nativeSrc": "2849:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2849:37:11"
															},
															"nativeSrc": "2849:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2849:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2774:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2827:5:11",
														"nodeType": "YulTypedName",
														"src": "2827:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2834:3:11",
														"nodeType": "YulTypedName",
														"src": "2834:3:11",
														"type": ""
													}
												],
												"src": "2774:118:11"
											},
											{
												"body": {
													"nativeSrc": "2996:124:11",
													"nodeType": "YulBlock",
													"src": "2996:124:11",
													"statements": [
														{
															"nativeSrc": "3006:26:11",
															"nodeType": "YulAssignment",
															"src": "3006:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3018:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3018:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3029:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3029:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3014:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3014:3:11"
																},
																"nativeSrc": "3014:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3014:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3006:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3006:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3086:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3086:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3099:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3099:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3110:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3110:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3095:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:11"
																		},
																		"nativeSrc": "3095:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3042:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3042:43:11"
																},
																"nativeSrc": "3042:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3042:71:11"
															},
															"nativeSrc": "3042:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3042:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2898:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2968:9:11",
														"nodeType": "YulTypedName",
														"src": "2968:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2980:6:11",
														"nodeType": "YulTypedName",
														"src": "2980:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2991:4:11",
														"nodeType": "YulTypedName",
														"src": "2991:4:11",
														"type": ""
													}
												],
												"src": "2898:222:11"
											},
											{
												"body": {
													"nativeSrc": "3191:53:11",
													"nodeType": "YulBlock",
													"src": "3191:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3208:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3208:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3231:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3231:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3213:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3213:17:11"
																		},
																		"nativeSrc": "3213:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3213:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3201:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:11"
																},
																"nativeSrc": "3201:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3201:37:11"
															},
															"nativeSrc": "3201:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3201:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3126:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3179:5:11",
														"nodeType": "YulTypedName",
														"src": "3179:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3186:3:11",
														"nodeType": "YulTypedName",
														"src": "3186:3:11",
														"type": ""
													}
												],
												"src": "3126:118:11"
											},
											{
												"body": {
													"nativeSrc": "3348:124:11",
													"nodeType": "YulBlock",
													"src": "3348:124:11",
													"statements": [
														{
															"nativeSrc": "3358:26:11",
															"nodeType": "YulAssignment",
															"src": "3358:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3370:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3381:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3381:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3366:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:11"
																},
																"nativeSrc": "3366:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3366:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3358:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3358:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3438:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3451:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3462:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:11"
																		},
																		"nativeSrc": "3447:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3394:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3394:43:11"
																},
																"nativeSrc": "3394:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3394:71:11"
															},
															"nativeSrc": "3394:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3394:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3250:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3320:9:11",
														"nodeType": "YulTypedName",
														"src": "3320:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3332:6:11",
														"nodeType": "YulTypedName",
														"src": "3332:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3343:4:11",
														"nodeType": "YulTypedName",
														"src": "3343:4:11",
														"type": ""
													}
												],
												"src": "3250:222:11"
											},
											{
												"body": {
													"nativeSrc": "3567:28:11",
													"nodeType": "YulBlock",
													"src": "3567:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3584:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3584:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3587:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3587:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3577:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3577:6:11"
																},
																"nativeSrc": "3577:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3577:12:11"
															},
															"nativeSrc": "3577:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "3577:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3478:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3478:117:11"
											},
											{
												"body": {
													"nativeSrc": "3690:28:11",
													"nodeType": "YulBlock",
													"src": "3690:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3707:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3707:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3710:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3710:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3700:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:11"
																},
																"nativeSrc": "3700:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3700:12:11"
															},
															"nativeSrc": "3700:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "3700:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3601:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3601:117:11"
											},
											{
												"body": {
													"nativeSrc": "3772:54:11",
													"nodeType": "YulBlock",
													"src": "3772:54:11",
													"statements": [
														{
															"nativeSrc": "3782:38:11",
															"nodeType": "YulAssignment",
															"src": "3782:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3800:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3800:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3807:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3807:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3796:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3796:3:11"
																		},
																		"nativeSrc": "3796:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3796:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3816:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3816:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3812:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3812:3:11"
																		},
																		"nativeSrc": "3812:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3812:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3792:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3792:3:11"
																},
																"nativeSrc": "3792:28:11",
																"nodeType": "YulFunctionCall",
																"src": "3792:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3782:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3782:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3724:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3755:5:11",
														"nodeType": "YulTypedName",
														"src": "3755:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3765:6:11",
														"nodeType": "YulTypedName",
														"src": "3765:6:11",
														"type": ""
													}
												],
												"src": "3724:102:11"
											},
											{
												"body": {
													"nativeSrc": "3860:152:11",
													"nodeType": "YulBlock",
													"src": "3860:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3877:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3877:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3880:77:11",
																		"nodeType": "YulLiteral",
																		"src": "3880:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3870:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:11"
																},
																"nativeSrc": "3870:88:11",
																"nodeType": "YulFunctionCall",
																"src": "3870:88:11"
															},
															"nativeSrc": "3870:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "3870:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3974:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3977:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3977:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3967:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:11"
																},
																"nativeSrc": "3967:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3967:15:11"
															},
															"nativeSrc": "3967:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3967:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3998:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3998:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4001:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4001:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3991:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3991:6:11"
																},
																"nativeSrc": "3991:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3991:15:11"
															},
															"nativeSrc": "3991:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3991:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3832:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3832:180:11"
											},
											{
												"body": {
													"nativeSrc": "4061:238:11",
													"nodeType": "YulBlock",
													"src": "4061:238:11",
													"statements": [
														{
															"nativeSrc": "4071:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4071:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4093:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4123:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4123:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4101:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "4101:21:11"
																		},
																		"nativeSrc": "4101:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4101:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4089:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4089:3:11"
																},
																"nativeSrc": "4089:40:11",
																"nodeType": "YulFunctionCall",
																"src": "4089:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4075:10:11",
																	"nodeType": "YulTypedName",
																	"src": "4075:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4240:22:11",
																"nodeType": "YulBlock",
																"src": "4240:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4242:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4242:16:11"
																			},
																			"nativeSrc": "4242:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4242:18:11"
																		},
																		"nativeSrc": "4242:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4242:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4183:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4183:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4195:18:11",
																				"nodeType": "YulLiteral",
																				"src": "4195:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4180:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4180:2:11"
																		},
																		"nativeSrc": "4180:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4180:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4219:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4219:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4231:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4231:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4216:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4216:2:11"
																		},
																		"nativeSrc": "4216:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4216:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4177:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4177:2:11"
																},
																"nativeSrc": "4177:62:11",
																"nodeType": "YulFunctionCall",
																"src": "4177:62:11"
															},
															"nativeSrc": "4174:88:11",
															"nodeType": "YulIf",
															"src": "4174:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4278:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4278:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4282:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "4282:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4271:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4271:6:11"
																},
																"nativeSrc": "4271:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4271:22:11"
															},
															"nativeSrc": "4271:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "4271:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4018:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4047:6:11",
														"nodeType": "YulTypedName",
														"src": "4047:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4055:4:11",
														"nodeType": "YulTypedName",
														"src": "4055:4:11",
														"type": ""
													}
												],
												"src": "4018:281:11"
											},
											{
												"body": {
													"nativeSrc": "4346:88:11",
													"nodeType": "YulBlock",
													"src": "4346:88:11",
													"statements": [
														{
															"nativeSrc": "4356:30:11",
															"nodeType": "YulAssignment",
															"src": "4356:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4366:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4366:18:11"
																},
																"nativeSrc": "4366:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4366:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4356:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4415:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4415:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4423:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4423:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4395:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "4395:19:11"
																},
																"nativeSrc": "4395:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4395:33:11"
															},
															"nativeSrc": "4395:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "4395:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4305:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4330:4:11",
														"nodeType": "YulTypedName",
														"src": "4330:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4339:6:11",
														"nodeType": "YulTypedName",
														"src": "4339:6:11",
														"type": ""
													}
												],
												"src": "4305:129:11"
											},
											{
												"body": {
													"nativeSrc": "4507:241:11",
													"nodeType": "YulBlock",
													"src": "4507:241:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4612:22:11",
																"nodeType": "YulBlock",
																"src": "4612:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4614:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4614:16:11"
																			},
																			"nativeSrc": "4614:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4614:18:11"
																		},
																		"nativeSrc": "4614:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4614:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4584:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4584:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4592:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4592:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4581:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4581:2:11"
																},
																"nativeSrc": "4581:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4581:30:11"
															},
															"nativeSrc": "4578:56:11",
															"nodeType": "YulIf",
															"src": "4578:56:11"
														},
														{
															"nativeSrc": "4644:37:11",
															"nodeType": "YulAssignment",
															"src": "4644:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4674:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4674:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "4652:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "4652:21:11"
																},
																"nativeSrc": "4652:29:11",
																"nodeType": "YulFunctionCall",
																"src": "4652:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4644:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4644:4:11"
																}
															]
														},
														{
															"nativeSrc": "4718:23:11",
															"nodeType": "YulAssignment",
															"src": "4718:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4730:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4730:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4736:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4736:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4726:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4726:3:11"
																},
																"nativeSrc": "4726:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4726:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4718:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4718:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "4440:308:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4491:6:11",
														"nodeType": "YulTypedName",
														"src": "4491:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4502:4:11",
														"nodeType": "YulTypedName",
														"src": "4502:4:11",
														"type": ""
													}
												],
												"src": "4440:308:11"
											},
											{
												"body": {
													"nativeSrc": "4818:82:11",
													"nodeType": "YulBlock",
													"src": "4818:82:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4841:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4841:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4846:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4846:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4851:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4851:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4828:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4828:12:11"
																},
																"nativeSrc": "4828:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4828:30:11"
															},
															"nativeSrc": "4828:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4828:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4878:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4878:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4883:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4883:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4874:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4874:3:11"
																		},
																		"nativeSrc": "4874:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4874:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4892:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4892:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4867:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4867:6:11"
																},
																"nativeSrc": "4867:27:11",
																"nodeType": "YulFunctionCall",
																"src": "4867:27:11"
															},
															"nativeSrc": "4867:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "4867:27:11"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "4754:146:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4800:3:11",
														"nodeType": "YulTypedName",
														"src": "4800:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4805:3:11",
														"nodeType": "YulTypedName",
														"src": "4805:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4810:6:11",
														"nodeType": "YulTypedName",
														"src": "4810:6:11",
														"type": ""
													}
												],
												"src": "4754:146:11"
											},
											{
												"body": {
													"nativeSrc": "4990:341:11",
													"nodeType": "YulBlock",
													"src": "4990:341:11",
													"statements": [
														{
															"nativeSrc": "5000:75:11",
															"nodeType": "YulAssignment",
															"src": "5000:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5067:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5067:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "5025:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "5025:41:11"
																		},
																		"nativeSrc": "5025:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5025:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5009:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "5009:15:11"
																},
																"nativeSrc": "5009:66:11",
																"nodeType": "YulFunctionCall",
																"src": "5009:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5000:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5000:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5091:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5091:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5098:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5098:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5084:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5084:6:11"
																},
																"nativeSrc": "5084:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5084:21:11"
															},
															"nativeSrc": "5084:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5084:21:11"
														},
														{
															"nativeSrc": "5114:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5114:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5129:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5129:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5136:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5136:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5125:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5125:3:11"
																},
																"nativeSrc": "5125:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5125:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5118:3:11",
																	"nodeType": "YulTypedName",
																	"src": "5118:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5179:83:11",
																"nodeType": "YulBlock",
																"src": "5179:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "5181:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5181:77:11"
																			},
																			"nativeSrc": "5181:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5181:79:11"
																		},
																		"nativeSrc": "5181:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5181:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5160:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5160:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5165:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5165:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5156:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5156:3:11"
																		},
																		"nativeSrc": "5156:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5156:16:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5174:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5174:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5153:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5153:2:11"
																},
																"nativeSrc": "5153:25:11",
																"nodeType": "YulFunctionCall",
																"src": "5153:25:11"
															},
															"nativeSrc": "5150:112:11",
															"nodeType": "YulIf",
															"src": "5150:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5308:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5308:3:11"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5313:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5313:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5318:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5318:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5271:36:11",
																	"nodeType": "YulIdentifier",
																	"src": "5271:36:11"
																},
																"nativeSrc": "5271:54:11",
																"nodeType": "YulFunctionCall",
																"src": "5271:54:11"
															},
															"nativeSrc": "5271:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "5271:54:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "4906:425:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4963:3:11",
														"nodeType": "YulTypedName",
														"src": "4963:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4968:6:11",
														"nodeType": "YulTypedName",
														"src": "4968:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4976:3:11",
														"nodeType": "YulTypedName",
														"src": "4976:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4984:5:11",
														"nodeType": "YulTypedName",
														"src": "4984:5:11",
														"type": ""
													}
												],
												"src": "4906:425:11"
											},
											{
												"body": {
													"nativeSrc": "5413:278:11",
													"nodeType": "YulBlock",
													"src": "5413:278:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5462:83:11",
																"nodeType": "YulBlock",
																"src": "5462:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5464:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5464:77:11"
																			},
																			"nativeSrc": "5464:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5464:79:11"
																		},
																		"nativeSrc": "5464:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5464:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5441:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5441:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5449:4:11",
																						"nodeType": "YulLiteral",
																						"src": "5449:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5437:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5437:3:11"
																				},
																				"nativeSrc": "5437:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5437:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5456:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5456:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5433:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:11"
																		},
																		"nativeSrc": "5433:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5433:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5426:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:11"
																},
																"nativeSrc": "5426:35:11",
																"nodeType": "YulFunctionCall",
																"src": "5426:35:11"
															},
															"nativeSrc": "5423:122:11",
															"nodeType": "YulIf",
															"src": "5423:122:11"
														},
														{
															"nativeSrc": "5554:34:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5554:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5581:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5581:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5568:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5568:12:11"
																},
																"nativeSrc": "5568:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5568:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5558:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5558:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5597:88:11",
															"nodeType": "YulAssignment",
															"src": "5597:88:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5658:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5658:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5666:4:11",
																				"nodeType": "YulLiteral",
																				"src": "5666:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5654:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5654:3:11"
																		},
																		"nativeSrc": "5654:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5654:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5673:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5673:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5681:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5681:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "5606:47:11",
																	"nodeType": "YulIdentifier",
																	"src": "5606:47:11"
																},
																"nativeSrc": "5606:79:11",
																"nodeType": "YulFunctionCall",
																"src": "5606:79:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5597:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5597:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "5351:340:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5391:6:11",
														"nodeType": "YulTypedName",
														"src": "5391:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5399:3:11",
														"nodeType": "YulTypedName",
														"src": "5399:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5407:5:11",
														"nodeType": "YulTypedName",
														"src": "5407:5:11",
														"type": ""
													}
												],
												"src": "5351:340:11"
											},
											{
												"body": {
													"nativeSrc": "5773:433:11",
													"nodeType": "YulBlock",
													"src": "5773:433:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5819:83:11",
																"nodeType": "YulBlock",
																"src": "5819:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5821:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5821:77:11"
																			},
																			"nativeSrc": "5821:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5821:79:11"
																		},
																		"nativeSrc": "5821:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5821:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5794:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5794:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5803:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5803:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5790:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5790:3:11"
																		},
																		"nativeSrc": "5790:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5790:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5815:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5815:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5786:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5786:3:11"
																},
																"nativeSrc": "5786:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5786:32:11"
															},
															"nativeSrc": "5783:119:11",
															"nodeType": "YulIf",
															"src": "5783:119:11"
														},
														{
															"nativeSrc": "5912:287:11",
															"nodeType": "YulBlock",
															"src": "5912:287:11",
															"statements": [
																{
																	"nativeSrc": "5927:45:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5927:45:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5958:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5958:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5969:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5969:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5954:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5954:3:11"
																				},
																				"nativeSrc": "5954:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5954:17:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5941:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "5941:12:11"
																		},
																		"nativeSrc": "5941:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5941:31:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5931:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5931:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6019:83:11",
																		"nodeType": "YulBlock",
																		"src": "6019:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6021:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "6021:77:11"
																					},
																					"nativeSrc": "6021:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6021:79:11"
																				},
																				"nativeSrc": "6021:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6021:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5991:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5991:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5999:18:11",
																				"nodeType": "YulLiteral",
																				"src": "5999:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5988:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5988:2:11"
																		},
																		"nativeSrc": "5988:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5988:30:11"
																	},
																	"nativeSrc": "5985:117:11",
																	"nodeType": "YulIf",
																	"src": "5985:117:11"
																},
																{
																	"nativeSrc": "6116:73:11",
																	"nodeType": "YulAssignment",
																	"src": "6116:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6161:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6161:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6172:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6172:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6157:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6157:3:11"
																				},
																				"nativeSrc": "6157:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6157:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6181:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6181:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "6126:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "6126:30:11"
																		},
																		"nativeSrc": "6126:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6126:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6116:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "5697:509:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5743:9:11",
														"nodeType": "YulTypedName",
														"src": "5743:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5754:7:11",
														"nodeType": "YulTypedName",
														"src": "5754:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5766:6:11",
														"nodeType": "YulTypedName",
														"src": "5766:6:11",
														"type": ""
													}
												],
												"src": "5697:509:11"
											},
											{
												"body": {
													"nativeSrc": "6271:40:11",
													"nodeType": "YulBlock",
													"src": "6271:40:11",
													"statements": [
														{
															"nativeSrc": "6282:22:11",
															"nodeType": "YulAssignment",
															"src": "6282:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6298:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6298:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6292:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6292:5:11"
																},
																"nativeSrc": "6292:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6292:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6282:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6282:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "6212:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6254:5:11",
														"nodeType": "YulTypedName",
														"src": "6254:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6264:6:11",
														"nodeType": "YulTypedName",
														"src": "6264:6:11",
														"type": ""
													}
												],
												"src": "6212:99:11"
											},
											{
												"body": {
													"nativeSrc": "6413:73:11",
													"nodeType": "YulBlock",
													"src": "6413:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6430:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6430:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6435:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6435:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6423:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:11"
																},
																"nativeSrc": "6423:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6423:19:11"
															},
															"nativeSrc": "6423:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "6423:19:11"
														},
														{
															"nativeSrc": "6451:29:11",
															"nodeType": "YulAssignment",
															"src": "6451:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6470:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6470:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6475:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6475:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6466:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6466:3:11"
																},
																"nativeSrc": "6466:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6466:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6451:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "6451:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6317:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6385:3:11",
														"nodeType": "YulTypedName",
														"src": "6385:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6390:6:11",
														"nodeType": "YulTypedName",
														"src": "6390:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6401:11:11",
														"nodeType": "YulTypedName",
														"src": "6401:11:11",
														"type": ""
													}
												],
												"src": "6317:169:11"
											},
											{
												"body": {
													"nativeSrc": "6554:184:11",
													"nodeType": "YulBlock",
													"src": "6554:184:11",
													"statements": [
														{
															"nativeSrc": "6564:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6564:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "6573:1:11",
																"nodeType": "YulLiteral",
																"src": "6573:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6568:1:11",
																	"nodeType": "YulTypedName",
																	"src": "6568:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6633:63:11",
																"nodeType": "YulBlock",
																"src": "6633:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6658:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6658:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6663:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "6663:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6654:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6654:3:11"
																					},
																					"nativeSrc": "6654:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6654:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6677:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "6677:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6682:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "6682:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6673:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "6673:3:11"
																							},
																							"nativeSrc": "6673:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6673:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6667:5:11"
																					},
																					"nativeSrc": "6667:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6667:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6647:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6647:6:11"
																			},
																			"nativeSrc": "6647:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6647:39:11"
																		},
																		"nativeSrc": "6647:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6647:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6594:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6594:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6597:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6597:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6591:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6591:2:11"
																},
																"nativeSrc": "6591:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6591:13:11"
															},
															"nativeSrc": "6583:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6605:19:11",
																"nodeType": "YulBlock",
																"src": "6605:19:11",
																"statements": [
																	{
																		"nativeSrc": "6607:15:11",
																		"nodeType": "YulAssignment",
																		"src": "6607:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6616:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "6616:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6619:2:11",
																					"nodeType": "YulLiteral",
																					"src": "6619:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6612:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6612:3:11"
																			},
																			"nativeSrc": "6612:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6612:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6607:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "6607:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6587:3:11",
																"nodeType": "YulBlock",
																"src": "6587:3:11",
																"statements": []
															},
															"src": "6583:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6716:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6716:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6721:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6721:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6712:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6712:3:11"
																		},
																		"nativeSrc": "6712:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6712:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6730:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6730:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6705:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6705:6:11"
																},
																"nativeSrc": "6705:27:11",
																"nodeType": "YulFunctionCall",
																"src": "6705:27:11"
															},
															"nativeSrc": "6705:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "6705:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6492:246:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6536:3:11",
														"nodeType": "YulTypedName",
														"src": "6536:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6541:3:11",
														"nodeType": "YulTypedName",
														"src": "6541:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6546:6:11",
														"nodeType": "YulTypedName",
														"src": "6546:6:11",
														"type": ""
													}
												],
												"src": "6492:246:11"
											},
											{
												"body": {
													"nativeSrc": "6836:285:11",
													"nodeType": "YulBlock",
													"src": "6836:285:11",
													"statements": [
														{
															"nativeSrc": "6846:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6846:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6893:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6893:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6860:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "6860:32:11"
																},
																"nativeSrc": "6860:39:11",
																"nodeType": "YulFunctionCall",
																"src": "6860:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6850:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6850:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6908:78:11",
															"nodeType": "YulAssignment",
															"src": "6908:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6974:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6974:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6979:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6979:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6915:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "6915:58:11"
																},
																"nativeSrc": "6915:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6915:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6908:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7034:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7034:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7041:4:11",
																				"nodeType": "YulLiteral",
																				"src": "7041:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7030:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7030:3:11"
																		},
																		"nativeSrc": "7030:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7030:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7048:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7048:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7053:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7053:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6995:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "6995:34:11"
																},
																"nativeSrc": "6995:65:11",
																"nodeType": "YulFunctionCall",
																"src": "6995:65:11"
															},
															"nativeSrc": "6995:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "6995:65:11"
														},
														{
															"nativeSrc": "7069:46:11",
															"nodeType": "YulAssignment",
															"src": "7069:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7080:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7080:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7107:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7107:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7085:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "7085:21:11"
																		},
																		"nativeSrc": "7085:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7085:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7076:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:11"
																},
																"nativeSrc": "7076:39:11",
																"nodeType": "YulFunctionCall",
																"src": "7076:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7069:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7069:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6744:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6817:5:11",
														"nodeType": "YulTypedName",
														"src": "6817:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6824:3:11",
														"nodeType": "YulTypedName",
														"src": "6824:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6832:3:11",
														"nodeType": "YulTypedName",
														"src": "6832:3:11",
														"type": ""
													}
												],
												"src": "6744:377:11"
											},
											{
												"body": {
													"nativeSrc": "7245:195:11",
													"nodeType": "YulBlock",
													"src": "7245:195:11",
													"statements": [
														{
															"nativeSrc": "7255:26:11",
															"nodeType": "YulAssignment",
															"src": "7255:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7267:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7267:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7278:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7278:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7263:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7263:3:11"
																},
																"nativeSrc": "7263:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7263:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7255:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7255:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7302:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7302:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7313:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7313:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7298:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7298:3:11"
																		},
																		"nativeSrc": "7298:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7298:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7321:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7321:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7327:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7327:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7317:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7317:3:11"
																		},
																		"nativeSrc": "7317:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7317:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7291:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7291:6:11"
																},
																"nativeSrc": "7291:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7291:47:11"
															},
															"nativeSrc": "7291:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7291:47:11"
														},
														{
															"nativeSrc": "7347:86:11",
															"nodeType": "YulAssignment",
															"src": "7347:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7419:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7419:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7428:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7428:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7355:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "7355:63:11"
																},
																"nativeSrc": "7355:78:11",
																"nodeType": "YulFunctionCall",
																"src": "7355:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7347:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7347:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7127:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7217:9:11",
														"nodeType": "YulTypedName",
														"src": "7217:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7229:6:11",
														"nodeType": "YulTypedName",
														"src": "7229:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7240:4:11",
														"nodeType": "YulTypedName",
														"src": "7240:4:11",
														"type": ""
													}
												],
												"src": "7127:313:11"
											},
											{
												"body": {
													"nativeSrc": "7572:206:11",
													"nodeType": "YulBlock",
													"src": "7572:206:11",
													"statements": [
														{
															"nativeSrc": "7582:26:11",
															"nodeType": "YulAssignment",
															"src": "7582:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7594:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7594:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7605:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7605:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7590:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7590:3:11"
																},
																"nativeSrc": "7590:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7590:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7582:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7582:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7662:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7662:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7675:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7675:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7686:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7686:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7671:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7671:3:11"
																		},
																		"nativeSrc": "7671:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7671:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7618:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7618:43:11"
																},
																"nativeSrc": "7618:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7618:71:11"
															},
															"nativeSrc": "7618:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7618:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7743:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7743:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7756:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7756:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7767:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7767:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7752:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7752:3:11"
																		},
																		"nativeSrc": "7752:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7752:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7699:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7699:43:11"
																},
																"nativeSrc": "7699:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7699:72:11"
															},
															"nativeSrc": "7699:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7699:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7446:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7536:9:11",
														"nodeType": "YulTypedName",
														"src": "7536:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7548:6:11",
														"nodeType": "YulTypedName",
														"src": "7548:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7556:6:11",
														"nodeType": "YulTypedName",
														"src": "7556:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7567:4:11",
														"nodeType": "YulTypedName",
														"src": "7567:4:11",
														"type": ""
													}
												],
												"src": "7446:332:11"
											},
											{
												"body": {
													"nativeSrc": "7952:353:11",
													"nodeType": "YulBlock",
													"src": "7952:353:11",
													"statements": [
														{
															"nativeSrc": "7962:26:11",
															"nodeType": "YulAssignment",
															"src": "7962:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7974:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7974:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7985:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7985:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7970:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7970:3:11"
																},
																"nativeSrc": "7970:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7970:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7962:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7962:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8009:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8009:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8020:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8020:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8005:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8005:3:11"
																		},
																		"nativeSrc": "8005:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8005:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8028:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8028:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8034:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8034:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8024:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8024:3:11"
																		},
																		"nativeSrc": "8024:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8024:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7998:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7998:6:11"
																},
																"nativeSrc": "7998:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7998:47:11"
															},
															"nativeSrc": "7998:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7998:47:11"
														},
														{
															"nativeSrc": "8054:86:11",
															"nodeType": "YulAssignment",
															"src": "8054:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8126:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8126:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8135:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8135:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8062:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "8062:63:11"
																},
																"nativeSrc": "8062:78:11",
																"nodeType": "YulFunctionCall",
																"src": "8062:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8054:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8054:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8194:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8194:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8207:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8207:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8218:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8218:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8203:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8203:3:11"
																		},
																		"nativeSrc": "8203:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8203:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8150:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8150:43:11"
																},
																"nativeSrc": "8150:72:11",
																"nodeType": "YulFunctionCall",
																"src": "8150:72:11"
															},
															"nativeSrc": "8150:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "8150:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8270:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8270:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8283:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8283:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8294:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8294:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8279:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8279:3:11"
																		},
																		"nativeSrc": "8279:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8279:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8232:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "8232:37:11"
																},
																"nativeSrc": "8232:66:11",
																"nodeType": "YulFunctionCall",
																"src": "8232:66:11"
															},
															"nativeSrc": "8232:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "8232:66:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "7784:521:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7908:9:11",
														"nodeType": "YulTypedName",
														"src": "7908:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7920:6:11",
														"nodeType": "YulTypedName",
														"src": "7920:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7928:6:11",
														"nodeType": "YulTypedName",
														"src": "7928:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7936:6:11",
														"nodeType": "YulTypedName",
														"src": "7936:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7947:4:11",
														"nodeType": "YulTypedName",
														"src": "7947:4:11",
														"type": ""
													}
												],
												"src": "7784:521:11"
											},
											{
												"body": {
													"nativeSrc": "8417:118:11",
													"nodeType": "YulBlock",
													"src": "8417:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8439:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8439:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8447:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8447:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8435:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8435:3:11"
																		},
																		"nativeSrc": "8435:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8435:14:11"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e",
																		"kind": "string",
																		"nativeSrc": "8451:34:11",
																		"nodeType": "YulLiteral",
																		"src": "8451:34:11",
																		"type": "",
																		"value": "Only the owner can call this fun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8428:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8428:6:11"
																},
																"nativeSrc": "8428:58:11",
																"nodeType": "YulFunctionCall",
																"src": "8428:58:11"
															},
															"nativeSrc": "8428:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "8428:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8507:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8507:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8515:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8515:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8503:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8503:3:11"
																		},
																		"nativeSrc": "8503:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8503:15:11"
																	},
																	{
																		"hexValue": "6374696f6e",
																		"kind": "string",
																		"nativeSrc": "8520:7:11",
																		"nodeType": "YulLiteral",
																		"src": "8520:7:11",
																		"type": "",
																		"value": "ction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8496:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8496:6:11"
																},
																"nativeSrc": "8496:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8496:32:11"
															},
															"nativeSrc": "8496:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "8496:32:11"
														}
													]
												},
												"name": "store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
												"nativeSrc": "8311:224:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8409:6:11",
														"nodeType": "YulTypedName",
														"src": "8409:6:11",
														"type": ""
													}
												],
												"src": "8311:224:11"
											},
											{
												"body": {
													"nativeSrc": "8687:220:11",
													"nodeType": "YulBlock",
													"src": "8687:220:11",
													"statements": [
														{
															"nativeSrc": "8697:74:11",
															"nodeType": "YulAssignment",
															"src": "8697:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8763:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8763:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8768:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8768:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8704:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8704:58:11"
																},
																"nativeSrc": "8704:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8704:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8697:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8697:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8869:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8869:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																	"nativeSrc": "8780:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8780:88:11"
																},
																"nativeSrc": "8780:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8780:93:11"
															},
															"nativeSrc": "8780:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8780:93:11"
														},
														{
															"nativeSrc": "8882:19:11",
															"nodeType": "YulAssignment",
															"src": "8882:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8893:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8893:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8898:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8898:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8889:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8889:3:11"
																},
																"nativeSrc": "8889:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8889:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8882:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8882:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8541:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8675:3:11",
														"nodeType": "YulTypedName",
														"src": "8675:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8683:3:11",
														"nodeType": "YulTypedName",
														"src": "8683:3:11",
														"type": ""
													}
												],
												"src": "8541:366:11"
											},
											{
												"body": {
													"nativeSrc": "9084:248:11",
													"nodeType": "YulBlock",
													"src": "9084:248:11",
													"statements": [
														{
															"nativeSrc": "9094:26:11",
															"nodeType": "YulAssignment",
															"src": "9094:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9106:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9106:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9117:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9117:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9102:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9102:3:11"
																},
																"nativeSrc": "9102:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9102:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9094:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9094:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9141:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9141:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9152:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9152:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9137:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9137:3:11"
																		},
																		"nativeSrc": "9137:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9137:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9160:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9160:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9166:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9166:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9156:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9156:3:11"
																		},
																		"nativeSrc": "9156:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9156:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9130:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9130:6:11"
																},
																"nativeSrc": "9130:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9130:47:11"
															},
															"nativeSrc": "9130:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9130:47:11"
														},
														{
															"nativeSrc": "9186:139:11",
															"nodeType": "YulAssignment",
															"src": "9186:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9320:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9320:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9194:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9194:124:11"
																},
																"nativeSrc": "9194:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9194:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9186:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9186:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8913:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9064:9:11",
														"nodeType": "YulTypedName",
														"src": "9064:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9079:4:11",
														"nodeType": "YulTypedName",
														"src": "9079:4:11",
														"type": ""
													}
												],
												"src": "8913:419:11"
											},
											{
												"body": {
													"nativeSrc": "9366:152:11",
													"nodeType": "YulBlock",
													"src": "9366:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9383:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9383:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9386:77:11",
																		"nodeType": "YulLiteral",
																		"src": "9386:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9376:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9376:6:11"
																},
																"nativeSrc": "9376:88:11",
																"nodeType": "YulFunctionCall",
																"src": "9376:88:11"
															},
															"nativeSrc": "9376:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "9376:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9480:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9480:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9483:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9483:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9473:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9473:6:11"
																},
																"nativeSrc": "9473:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9473:15:11"
															},
															"nativeSrc": "9473:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9473:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9504:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9504:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9507:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9507:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9497:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9497:6:11"
																},
																"nativeSrc": "9497:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9497:15:11"
															},
															"nativeSrc": "9497:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9497:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9338:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9338:180:11"
											},
											{
												"body": {
													"nativeSrc": "9568:147:11",
													"nodeType": "YulBlock",
													"src": "9568:147:11",
													"statements": [
														{
															"nativeSrc": "9578:25:11",
															"nodeType": "YulAssignment",
															"src": "9578:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9601:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9601:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9583:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9583:17:11"
																},
																"nativeSrc": "9583:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9583:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9578:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9578:1:11"
																}
															]
														},
														{
															"nativeSrc": "9612:25:11",
															"nodeType": "YulAssignment",
															"src": "9612:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9635:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9635:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9617:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9617:17:11"
																},
																"nativeSrc": "9617:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9617:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9612:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9612:1:11"
																}
															]
														},
														{
															"nativeSrc": "9646:16:11",
															"nodeType": "YulAssignment",
															"src": "9646:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9657:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9657:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9660:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9660:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9653:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9653:3:11"
																},
																"nativeSrc": "9653:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9653:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9646:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9646:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9686:22:11",
																"nodeType": "YulBlock",
																"src": "9686:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9688:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9688:16:11"
																			},
																			"nativeSrc": "9688:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9688:18:11"
																		},
																		"nativeSrc": "9688:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9688:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9678:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9678:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9681:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9681:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9675:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9675:2:11"
																},
																"nativeSrc": "9675:10:11",
																"nodeType": "YulFunctionCall",
																"src": "9675:10:11"
															},
															"nativeSrc": "9672:36:11",
															"nodeType": "YulIf",
															"src": "9672:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9524:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9555:1:11",
														"nodeType": "YulTypedName",
														"src": "9555:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9558:1:11",
														"nodeType": "YulTypedName",
														"src": "9558:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9564:3:11",
														"nodeType": "YulTypedName",
														"src": "9564:3:11",
														"type": ""
													}
												],
												"src": "9524:191:11"
											},
											{
												"body": {
													"nativeSrc": "9827:68:11",
													"nodeType": "YulBlock",
													"src": "9827:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9849:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9849:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9857:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9857:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9845:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9845:3:11"
																		},
																		"nativeSrc": "9845:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9845:14:11"
																	},
																	{
																		"hexValue": "546f74616c204f776e657273686970206d61782031303025",
																		"kind": "string",
																		"nativeSrc": "9861:26:11",
																		"nodeType": "YulLiteral",
																		"src": "9861:26:11",
																		"type": "",
																		"value": "Total Ownership max 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9838:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9838:6:11"
																},
																"nativeSrc": "9838:50:11",
																"nodeType": "YulFunctionCall",
																"src": "9838:50:11"
															},
															"nativeSrc": "9838:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "9838:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925",
												"nativeSrc": "9721:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9819:6:11",
														"nodeType": "YulTypedName",
														"src": "9819:6:11",
														"type": ""
													}
												],
												"src": "9721:174:11"
											},
											{
												"body": {
													"nativeSrc": "10047:220:11",
													"nodeType": "YulBlock",
													"src": "10047:220:11",
													"statements": [
														{
															"nativeSrc": "10057:74:11",
															"nodeType": "YulAssignment",
															"src": "10057:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10123:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10123:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10128:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10128:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10064:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10064:58:11"
																},
																"nativeSrc": "10064:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10064:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10057:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10057:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10229:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10229:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925",
																	"nativeSrc": "10140:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10140:88:11"
																},
																"nativeSrc": "10140:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10140:93:11"
															},
															"nativeSrc": "10140:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10140:93:11"
														},
														{
															"nativeSrc": "10242:19:11",
															"nodeType": "YulAssignment",
															"src": "10242:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10253:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10253:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10258:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10258:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10249:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10249:3:11"
																},
																"nativeSrc": "10249:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10249:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10242:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10242:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9901:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10035:3:11",
														"nodeType": "YulTypedName",
														"src": "10035:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10043:3:11",
														"nodeType": "YulTypedName",
														"src": "10043:3:11",
														"type": ""
													}
												],
												"src": "9901:366:11"
											},
											{
												"body": {
													"nativeSrc": "10444:248:11",
													"nodeType": "YulBlock",
													"src": "10444:248:11",
													"statements": [
														{
															"nativeSrc": "10454:26:11",
															"nodeType": "YulAssignment",
															"src": "10454:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10466:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10466:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10477:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10477:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10462:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10462:3:11"
																},
																"nativeSrc": "10462:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10462:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10454:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10454:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10501:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10501:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10512:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10512:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10497:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10497:3:11"
																		},
																		"nativeSrc": "10497:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10497:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10520:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10520:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10526:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10526:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10516:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10516:3:11"
																		},
																		"nativeSrc": "10516:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10516:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10490:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10490:6:11"
																},
																"nativeSrc": "10490:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10490:47:11"
															},
															"nativeSrc": "10490:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10490:47:11"
														},
														{
															"nativeSrc": "10546:139:11",
															"nodeType": "YulAssignment",
															"src": "10546:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10680:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10680:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10554:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10554:124:11"
																},
																"nativeSrc": "10554:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10554:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10546:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10546:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10273:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10424:9:11",
														"nodeType": "YulTypedName",
														"src": "10424:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10439:4:11",
														"nodeType": "YulTypedName",
														"src": "10439:4:11",
														"type": ""
													}
												],
												"src": "10273:419:11"
											},
											{
												"body": {
													"nativeSrc": "10804:75:11",
													"nodeType": "YulBlock",
													"src": "10804:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10826:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10826:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10834:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10834:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10822:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10822:3:11"
																		},
																		"nativeSrc": "10822:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10822:14:11"
																	},
																	{
																		"hexValue": "5061796d656e74206d75737420657175616c20746f20617274207072696365",
																		"kind": "string",
																		"nativeSrc": "10838:33:11",
																		"nodeType": "YulLiteral",
																		"src": "10838:33:11",
																		"type": "",
																		"value": "Payment must equal to art price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10815:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10815:6:11"
																},
																"nativeSrc": "10815:57:11",
																"nodeType": "YulFunctionCall",
																"src": "10815:57:11"
															},
															"nativeSrc": "10815:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "10815:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94",
												"nativeSrc": "10698:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10796:6:11",
														"nodeType": "YulTypedName",
														"src": "10796:6:11",
														"type": ""
													}
												],
												"src": "10698:181:11"
											},
											{
												"body": {
													"nativeSrc": "11031:220:11",
													"nodeType": "YulBlock",
													"src": "11031:220:11",
													"statements": [
														{
															"nativeSrc": "11041:74:11",
															"nodeType": "YulAssignment",
															"src": "11041:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11107:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11107:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11112:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11112:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11048:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11048:58:11"
																},
																"nativeSrc": "11048:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11048:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11041:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11041:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11213:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11213:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94",
																	"nativeSrc": "11124:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11124:88:11"
																},
																"nativeSrc": "11124:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11124:93:11"
															},
															"nativeSrc": "11124:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11124:93:11"
														},
														{
															"nativeSrc": "11226:19:11",
															"nodeType": "YulAssignment",
															"src": "11226:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11237:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11237:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11242:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11242:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11233:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11233:3:11"
																},
																"nativeSrc": "11233:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11233:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11226:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11226:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10885:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11019:3:11",
														"nodeType": "YulTypedName",
														"src": "11019:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11027:3:11",
														"nodeType": "YulTypedName",
														"src": "11027:3:11",
														"type": ""
													}
												],
												"src": "10885:366:11"
											},
											{
												"body": {
													"nativeSrc": "11428:248:11",
													"nodeType": "YulBlock",
													"src": "11428:248:11",
													"statements": [
														{
															"nativeSrc": "11438:26:11",
															"nodeType": "YulAssignment",
															"src": "11438:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11450:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11450:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11461:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11461:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11446:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11446:3:11"
																},
																"nativeSrc": "11446:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11446:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11438:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11438:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11485:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11485:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11496:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11496:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11481:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11481:3:11"
																		},
																		"nativeSrc": "11481:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11481:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11504:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11504:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11510:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11510:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11500:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11500:3:11"
																		},
																		"nativeSrc": "11500:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11500:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11474:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11474:6:11"
																},
																"nativeSrc": "11474:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11474:47:11"
															},
															"nativeSrc": "11474:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11474:47:11"
														},
														{
															"nativeSrc": "11530:139:11",
															"nodeType": "YulAssignment",
															"src": "11530:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11664:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11664:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11538:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11538:124:11"
																},
																"nativeSrc": "11538:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11538:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11530:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11530:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11257:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11408:9:11",
														"nodeType": "YulTypedName",
														"src": "11408:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11423:4:11",
														"nodeType": "YulTypedName",
														"src": "11423:4:11",
														"type": ""
													}
												],
												"src": "11257:419:11"
											},
											{
												"body": {
													"nativeSrc": "11788:56:11",
													"nodeType": "YulBlock",
													"src": "11788:56:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11810:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11810:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11818:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11818:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11806:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11806:3:11"
																		},
																		"nativeSrc": "11806:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11806:14:11"
																	},
																	{
																		"hexValue": "617274776f726b20736f6c64",
																		"kind": "string",
																		"nativeSrc": "11822:14:11",
																		"nodeType": "YulLiteral",
																		"src": "11822:14:11",
																		"type": "",
																		"value": "artwork sold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11799:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11799:6:11"
																},
																"nativeSrc": "11799:38:11",
																"nodeType": "YulFunctionCall",
																"src": "11799:38:11"
															},
															"nativeSrc": "11799:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "11799:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f",
												"nativeSrc": "11682:162:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11780:6:11",
														"nodeType": "YulTypedName",
														"src": "11780:6:11",
														"type": ""
													}
												],
												"src": "11682:162:11"
											},
											{
												"body": {
													"nativeSrc": "11996:220:11",
													"nodeType": "YulBlock",
													"src": "11996:220:11",
													"statements": [
														{
															"nativeSrc": "12006:74:11",
															"nodeType": "YulAssignment",
															"src": "12006:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12072:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12072:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12077:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12077:2:11",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12013:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12013:58:11"
																},
																"nativeSrc": "12013:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12013:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12006:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12006:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12178:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12178:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f",
																	"nativeSrc": "12089:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12089:88:11"
																},
																"nativeSrc": "12089:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12089:93:11"
															},
															"nativeSrc": "12089:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12089:93:11"
														},
														{
															"nativeSrc": "12191:19:11",
															"nodeType": "YulAssignment",
															"src": "12191:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12202:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12202:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12207:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12207:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12198:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12198:3:11"
																},
																"nativeSrc": "12198:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12198:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12191:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12191:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11850:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11984:3:11",
														"nodeType": "YulTypedName",
														"src": "11984:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11992:3:11",
														"nodeType": "YulTypedName",
														"src": "11992:3:11",
														"type": ""
													}
												],
												"src": "11850:366:11"
											},
											{
												"body": {
													"nativeSrc": "12421:330:11",
													"nodeType": "YulBlock",
													"src": "12421:330:11",
													"statements": [
														{
															"nativeSrc": "12431:26:11",
															"nodeType": "YulAssignment",
															"src": "12431:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12443:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12443:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12454:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12454:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12439:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12439:3:11"
																},
																"nativeSrc": "12439:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12439:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12431:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12431:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12511:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12511:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12524:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12524:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12535:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12535:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12520:3:11"
																		},
																		"nativeSrc": "12520:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12520:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12467:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "12467:43:11"
																},
																"nativeSrc": "12467:71:11",
																"nodeType": "YulFunctionCall",
																"src": "12467:71:11"
															},
															"nativeSrc": "12467:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "12467:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12559:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12559:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12570:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12570:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12555:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12555:3:11"
																		},
																		"nativeSrc": "12555:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12555:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12579:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12579:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12585:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12585:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12575:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12575:3:11"
																		},
																		"nativeSrc": "12575:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12575:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12548:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12548:6:11"
																},
																"nativeSrc": "12548:48:11",
																"nodeType": "YulFunctionCall",
																"src": "12548:48:11"
															},
															"nativeSrc": "12548:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "12548:48:11"
														},
														{
															"nativeSrc": "12605:139:11",
															"nodeType": "YulAssignment",
															"src": "12605:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12739:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12739:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12613:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12613:124:11"
																},
																"nativeSrc": "12613:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12613:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12605:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12605:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12222:529:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12393:9:11",
														"nodeType": "YulTypedName",
														"src": "12393:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12405:6:11",
														"nodeType": "YulTypedName",
														"src": "12405:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12416:4:11",
														"nodeType": "YulTypedName",
														"src": "12416:4:11",
														"type": ""
													}
												],
												"src": "12222:529:11"
											},
											{
												"body": {
													"nativeSrc": "12785:152:11",
													"nodeType": "YulBlock",
													"src": "12785:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12802:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12802:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12805:77:11",
																		"nodeType": "YulLiteral",
																		"src": "12805:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12795:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12795:6:11"
																},
																"nativeSrc": "12795:88:11",
																"nodeType": "YulFunctionCall",
																"src": "12795:88:11"
															},
															"nativeSrc": "12795:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "12795:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12899:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12899:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12902:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12902:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12892:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12892:6:11"
																},
																"nativeSrc": "12892:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12892:15:11"
															},
															"nativeSrc": "12892:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12892:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12923:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12923:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12926:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12926:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12916:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12916:6:11"
																},
																"nativeSrc": "12916:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12916:15:11"
															},
															"nativeSrc": "12916:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12916:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12757:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "12757:180:11"
											},
											{
												"body": {
													"nativeSrc": "12994:269:11",
													"nodeType": "YulBlock",
													"src": "12994:269:11",
													"statements": [
														{
															"nativeSrc": "13004:22:11",
															"nodeType": "YulAssignment",
															"src": "13004:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13018:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13018:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13024:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13024:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13014:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13014:3:11"
																},
																"nativeSrc": "13014:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13014:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13004:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13004:6:11"
																}
															]
														},
														{
															"nativeSrc": "13035:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13035:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13065:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13065:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13071:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13071:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13061:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13061:3:11"
																},
																"nativeSrc": "13061:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13061:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13039:18:11",
																	"nodeType": "YulTypedName",
																	"src": "13039:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13112:51:11",
																"nodeType": "YulBlock",
																"src": "13112:51:11",
																"statements": [
																	{
																		"nativeSrc": "13126:27:11",
																		"nodeType": "YulAssignment",
																		"src": "13126:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13140:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "13140:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13148:4:11",
																					"nodeType": "YulLiteral",
																					"src": "13148:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13136:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13136:3:11"
																			},
																			"nativeSrc": "13136:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13136:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13126:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13126:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13092:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "13092:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13085:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13085:6:11"
																},
																"nativeSrc": "13085:26:11",
																"nodeType": "YulFunctionCall",
																"src": "13085:26:11"
															},
															"nativeSrc": "13082:81:11",
															"nodeType": "YulIf",
															"src": "13082:81:11"
														},
														{
															"body": {
																"nativeSrc": "13215:42:11",
																"nodeType": "YulBlock",
																"src": "13215:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13229:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13229:16:11"
																			},
																			"nativeSrc": "13229:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13229:18:11"
																		},
																		"nativeSrc": "13229:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13229:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13179:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "13179:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13202:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13202:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13210:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13210:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13199:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "13199:2:11"
																		},
																		"nativeSrc": "13199:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13199:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13176:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "13176:2:11"
																},
																"nativeSrc": "13176:38:11",
																"nodeType": "YulFunctionCall",
																"src": "13176:38:11"
															},
															"nativeSrc": "13173:84:11",
															"nodeType": "YulIf",
															"src": "13173:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12943:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12978:4:11",
														"nodeType": "YulTypedName",
														"src": "12978:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12987:6:11",
														"nodeType": "YulTypedName",
														"src": "12987:6:11",
														"type": ""
													}
												],
												"src": "12943:320:11"
											},
											{
												"body": {
													"nativeSrc": "13297:152:11",
													"nodeType": "YulBlock",
													"src": "13297:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13314:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13314:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13317:77:11",
																		"nodeType": "YulLiteral",
																		"src": "13317:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13307:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13307:6:11"
																},
																"nativeSrc": "13307:88:11",
																"nodeType": "YulFunctionCall",
																"src": "13307:88:11"
															},
															"nativeSrc": "13307:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "13307:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13411:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13411:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13414:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13414:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13404:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13404:6:11"
																},
																"nativeSrc": "13404:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13404:15:11"
															},
															"nativeSrc": "13404:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13404:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13435:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13435:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13438:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13438:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13428:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13428:6:11"
																},
																"nativeSrc": "13428:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13428:15:11"
															},
															"nativeSrc": "13428:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13428:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "13269:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "13269:180:11"
											},
											{
												"body": {
													"nativeSrc": "13503:362:11",
													"nodeType": "YulBlock",
													"src": "13503:362:11",
													"statements": [
														{
															"nativeSrc": "13513:25:11",
															"nodeType": "YulAssignment",
															"src": "13513:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13536:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13536:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13518:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13518:17:11"
																},
																"nativeSrc": "13518:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13518:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13513:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13513:1:11"
																}
															]
														},
														{
															"nativeSrc": "13547:25:11",
															"nodeType": "YulAssignment",
															"src": "13547:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13570:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13570:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13552:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13552:17:11"
																},
																"nativeSrc": "13552:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13552:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13547:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13547:1:11"
																}
															]
														},
														{
															"nativeSrc": "13581:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13581:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13604:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13604:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13607:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13607:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13600:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13600:3:11"
																},
																"nativeSrc": "13600:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13600:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13585:11:11",
																	"nodeType": "YulTypedName",
																	"src": "13585:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13618:41:11",
															"nodeType": "YulAssignment",
															"src": "13618:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13647:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "13647:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13629:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13629:17:11"
																},
																"nativeSrc": "13629:30:11",
																"nodeType": "YulFunctionCall",
																"src": "13629:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13618:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "13618:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13836:22:11",
																"nodeType": "YulBlock",
																"src": "13836:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13838:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13838:16:11"
																			},
																			"nativeSrc": "13838:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13838:18:11"
																		},
																		"nativeSrc": "13838:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13838:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13769:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "13769:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13762:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "13762:6:11"
																				},
																				"nativeSrc": "13762:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13762:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13792:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "13792:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13799:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "13799:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13808:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "13808:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13795:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "13795:3:11"
																						},
																						"nativeSrc": "13795:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "13795:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13789:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "13789:2:11"
																				},
																				"nativeSrc": "13789:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13789:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13742:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "13742:2:11"
																		},
																		"nativeSrc": "13742:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13742:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13722:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13722:6:11"
																},
																"nativeSrc": "13722:113:11",
																"nodeType": "YulFunctionCall",
																"src": "13722:113:11"
															},
															"nativeSrc": "13719:139:11",
															"nodeType": "YulIf",
															"src": "13719:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13455:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13486:1:11",
														"nodeType": "YulTypedName",
														"src": "13486:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13489:1:11",
														"nodeType": "YulTypedName",
														"src": "13489:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13495:7:11",
														"nodeType": "YulTypedName",
														"src": "13495:7:11",
														"type": ""
													}
												],
												"src": "13455:410:11"
											},
											{
												"body": {
													"nativeSrc": "13899:152:11",
													"nodeType": "YulBlock",
													"src": "13899:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13916:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13916:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13919:77:11",
																		"nodeType": "YulLiteral",
																		"src": "13919:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13909:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13909:6:11"
																},
																"nativeSrc": "13909:88:11",
																"nodeType": "YulFunctionCall",
																"src": "13909:88:11"
															},
															"nativeSrc": "13909:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "13909:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14013:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14013:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14016:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14016:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14006:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14006:6:11"
																},
																"nativeSrc": "14006:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14006:15:11"
															},
															"nativeSrc": "14006:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14006:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14037:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14037:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14040:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14040:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14030:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14030:6:11"
																},
																"nativeSrc": "14030:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14030:15:11"
															},
															"nativeSrc": "14030:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14030:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13871:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "13871:180:11"
											},
											{
												"body": {
													"nativeSrc": "14099:143:11",
													"nodeType": "YulBlock",
													"src": "14099:143:11",
													"statements": [
														{
															"nativeSrc": "14109:25:11",
															"nodeType": "YulAssignment",
															"src": "14109:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14132:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14132:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14114:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14114:17:11"
																},
																"nativeSrc": "14114:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14114:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14109:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14109:1:11"
																}
															]
														},
														{
															"nativeSrc": "14143:25:11",
															"nodeType": "YulAssignment",
															"src": "14143:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14166:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14166:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14148:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14148:17:11"
																},
																"nativeSrc": "14148:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14148:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14143:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14143:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14190:22:11",
																"nodeType": "YulBlock",
																"src": "14190:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14192:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "14192:16:11"
																			},
																			"nativeSrc": "14192:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14192:18:11"
																		},
																		"nativeSrc": "14192:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14192:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14187:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14187:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14180:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14180:6:11"
																},
																"nativeSrc": "14180:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14180:9:11"
															},
															"nativeSrc": "14177:35:11",
															"nodeType": "YulIf",
															"src": "14177:35:11"
														},
														{
															"nativeSrc": "14222:14:11",
															"nodeType": "YulAssignment",
															"src": "14222:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14231:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14231:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14234:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14234:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14227:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14227:3:11"
																},
																"nativeSrc": "14227:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14227:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14222:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14222:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14057:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14088:1:11",
														"nodeType": "YulTypedName",
														"src": "14088:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14091:1:11",
														"nodeType": "YulTypedName",
														"src": "14091:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14097:1:11",
														"nodeType": "YulTypedName",
														"src": "14097:1:11",
														"type": ""
													}
												],
												"src": "14057:185:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can call this fun\")\n\n        mstore(add(memPtr, 32), \"ction\")\n\n    }\n\n    function abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total Ownership max 100%\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment must equal to art price\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f(memPtr) {\n\n        mstore(add(memPtr, 0), \"artwork sold\")\n\n    }\n\n    function abi_encode_t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009b575f3560e01c80638da5cb5b116100635780638da5cb5b146101915780638f2238ba146101bb578063ab1ce0b0146101f7578063cd7e10c114610201578063d44a0e611461023e578063e89e4ed6146102685761009b565b8063538b72421461009f5780635d1b5805146100db5780636beeedb8146101035780637f8fbc221461012b57806389b5efa714610167575b5f80fd5b3480156100aa575f80fd5b506100c560048036038101906100c09190610985565b6102a6565b6040516100d291906109ca565b60405180910390f35b3480156100e6575f80fd5b5061010160048036038101906100fc9190610a16565b6102c3565b005b34801561010e575f80fd5b5061012960048036038101906101249190610a54565b6104fc565b005b348015610136575f80fd5b50610151600480360381019061014c9190610985565b610593565b60405161015e9190610a8e565b60405180910390f35b348015610172575f80fd5b5061017b6105a8565b6040516101889190610a8e565b60405180910390f35b34801561019c575f80fd5b506101a56105ae565b6040516101b29190610ab6565b60405180910390f35b3480156101c6575f80fd5b506101e160048036038101906101dc9190610c0b565b6105d1565b6040516101ee9190610ccc565b60405180910390f35b6101ff610668565b005b34801561020c575f80fd5b5061022760048036038101906102229190610a54565b6106ef565b604051610235929190610cec565b60405180910390f35b348015610249575f80fd5b5061025261073d565b60405161025f9190610a8e565b60405180910390f35b348015610273575f80fd5b5061028e60048036038101906102899190610a54565b610743565b60405161029d93929190610d13565b60405180910390f35b6004602052805f5260405f205f915054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790610dbf565b60405180910390fd5b6064816005546103609190610e0a565b11156103a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039890610e87565b60405180910390fd5b5f60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152509050600181908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600160045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508160055f8282546104f09190610e0a565b92505081905550505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610589576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058090610dbf565b60405180910390fd5b8060068190555050565b6003602052805f5260405f205f915090505481565b60065481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60605f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065790610dbf565b60405180910390fd5b819050919050565b60065434146106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a390610eef565b60405180910390fd5b6106b461080a565b7fd9952cbf75a3b7d22cfb7c2b9c7c00a23513676e5a486e14dcaf74485b4831276006546040516106e59190610f57565b60405180910390a1565b600181815481106106fe575f80fd5b905f5260205f2090600202015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60055481565b60028181548110610752575f80fd5b905f5260205f2090600302015f91509050805f01805461077190610fb0565b80601f016020809104026020016040519081016040528092919081815260200182805461079d90610fb0565b80156107e85780601f106107bf576101008083540402835291602001916107e8565b820191905f5260205f20905b8154815290600101906020018083116107cb57829003601f168201915b505050505090806001015490806002015f9054906101000a900460ff16905083565b5f5b600180549050811015610917575f6001828154811061082e5761082d610fe0565b5b905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050805f015173ffffffffffffffffffffffffffffffffffffffff166108fc606483602001516006546108d6919061100d565b6108e0919061107b565b90811502906040515f60405180830381858888f19350505050158015610908573d5f803e3d5ffd5b5050808060010191505061080c565b50565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109548261092b565b9050919050565b6109648161094a565b811461096e575f80fd5b50565b5f8135905061097f8161095b565b92915050565b5f6020828403121561099a57610999610923565b5b5f6109a784828501610971565b91505092915050565b5f8115159050919050565b6109c4816109b0565b82525050565b5f6020820190506109dd5f8301846109bb565b92915050565b5f819050919050565b6109f5816109e3565b81146109ff575f80fd5b50565b5f81359050610a10816109ec565b92915050565b5f8060408385031215610a2c57610a2b610923565b5b5f610a3985828601610971565b9250506020610a4a85828601610a02565b9150509250929050565b5f60208284031215610a6957610a68610923565b5b5f610a7684828501610a02565b91505092915050565b610a88816109e3565b82525050565b5f602082019050610aa15f830184610a7f565b92915050565b610ab08161094a565b82525050565b5f602082019050610ac95f830184610aa7565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610b1d82610ad7565b810181811067ffffffffffffffff82111715610b3c57610b3b610ae7565b5b80604052505050565b5f610b4e61091a565b9050610b5a8282610b14565b919050565b5f67ffffffffffffffff821115610b7957610b78610ae7565b5b610b8282610ad7565b9050602081019050919050565b828183375f83830152505050565b5f610baf610baa84610b5f565b610b45565b905082815260208101848484011115610bcb57610bca610ad3565b5b610bd6848285610b8f565b509392505050565b5f82601f830112610bf257610bf1610acf565b5b8135610c02848260208601610b9d565b91505092915050565b5f60208284031215610c2057610c1f610923565b5b5f82013567ffffffffffffffff811115610c3d57610c3c610927565b5b610c4984828501610bde565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610c89578082015181840152602081019050610c6e565b5f8484015250505050565b5f610c9e82610c52565b610ca88185610c5c565b9350610cb8818560208601610c6c565b610cc181610ad7565b840191505092915050565b5f6020820190508181035f830152610ce48184610c94565b905092915050565b5f604082019050610cff5f830185610aa7565b610d0c6020830184610a7f565b9392505050565b5f6060820190508181035f830152610d2b8186610c94565b9050610d3a6020830185610a7f565b610d4760408301846109bb565b949350505050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e5f8201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b5f610da9602583610c5c565b9150610db482610d4f565b604082019050919050565b5f6020820190508181035f830152610dd681610d9d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e14826109e3565b9150610e1f836109e3565b9250828201905080821115610e3757610e36610ddd565b5b92915050565b7f546f74616c204f776e657273686970206d6178203130302500000000000000005f82015250565b5f610e71601883610c5c565b9150610e7c82610e3d565b602082019050919050565b5f6020820190508181035f830152610e9e81610e65565b9050919050565b7f5061796d656e74206d75737420657175616c20746f20617274207072696365005f82015250565b5f610ed9601f83610c5c565b9150610ee482610ea5565b602082019050919050565b5f6020820190508181035f830152610f0681610ecd565b9050919050565b7f617274776f726b20736f6c6400000000000000000000000000000000000000005f82015250565b5f610f41600c83610c5c565b9150610f4c82610f0d565b602082019050919050565b5f604082019050610f6a5f830184610a7f565b8181036020830152610f7b81610f35565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610fc757607f821691505b602082108103610fda57610fd9610f83565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611017826109e3565b9150611022836109e3565b9250828202611030816109e3565b9150828204841483151761104757611046610ddd565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611085826109e3565b9150611090836109e3565b9250826110a05761109f61104e565b5b82820490509291505056fea2646970667358221220f71891fc40759925aba890bfd081e7c685fd0b586bb52483ed315d85c8107c1a64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x8F2238BA EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xAB1CE0B0 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xCD7E10C1 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xD44A0E61 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xE89E4ED6 EQ PUSH2 0x268 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0x538B7242 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5D1B5805 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x6BEEEDB8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x7F8FBC22 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x89B5EFA7 EQ PUSH2 0x167 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x347 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 PUSH1 0x5 SLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST GT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD CALLVALUE EQ PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A3 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B4 PUSH2 0x80A JUMP JUMPDEST PUSH32 0xD9952CBF75A3B7D22CFB7C2B9C7C00A23513676E5A486E14DCAF74485B483127 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6FE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x771 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79D SWAP1 PUSH2 0xFB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x917 JUMPI PUSH0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x82E JUMPI PUSH2 0x82D PUSH2 0xFE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x64 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x6 SLOAD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x908 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x80C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x954 DUP3 PUSH2 0x92B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x964 DUP2 PUSH2 0x94A JUMP JUMPDEST DUP2 EQ PUSH2 0x96E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x97F DUP2 PUSH2 0x95B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99A JUMPI PUSH2 0x999 PUSH2 0x923 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A7 DUP5 DUP3 DUP6 ADD PUSH2 0x971 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C4 DUP2 PUSH2 0x9B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DD PUSH0 DUP4 ADD DUP5 PUSH2 0x9BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F5 DUP2 PUSH2 0x9E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x9FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA10 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA2C JUMPI PUSH2 0xA2B PUSH2 0x923 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA39 DUP6 DUP3 DUP7 ADD PUSH2 0x971 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA4A DUP6 DUP3 DUP7 ADD PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA68 PUSH2 0x923 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA76 DUP5 DUP3 DUP6 ADD PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA88 DUP2 PUSH2 0x9E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA1 PUSH0 DUP4 ADD DUP5 PUSH2 0xA7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB0 DUP2 PUSH2 0x94A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC9 PUSH0 DUP4 ADD DUP5 PUSH2 0xAA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xB1D DUP3 PUSH2 0xAD7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E PUSH2 0x91A JUMP JUMPDEST SWAP1 POP PUSH2 0xB5A DUP3 DUP3 PUSH2 0xB14 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB79 JUMPI PUSH2 0xB78 PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST PUSH2 0xB82 DUP3 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBAF PUSH2 0xBAA DUP5 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xBCB JUMPI PUSH2 0xBCA PUSH2 0xAD3 JUMP JUMPDEST JUMPDEST PUSH2 0xBD6 DUP5 DUP3 DUP6 PUSH2 0xB8F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBF2 JUMPI PUSH2 0xBF1 PUSH2 0xACF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC02 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC20 JUMPI PUSH2 0xC1F PUSH2 0x923 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC3D JUMPI PUSH2 0xC3C PUSH2 0x927 JUMP JUMPDEST JUMPDEST PUSH2 0xC49 DUP5 DUP3 DUP6 ADD PUSH2 0xBDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC89 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC6E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC9E DUP3 PUSH2 0xC52 JUMP JUMPDEST PUSH2 0xCA8 DUP2 DUP6 PUSH2 0xC5C JUMP JUMPDEST SWAP4 POP PUSH2 0xCB8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xAD7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE4 DUP2 DUP5 PUSH2 0xC94 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCFF PUSH0 DUP4 ADD DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0xD0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD2B DUP2 DUP7 PUSH2 0xC94 JUMP JUMPDEST SWAP1 POP PUSH2 0xD3A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xD47 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDA9 PUSH1 0x25 DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xDB4 DUP3 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDD6 DUP2 PUSH2 0xD9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE14 DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1F DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE37 JUMPI PUSH2 0xE36 PUSH2 0xDDD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C204F776E657273686970206D617820313030250000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE71 PUSH1 0x18 DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xE7C DUP3 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE9E DUP2 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E74206D75737420657175616C20746F2061727420707269636500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xED9 PUSH1 0x1F DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xEE4 DUP3 PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF06 DUP2 PUSH2 0xECD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x617274776F726B20736F6C640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF41 PUSH1 0xC DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xF4C DUP3 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF6A PUSH0 DUP4 ADD DUP5 PUSH2 0xA7F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xF7B DUP2 PUSH2 0xF35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFDA JUMPI PUSH2 0xFD9 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1017 DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1022 DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1030 DUP2 PUSH2 0x9E3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1047 JUMPI PUSH2 0x1046 PUSH2 0xDDD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1085 DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1090 DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10A0 JUMPI PUSH2 0x109F PUSH2 0x104E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 XOR SWAP2 0xFC BLOCKHASH PUSH22 0x9925ABA890BFD081E7C685FD0B586BB52483ED315D85 0xC8 LT PUSH29 0x1A64736F6C634300081800330000000000000000000000000000000000 ",
							"sourceMap": "219:2339:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1234:476;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1754:97;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;588:62;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;749:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;493:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2427:128;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1890:214;;;:::i;:::-;;520:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;708:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;550:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;657:44;;;;;;;;;;;;;;;;;;;;;;:::o;1234:476::-;940:5;;;;;;;;;;926:19;;:10;:19;;;918:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1383:3:::1;1360:20;1342:15;;:38;;;;:::i;:::-;:44;;1334:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1425:23;1451:44;;;;;;;;1458:14;1451:44;;;;;;1474:20;1451:44;;::::0;1425:70:::1;;1506:7;1519:9;1506:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:20;1540:27;:43;1568:14;1540:43;;;;;;;;;;;;;;;:66;;;;1648:4;1617:12;:28;1630:14;1617:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1682:20;1663:15;;:39;;;;;;;:::i;:::-;;;;;;;;1323:387;1234:476:::0;;:::o;1754:97::-;940:5;;;;;;;;;;926:19;;:10;:19;;;918:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1837:6:::1;1822:12;:21;;;;1754:97:::0;:::o;588:62::-;;;;;;;;;;;;;;;;;:::o;749:27::-;;;;:::o;493:20::-;;;;;;;;;;;;:::o;2427:128::-;2506:13;940:5;;;;;;;;;;926:19;;:10;:19;;;918:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2539:8:::1;2532:15;;2427:128:::0;;;:::o;1890:214::-;1963:12;;1950:9;:25;1942:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2022:17;:15;:17::i;:::-;2055:41;2067:12;;2055:41;;;;;;:::i;:::-;;;;;;;;1890:214::o;520:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;708:34::-;;;;:::o;550:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2134:259::-;2184:9;2179:207;2203:7;:14;;;;2199:1;:18;2179:207;;;2238:20;2261:7;2269:1;2261:10;;;;;;;;:::i;:::-;;;;;;;;;;;;2238:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:6;:20;;;2286:38;;:88;2370:3;2341:6;:26;;;2326:12;;:41;;;;:::i;:::-;2325:48;;;;:::i;:::-;2286:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2223:163;2219:3;;;;;;;2179:207;;;;2134:259::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:77::-;1640:7;1669:5;1658:16;;1603:77;;;:::o;1686:122::-;1759:24;1777:5;1759:24;:::i;:::-;1752:5;1749:35;1739:63;;1798:1;1795;1788:12;1739:63;1686:122;:::o;1814:139::-;1860:5;1898:6;1885:20;1876:29;;1914:33;1941:5;1914:33;:::i;:::-;1814:139;;;;:::o;1959:474::-;2027:6;2035;2084:2;2072:9;2063:7;2059:23;2055:32;2052:119;;;2090:79;;:::i;:::-;2052:119;2210:1;2235:53;2280:7;2271:6;2260:9;2256:22;2235:53;:::i;:::-;2225:63;;2181:117;2337:2;2363:53;2408:7;2399:6;2388:9;2384:22;2363:53;:::i;:::-;2353:63;;2308:118;1959:474;;;;;:::o;2439:329::-;2498:6;2547:2;2535:9;2526:7;2522:23;2518:32;2515:119;;;2553:79;;:::i;:::-;2515:119;2673:1;2698:53;2743:7;2734:6;2723:9;2719:22;2698:53;:::i;:::-;2688:63;;2644:117;2439:329;;;;:::o;2774:118::-;2861:24;2879:5;2861:24;:::i;:::-;2856:3;2849:37;2774:118;;:::o;2898:222::-;2991:4;3029:2;3018:9;3014:18;3006:26;;3042:71;3110:1;3099:9;3095:17;3086:6;3042:71;:::i;:::-;2898:222;;;;:::o;3126:118::-;3213:24;3231:5;3213:24;:::i;:::-;3208:3;3201:37;3126:118;;:::o;3250:222::-;3343:4;3381:2;3370:9;3366:18;3358:26;;3394:71;3462:1;3451:9;3447:17;3438:6;3394:71;:::i;:::-;3250:222;;;;:::o;3478:117::-;3587:1;3584;3577:12;3601:117;3710:1;3707;3700:12;3724:102;3765:6;3816:2;3812:7;3807:2;3800:5;3796:14;3792:28;3782:38;;3724:102;;;:::o;3832:180::-;3880:77;3877:1;3870:88;3977:4;3974:1;3967:15;4001:4;3998:1;3991:15;4018:281;4101:27;4123:4;4101:27;:::i;:::-;4093:6;4089:40;4231:6;4219:10;4216:22;4195:18;4183:10;4180:34;4177:62;4174:88;;;4242:18;;:::i;:::-;4174:88;4282:10;4278:2;4271:22;4061:238;4018:281;;:::o;4305:129::-;4339:6;4366:20;;:::i;:::-;4356:30;;4395:33;4423:4;4415:6;4395:33;:::i;:::-;4305:129;;;:::o;4440:308::-;4502:4;4592:18;4584:6;4581:30;4578:56;;;4614:18;;:::i;:::-;4578:56;4652:29;4674:6;4652:29;:::i;:::-;4644:37;;4736:4;4730;4726:15;4718:23;;4440:308;;;:::o;4754:146::-;4851:6;4846:3;4841;4828:30;4892:1;4883:6;4878:3;4874:16;4867:27;4754:146;;;:::o;4906:425::-;4984:5;5009:66;5025:49;5067:6;5025:49;:::i;:::-;5009:66;:::i;:::-;5000:75;;5098:6;5091:5;5084:21;5136:4;5129:5;5125:16;5174:3;5165:6;5160:3;5156:16;5153:25;5150:112;;;5181:79;;:::i;:::-;5150:112;5271:54;5318:6;5313:3;5308;5271:54;:::i;:::-;4990:341;4906:425;;;;;:::o;5351:340::-;5407:5;5456:3;5449:4;5441:6;5437:17;5433:27;5423:122;;5464:79;;:::i;:::-;5423:122;5581:6;5568:20;5606:79;5681:3;5673:6;5666:4;5658:6;5654:17;5606:79;:::i;:::-;5597:88;;5413:278;5351:340;;;;:::o;5697:509::-;5766:6;5815:2;5803:9;5794:7;5790:23;5786:32;5783:119;;;5821:79;;:::i;:::-;5783:119;5969:1;5958:9;5954:17;5941:31;5999:18;5991:6;5988:30;5985:117;;;6021:79;;:::i;:::-;5985:117;6126:63;6181:7;6172:6;6161:9;6157:22;6126:63;:::i;:::-;6116:73;;5912:287;5697:509;;;;:::o;6212:99::-;6264:6;6298:5;6292:12;6282:22;;6212:99;;;:::o;6317:169::-;6401:11;6435:6;6430:3;6423:19;6475:4;6470:3;6466:14;6451:29;;6317:169;;;;:::o;6492:246::-;6573:1;6583:113;6597:6;6594:1;6591:13;6583:113;;;6682:1;6677:3;6673:11;6667:18;6663:1;6658:3;6654:11;6647:39;6619:2;6616:1;6612:10;6607:15;;6583:113;;;6730:1;6721:6;6716:3;6712:16;6705:27;6554:184;6492:246;;;:::o;6744:377::-;6832:3;6860:39;6893:5;6860:39;:::i;:::-;6915:71;6979:6;6974:3;6915:71;:::i;:::-;6908:78;;6995:65;7053:6;7048:3;7041:4;7034:5;7030:16;6995:65;:::i;:::-;7085:29;7107:6;7085:29;:::i;:::-;7080:3;7076:39;7069:46;;6836:285;6744:377;;;;:::o;7127:313::-;7240:4;7278:2;7267:9;7263:18;7255:26;;7327:9;7321:4;7317:20;7313:1;7302:9;7298:17;7291:47;7355:78;7428:4;7419:6;7355:78;:::i;:::-;7347:86;;7127:313;;;;:::o;7446:332::-;7567:4;7605:2;7594:9;7590:18;7582:26;;7618:71;7686:1;7675:9;7671:17;7662:6;7618:71;:::i;:::-;7699:72;7767:2;7756:9;7752:18;7743:6;7699:72;:::i;:::-;7446:332;;;;;:::o;7784:521::-;7947:4;7985:2;7974:9;7970:18;7962:26;;8034:9;8028:4;8024:20;8020:1;8009:9;8005:17;7998:47;8062:78;8135:4;8126:6;8062:78;:::i;:::-;8054:86;;8150:72;8218:2;8207:9;8203:18;8194:6;8150:72;:::i;:::-;8232:66;8294:2;8283:9;8279:18;8270:6;8232:66;:::i;:::-;7784:521;;;;;;:::o;8311:224::-;8451:34;8447:1;8439:6;8435:14;8428:58;8520:7;8515:2;8507:6;8503:15;8496:32;8311:224;:::o;8541:366::-;8683:3;8704:67;8768:2;8763:3;8704:67;:::i;:::-;8697:74;;8780:93;8869:3;8780:93;:::i;:::-;8898:2;8893:3;8889:12;8882:19;;8541:366;;;:::o;8913:419::-;9079:4;9117:2;9106:9;9102:18;9094:26;;9166:9;9160:4;9156:20;9152:1;9141:9;9137:17;9130:47;9194:131;9320:4;9194:131;:::i;:::-;9186:139;;8913:419;;;:::o;9338:180::-;9386:77;9383:1;9376:88;9483:4;9480:1;9473:15;9507:4;9504:1;9497:15;9524:191;9564:3;9583:20;9601:1;9583:20;:::i;:::-;9578:25;;9617:20;9635:1;9617:20;:::i;:::-;9612:25;;9660:1;9657;9653:9;9646:16;;9681:3;9678:1;9675:10;9672:36;;;9688:18;;:::i;:::-;9672:36;9524:191;;;;:::o;9721:174::-;9861:26;9857:1;9849:6;9845:14;9838:50;9721:174;:::o;9901:366::-;10043:3;10064:67;10128:2;10123:3;10064:67;:::i;:::-;10057:74;;10140:93;10229:3;10140:93;:::i;:::-;10258:2;10253:3;10249:12;10242:19;;9901:366;;;:::o;10273:419::-;10439:4;10477:2;10466:9;10462:18;10454:26;;10526:9;10520:4;10516:20;10512:1;10501:9;10497:17;10490:47;10554:131;10680:4;10554:131;:::i;:::-;10546:139;;10273:419;;;:::o;10698:181::-;10838:33;10834:1;10826:6;10822:14;10815:57;10698:181;:::o;10885:366::-;11027:3;11048:67;11112:2;11107:3;11048:67;:::i;:::-;11041:74;;11124:93;11213:3;11124:93;:::i;:::-;11242:2;11237:3;11233:12;11226:19;;10885:366;;;:::o;11257:419::-;11423:4;11461:2;11450:9;11446:18;11438:26;;11510:9;11504:4;11500:20;11496:1;11485:9;11481:17;11474:47;11538:131;11664:4;11538:131;:::i;:::-;11530:139;;11257:419;;;:::o;11682:162::-;11822:14;11818:1;11810:6;11806:14;11799:38;11682:162;:::o;11850:366::-;11992:3;12013:67;12077:2;12072:3;12013:67;:::i;:::-;12006:74;;12089:93;12178:3;12089:93;:::i;:::-;12207:2;12202:3;12198:12;12191:19;;11850:366;;;:::o;12222:529::-;12416:4;12454:2;12443:9;12439:18;12431:26;;12467:71;12535:1;12524:9;12520:17;12511:6;12467:71;:::i;:::-;12585:9;12579:4;12575:20;12570:2;12559:9;12555:18;12548:48;12613:131;12739:4;12613:131;:::i;:::-;12605:139;;12222:529;;;;:::o;12757:180::-;12805:77;12802:1;12795:88;12902:4;12899:1;12892:15;12926:4;12923:1;12916:15;12943:320;12987:6;13024:1;13018:4;13014:12;13004:22;;13071:1;13065:4;13061:12;13092:18;13082:81;;13148:4;13140:6;13136:17;13126:27;;13082:81;13210:2;13202:6;13199:14;13179:18;13176:38;13173:84;;13229:18;;:::i;:::-;13173:84;12994:269;12943:320;;;:::o;13269:180::-;13317:77;13314:1;13307:88;13414:4;13411:1;13404:15;13438:4;13435:1;13428:15;13455:410;13495:7;13518:20;13536:1;13518:20;:::i;:::-;13513:25;;13552:20;13570:1;13552:20;:::i;:::-;13547:25;;13607:1;13604;13600:9;13629:30;13647:11;13629:30;:::i;:::-;13618:41;;13808:1;13799:7;13795:15;13792:1;13789:22;13769:1;13762:9;13742:83;13719:139;;13838:18;;:::i;:::-;13719:139;13503:362;13455:410;;;;:::o;13871:180::-;13919:77;13916:1;13909:88;14016:4;14013:1;14006:15;14040:4;14037:1;14030:15;14057:185;14097:1;14114:20;14132:1;14114:20;:::i;:::-;14109:25;;14148:20;14166:1;14148:20;:::i;:::-;14143:25;;14187:1;14177:35;;14192:18;;:::i;:::-;14177:35;14234:1;14231;14227:9;14222:14;;14057:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "864200",
								"executionCost": "30171",
								"totalCost": "894371"
							},
							"external": {
								"addArtist(address,uint256)": "infinite",
								"artistSigned(address)": "2834",
								"artistToOwnershipPercentage(address)": "2869",
								"artists(uint256)": "infinite",
								"artworkPrice()": "2514",
								"milestones(uint256)": "infinite",
								"owner()": "2505",
								"purchaseArtwork()": "infinite",
								"resolveDispute(string)": "infinite",
								"setArtworkPrice(uint256)": "24726",
								"totalPercentage()": "2513"
							},
							"internal": {
								"distributeFunds()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 2558,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 219,
									"end": 2558,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 219,
									"end": 2558,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 741,
									"end": 742,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 708,
									"end": 742,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 708,
									"end": 742,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1150,
									"end": 1200,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1182,
									"end": 1192,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1174,
									"end": 1179,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1192,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 219,
									"end": 2558,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 2558,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 219,
									"end": 2558,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 2558,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 2558,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 219,
									"end": 2558,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 2558,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f71891fc40759925aba890bfd081e7c685fd0b586bb52483ed315d85c8107c1a64736f6c63430008180033",
									".code": [
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "8F2238BA"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "AB1CE0B0"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "CD7E10C1"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "D44A0E61"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "E89E4ED6"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "538B7242"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "5D1B5805"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "6BEEEDB8"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "7F8FBC22"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "89B5EFA7"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 219,
											"end": 2558,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 657,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 657,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1234,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1234,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1754,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1754,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 588,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 588,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 588,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 749,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 749,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 493,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 493,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2427,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2427,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2427,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 2104,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1890,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1890,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1890,
											"end": 2104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 2104,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1890,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 2104,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 520,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 520,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 708,
											"end": 742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 708,
											"end": 742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 550,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 550,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 550,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 657,
											"end": 701,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 657,
											"end": 701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 926,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 926,
											"end": 936,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 926,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 926,
											"end": 945,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 918,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1360,
											"end": 1380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1342,
											"end": 1357,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1342,
											"end": 1380,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1342,
											"end": 1380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1342,
											"end": 1380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1386,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1386,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1334,
											"end": 1414,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1334,
											"end": 1414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1472,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1494,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1495,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1495,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1519,
											"end": 1528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1586,
											"end": 1606,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1582,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1583,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1606,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1606,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1606,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1648,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1617,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1644,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1682,
											"end": 1702,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1663,
											"end": 1678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1663,
											"end": 1702,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1702,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 926,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 926,
											"end": 936,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 926,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 926,
											"end": 945,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 918,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1837,
											"end": 1843,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1822,
											"end": 1843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1843,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 588,
											"end": 650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 749,
											"end": 776,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 513,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 493,
											"end": 513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2506,
											"end": 2519,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 926,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 926,
											"end": 936,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 926,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 926,
											"end": 945,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 918,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 918,
											"end": 987,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 918,
											"end": 987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 2104,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1890,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1959,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1975,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1942,
											"end": 2011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1942,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2022,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2022,
											"end": 2039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2039,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2022,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "PUSH",
											"source": 10,
											"value": "D9952CBF75A3B7D22CFB7C2B9C7C00A23513676E5A486E14DCAF74485B483127"
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2055,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2096,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 2104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 520,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 708,
											"end": 742,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 708,
											"end": 742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 550,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 550,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 550,
											"end": 579,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 550,
											"end": 579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2393,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2134,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2203,
											"end": 2217,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2217,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2217,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2258,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2268,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2269,
											"end": 2270,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2261,
											"end": 2271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2300,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2314,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2324,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2324,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "PUSH",
											"source": 10,
											"value": "8FC"
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2367,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2367,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2326,
											"end": 2367,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2326,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2367,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2326,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2325,
											"end": 2373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1674,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1777,
											"end": 1782,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1759,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1752,
											"end": 1757,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 1784,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1788,
											"end": 1800,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1686,
											"end": 1808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1905,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1905,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1941,
											"end": 1946,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1914,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2090,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2269,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 2235,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2288,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2288,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2181,
											"end": 2298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2339,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2363,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 2433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2439,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 2439,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2526,
											"end": 2533,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2522,
											"end": 2545,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2515,
											"end": 2634,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2515,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2515,
											"end": 2634,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2553,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2553,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2553,
											"end": 2632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2553,
											"end": 2632,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2553,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2515,
											"end": 2634,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2515,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2673,
											"end": 2674,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2743,
											"end": 2750,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2719,
											"end": 2741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2698,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2751,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2698,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2751,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2644,
											"end": 2761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2439,
											"end": 2768,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2439,
											"end": 2768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2439,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2439,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2439,
											"end": 2768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2774,
											"end": 2892,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2774,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2879,
											"end": 2884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2861,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2859,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2886,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2774,
											"end": 2892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2774,
											"end": 2892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2774,
											"end": 2892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 3120,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2898,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2991,
											"end": 2995,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3031,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3027,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3006,
											"end": 3032,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3006,
											"end": 3032,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3042,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3092,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3042,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3042,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3042,
											"end": 3113,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 3042,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 3120,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 3120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 3120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 3120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3213,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3208,
											"end": 3211,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3201,
											"end": 3238,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3394,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3595,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3478,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3588,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3589,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3601,
											"end": 3718,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3601,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3724,
											"end": 3826,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3724,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 3809,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3792,
											"end": 3820,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3820,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3724,
											"end": 3826,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3724,
											"end": 3826,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3724,
											"end": 3826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3724,
											"end": 3826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 4012,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3832,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3880,
											"end": 3957,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3877,
											"end": 3878,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3958,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3977,
											"end": 3981,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3967,
											"end": 3982,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4005,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 3999,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4006,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4299,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 4018,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4101,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4123,
											"end": 4127,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4101,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4101,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4101,
											"end": 4128,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4101,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4231,
											"end": 4237,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4229,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4238,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4177,
											"end": 4239,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4262,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4174,
											"end": 4262,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4242,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 4242,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 4242,
											"end": 4260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4242,
											"end": 4260,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 4242,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4262,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4174,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4282,
											"end": 4292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4061,
											"end": 4299,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4299,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4299,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4305,
											"end": 4434,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 4305,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4339,
											"end": 4345,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 4366,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4366,
											"end": 4386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4366,
											"end": 4386,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 4366,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4386,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4386,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 4423,
											"end": 4427,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4415,
											"end": 4421,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 4395,
											"end": 4428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4428,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 4395,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4305,
											"end": 4434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4305,
											"end": 4434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4305,
											"end": 4434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4305,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4748,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 4440,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4584,
											"end": 4590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4581,
											"end": 4611,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4578,
											"end": 4634,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4578,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 4578,
											"end": 4634,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 4614,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4578,
											"end": 4634,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 4578,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4652,
											"end": 4681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4644,
											"end": 4681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4644,
											"end": 4681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4740,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4726,
											"end": 4741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4741,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4741,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4748,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4748,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4900,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4754,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4846,
											"end": 4849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4844,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4828,
											"end": 4858,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4890,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4894,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4906,
											"end": 5331,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4906,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 4989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 5025,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 5067,
											"end": 5073,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5025,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5025,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5025,
											"end": 5074,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 5025,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 5009,
											"end": 5075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 5075,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 5009,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5075,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5098,
											"end": 5104,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5105,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5136,
											"end": 5140,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5129,
											"end": 5134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5141,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5174,
											"end": 5177,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5160,
											"end": 5163,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5153,
											"end": 5178,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5150,
											"end": 5262,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5150,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 5150,
											"end": 5262,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5181,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5181,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 5181,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5181,
											"end": 5260,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5181,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5150,
											"end": 5262,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 5150,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5313,
											"end": 5316,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5308,
											"end": 5311,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5271,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5325,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 5271,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4906,
											"end": 5331,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4906,
											"end": 5331,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4906,
											"end": 5331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4906,
											"end": 5331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4906,
											"end": 5331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4906,
											"end": 5331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5351,
											"end": 5691,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5351,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5453,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5437,
											"end": 5454,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5460,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5423,
											"end": 5545,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5464,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 5464,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5543,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5464,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5545,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5423,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5581,
											"end": 5587,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5681,
											"end": 5684,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5673,
											"end": 5679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5666,
											"end": 5670,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5664,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 5606,
											"end": 5685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5685,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5606,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5351,
											"end": 5691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5351,
											"end": 5691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5351,
											"end": 5691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5351,
											"end": 5691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5351,
											"end": 5691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5697,
											"end": 6206,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 5697,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5766,
											"end": 5772,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5817,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5803,
											"end": 5812,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5801,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5790,
											"end": 5813,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5786,
											"end": 5818,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5783,
											"end": 5902,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5783,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 5783,
											"end": 5902,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5821,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 5821,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 5821,
											"end": 5900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5821,
											"end": 5900,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 5821,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5783,
											"end": 5902,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 5783,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5969,
											"end": 5970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5967,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5954,
											"end": 5971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5941,
											"end": 5972,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 5997,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5988,
											"end": 6018,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6102,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 5985,
											"end": 6102,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 6021,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 6021,
											"end": 6100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6100,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 6021,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6102,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 5985,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 6181,
											"end": 6188,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6172,
											"end": 6178,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6157,
											"end": 6179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 6126,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6189,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 6126,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6189,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6189,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6199,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5697,
											"end": 6206,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5697,
											"end": 6206,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5697,
											"end": 6206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5697,
											"end": 6206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5697,
											"end": 6206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6212,
											"end": 6311,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 6212,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6303,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6212,
											"end": 6311,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6212,
											"end": 6311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6212,
											"end": 6311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6212,
											"end": 6311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6317,
											"end": 6486,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 6317,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6401,
											"end": 6412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6433,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6423,
											"end": 6442,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6479,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6470,
											"end": 6473,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6466,
											"end": 6480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6317,
											"end": 6486,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6317,
											"end": 6486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6317,
											"end": 6486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6317,
											"end": 6486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6317,
											"end": 6486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6492,
											"end": 6738,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6492,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6696,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6583,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6597,
											"end": 6603,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6591,
											"end": 6604,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6583,
											"end": 6696,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6583,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6583,
											"end": 6696,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6682,
											"end": 6683,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 6680,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6673,
											"end": 6684,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6663,
											"end": 6664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6661,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6654,
											"end": 6665,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6647,
											"end": 6686,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6621,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6616,
											"end": 6617,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6612,
											"end": 6622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6607,
											"end": 6622,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6607,
											"end": 6622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6583,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6583,
											"end": 6696,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6583,
											"end": 6696,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6583,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6730,
											"end": 6731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6727,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6716,
											"end": 6719,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6728,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6554,
											"end": 6738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6492,
											"end": 6738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6492,
											"end": 6738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6492,
											"end": 6738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6492,
											"end": 6738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 7121,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 6744,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6832,
											"end": 6835,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6893,
											"end": 6898,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6860,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 6860,
											"end": 6899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6860,
											"end": 6899,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6860,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 6979,
											"end": 6985,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6974,
											"end": 6977,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 6915,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6986,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 6915,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6908,
											"end": 6986,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6908,
											"end": 6986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 7053,
											"end": 7059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7048,
											"end": 7051,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7041,
											"end": 7045,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7034,
											"end": 7039,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7030,
											"end": 7046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6995,
											"end": 7060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7060,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 6995,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 7085,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7114,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 7085,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7080,
											"end": 7083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7076,
											"end": 7115,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7115,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7115,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6836,
											"end": 7121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 7121,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 7121,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 7121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 7121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 7121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7127,
											"end": 7440,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 7127,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7240,
											"end": 7244,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7280,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7267,
											"end": 7276,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7263,
											"end": 7281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7255,
											"end": 7281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7255,
											"end": 7281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7317,
											"end": 7337,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7313,
											"end": 7314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7315,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7291,
											"end": 7338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7428,
											"end": 7432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7419,
											"end": 7425,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 7355,
											"end": 7433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7433,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7355,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7347,
											"end": 7433,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7347,
											"end": 7433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7127,
											"end": 7440,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7127,
											"end": 7440,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7127,
											"end": 7440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7127,
											"end": 7440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7127,
											"end": 7440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7446,
											"end": 7778,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7446,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7571,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7605,
											"end": 7607,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7603,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7582,
											"end": 7608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7582,
											"end": 7608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7618,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7686,
											"end": 7687,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7668,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7618,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 7618,
											"end": 7689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7618,
											"end": 7689,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7618,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7699,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7767,
											"end": 7769,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7765,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7752,
											"end": 7770,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7699,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 7699,
											"end": 7771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7699,
											"end": 7771,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7699,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7446,
											"end": 7778,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7446,
											"end": 7778,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7446,
											"end": 7778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7446,
											"end": 7778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7446,
											"end": 7778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7446,
											"end": 7778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 8305,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 7784,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7947,
											"end": 7951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 7987,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7974,
											"end": 7983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7970,
											"end": 7988,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 7988,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 7988,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8034,
											"end": 8043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8028,
											"end": 8032,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8024,
											"end": 8044,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8020,
											"end": 8021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8018,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8005,
											"end": 8022,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7998,
											"end": 8045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 8135,
											"end": 8139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8126,
											"end": 8132,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 8062,
											"end": 8140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8054,
											"end": 8140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8054,
											"end": 8140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8150,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 8218,
											"end": 8220,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8207,
											"end": 8216,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8203,
											"end": 8221,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8200,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8150,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 8150,
											"end": 8222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8150,
											"end": 8222,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 8150,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8292,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8279,
											"end": 8297,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8276,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 8232,
											"end": 8298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8298,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 8232,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 8305,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 8305,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 8305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 8305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 8305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 8305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 8305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8311,
											"end": 8535,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 8311,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8451,
											"end": 8485,
											"name": "PUSH",
											"source": 11,
											"value": "4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E"
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8445,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8435,
											"end": 8449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8428,
											"end": 8486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8520,
											"end": 8527,
											"name": "PUSH",
											"source": 11,
											"value": "6374696F6E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8515,
											"end": 8517,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8507,
											"end": 8513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8503,
											"end": 8518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8496,
											"end": 8528,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8311,
											"end": 8535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8311,
											"end": 8535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8541,
											"end": 8907,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 8541,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 8768,
											"end": 8770,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 8763,
											"end": 8766,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 8771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 8704,
											"end": 8771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 8771,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 8704,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 8771,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 8771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8780,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 8869,
											"end": 8872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8780,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 8780,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8780,
											"end": 8873,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 8780,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8898,
											"end": 8900,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8893,
											"end": 8896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8889,
											"end": 8901,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8882,
											"end": 8901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8882,
											"end": 8901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8541,
											"end": 8907,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8541,
											"end": 8907,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8541,
											"end": 8907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8541,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8913,
											"end": 9332,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 8913,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9079,
											"end": 9083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9119,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9106,
											"end": 9115,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9102,
											"end": 9120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9094,
											"end": 9120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9094,
											"end": 9120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9166,
											"end": 9175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9156,
											"end": 9176,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9153,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9141,
											"end": 9150,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9154,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9130,
											"end": 9177,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9194,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 9320,
											"end": 9324,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9194,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 9194,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9194,
											"end": 9325,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 9194,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9186,
											"end": 9325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9186,
											"end": 9325,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8913,
											"end": 9332,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8913,
											"end": 9332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8913,
											"end": 9332,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8913,
											"end": 9332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9338,
											"end": 9518,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 9338,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9386,
											"end": 9463,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9383,
											"end": 9384,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9376,
											"end": 9464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9483,
											"end": 9487,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 9480,
											"end": 9481,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9473,
											"end": 9488,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9507,
											"end": 9511,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9512,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9715,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 9524,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9564,
											"end": 9567,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 9601,
											"end": 9602,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 9583,
											"end": 9603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9603,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 9583,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9578,
											"end": 9603,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9578,
											"end": 9603,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9617,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 9635,
											"end": 9636,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9617,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 9617,
											"end": 9637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9617,
											"end": 9637,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 9617,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9612,
											"end": 9637,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9612,
											"end": 9637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9660,
											"end": 9661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9657,
											"end": 9658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9653,
											"end": 9662,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9646,
											"end": 9662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9646,
											"end": 9662,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9681,
											"end": 9684,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9678,
											"end": 9679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9675,
											"end": 9685,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9672,
											"end": 9708,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9672,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 9672,
											"end": 9708,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 9688,
											"end": 9706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9672,
											"end": 9708,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 9672,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9715,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9715,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9715,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9715,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9721,
											"end": 9895,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 9721,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9861,
											"end": 9887,
											"name": "PUSH",
											"source": 11,
											"value": "546F74616C204F776E657273686970206D617820313030250000000000000000"
										},
										{
											"begin": 9857,
											"end": 9858,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9849,
											"end": 9855,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9845,
											"end": 9859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9838,
											"end": 9888,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9721,
											"end": 9895,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9721,
											"end": 9895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9901,
											"end": 10267,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 9901,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10043,
											"end": 10046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 10128,
											"end": 10130,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 10123,
											"end": 10126,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10064,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 10064,
											"end": 10131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10064,
											"end": 10131,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 10064,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10057,
											"end": 10131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10057,
											"end": 10131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10140,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 10229,
											"end": 10232,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10140,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 10140,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10140,
											"end": 10233,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 10140,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10258,
											"end": 10260,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10253,
											"end": 10256,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10249,
											"end": 10261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9901,
											"end": 10267,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9901,
											"end": 10267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9901,
											"end": 10267,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9901,
											"end": 10267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10273,
											"end": 10692,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 10273,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10439,
											"end": 10443,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10479,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10466,
											"end": 10475,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10454,
											"end": 10480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10454,
											"end": 10480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10526,
											"end": 10535,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10524,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10516,
											"end": 10536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10512,
											"end": 10513,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10501,
											"end": 10510,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10497,
											"end": 10514,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10490,
											"end": 10537,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10554,
											"end": 10685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 10680,
											"end": 10684,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10554,
											"end": 10685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 10554,
											"end": 10685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10554,
											"end": 10685,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 10554,
											"end": 10685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10546,
											"end": 10685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10546,
											"end": 10685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10273,
											"end": 10692,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10273,
											"end": 10692,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10273,
											"end": 10692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10273,
											"end": 10692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10698,
											"end": 10879,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 10698,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10838,
											"end": 10871,
											"name": "PUSH",
											"source": 11,
											"value": "5061796D656E74206D75737420657175616C20746F2061727420707269636500"
										},
										{
											"begin": 10834,
											"end": 10835,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10826,
											"end": 10832,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10822,
											"end": 10836,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10815,
											"end": 10872,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10698,
											"end": 10879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10698,
											"end": 10879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11251,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 10885,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11027,
											"end": 11030,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 11112,
											"end": 11114,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11107,
											"end": 11110,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11048,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 11048,
											"end": 11115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11048,
											"end": 11115,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 11048,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11041,
											"end": 11115,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11041,
											"end": 11115,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11124,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 11213,
											"end": 11216,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11124,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 11124,
											"end": 11217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11124,
											"end": 11217,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 11124,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11242,
											"end": 11244,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11237,
											"end": 11240,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11233,
											"end": 11245,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11226,
											"end": 11245,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11226,
											"end": 11245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11251,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11257,
											"end": 11676,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 11257,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11423,
											"end": 11427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11461,
											"end": 11463,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11450,
											"end": 11459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11446,
											"end": 11464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11438,
											"end": 11464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11438,
											"end": 11464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11510,
											"end": 11519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11504,
											"end": 11508,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11500,
											"end": 11520,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11496,
											"end": 11497,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11485,
											"end": 11494,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11481,
											"end": 11498,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11474,
											"end": 11521,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11538,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 11664,
											"end": 11668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11538,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 11538,
											"end": 11669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11538,
											"end": 11669,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 11538,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11530,
											"end": 11669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11530,
											"end": 11669,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11257,
											"end": 11676,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11257,
											"end": 11676,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11257,
											"end": 11676,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11257,
											"end": 11676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11682,
											"end": 11844,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 11682,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11822,
											"end": 11836,
											"name": "PUSH",
											"source": 11,
											"value": "617274776F726B20736F6C640000000000000000000000000000000000000000"
										},
										{
											"begin": 11818,
											"end": 11819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11810,
											"end": 11816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11806,
											"end": 11820,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11682,
											"end": 11844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11682,
											"end": 11844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11992,
											"end": 11995,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12013,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 12077,
											"end": 12079,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 12013,
											"end": 12080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12080,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 12013,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12080,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12089,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 12178,
											"end": 12181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12089,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 12089,
											"end": 12182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12089,
											"end": 12182,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 12089,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12207,
											"end": 12209,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12202,
											"end": 12205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12198,
											"end": 12210,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12191,
											"end": 12210,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12191,
											"end": 12210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 12216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12222,
											"end": 12751,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 12222,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12416,
											"end": 12420,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12454,
											"end": 12456,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12443,
											"end": 12452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12439,
											"end": 12457,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12431,
											"end": 12457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12431,
											"end": 12457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 12535,
											"end": 12536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12524,
											"end": 12533,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12520,
											"end": 12537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12511,
											"end": 12517,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 12467,
											"end": 12538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12538,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 12467,
											"end": 12538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12585,
											"end": 12594,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12579,
											"end": 12583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12575,
											"end": 12595,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12572,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12559,
											"end": 12568,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12555,
											"end": 12573,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12548,
											"end": 12596,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12613,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 12739,
											"end": 12743,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12613,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 12613,
											"end": 12744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12613,
											"end": 12744,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 12613,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12605,
											"end": 12744,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12605,
											"end": 12744,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12222,
											"end": 12751,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12222,
											"end": 12751,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12222,
											"end": 12751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12222,
											"end": 12751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12222,
											"end": 12751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12757,
											"end": 12937,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 12757,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12882,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12802,
											"end": 12803,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12795,
											"end": 12883,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12902,
											"end": 12906,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 12899,
											"end": 12900,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12892,
											"end": 12907,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12926,
											"end": 12930,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12923,
											"end": 12924,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12916,
											"end": 12931,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12987,
											"end": 12993,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13024,
											"end": 13025,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13018,
											"end": 13022,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13014,
											"end": 13026,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13004,
											"end": 13026,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13004,
											"end": 13026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13071,
											"end": 13072,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13061,
											"end": 13073,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13092,
											"end": 13110,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13082,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 13082,
											"end": 13163,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13148,
											"end": 13152,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 13140,
											"end": 13146,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13153,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13126,
											"end": 13153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13126,
											"end": 13153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13082,
											"end": 13163,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 13082,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13202,
											"end": 13208,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13199,
											"end": 13213,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13179,
											"end": 13197,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13176,
											"end": 13214,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13173,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 13173,
											"end": 13257,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 13229,
											"end": 13247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13173,
											"end": 13257,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 13173,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12994,
											"end": 13263,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 13263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13269,
											"end": 13449,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 13269,
											"end": 13449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13317,
											"end": 13394,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13314,
											"end": 13315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13307,
											"end": 13395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13414,
											"end": 13418,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 13411,
											"end": 13412,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13404,
											"end": 13419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13438,
											"end": 13442,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13435,
											"end": 13436,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 13443,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13455,
											"end": 13865,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 13455,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13495,
											"end": 13502,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13518,
											"end": 13538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 13536,
											"end": 13537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13518,
											"end": 13538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 13518,
											"end": 13538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13518,
											"end": 13538,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 13518,
											"end": 13538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13513,
											"end": 13538,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13513,
											"end": 13538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13552,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 13570,
											"end": 13571,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13552,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 13552,
											"end": 13572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13552,
											"end": 13572,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 13552,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13607,
											"end": 13608,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13604,
											"end": 13605,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13600,
											"end": 13609,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13629,
											"end": 13659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 13647,
											"end": 13658,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13629,
											"end": 13659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 13629,
											"end": 13659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13629,
											"end": 13659,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 13629,
											"end": 13659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13618,
											"end": 13659,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13618,
											"end": 13659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13808,
											"end": 13809,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13799,
											"end": 13806,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13795,
											"end": 13810,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13792,
											"end": 13793,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13789,
											"end": 13811,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 13769,
											"end": 13770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13762,
											"end": 13771,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13742,
											"end": 13825,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 13719,
											"end": 13858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 13719,
											"end": 13858,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13838,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 13838,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 13838,
											"end": 13856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13838,
											"end": 13856,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 13838,
											"end": 13856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13719,
											"end": 13858,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 13719,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13503,
											"end": 13865,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13455,
											"end": 13865,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13455,
											"end": 13865,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13455,
											"end": 13865,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13455,
											"end": 13865,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13455,
											"end": 13865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13871,
											"end": 14051,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 13871,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13919,
											"end": 13996,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13916,
											"end": 13917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13909,
											"end": 13997,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14016,
											"end": 14020,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 14013,
											"end": 14014,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14006,
											"end": 14021,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14040,
											"end": 14044,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14037,
											"end": 14038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14030,
											"end": 14045,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14057,
											"end": 14242,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 14057,
											"end": 14242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14097,
											"end": 14098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14114,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 14132,
											"end": 14133,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14114,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 14114,
											"end": 14134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14114,
											"end": 14134,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 14114,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14109,
											"end": 14134,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14109,
											"end": 14134,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14148,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 14166,
											"end": 14167,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14148,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 14148,
											"end": 14168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14148,
											"end": 14168,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 14148,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14143,
											"end": 14168,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14143,
											"end": 14168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14187,
											"end": 14188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14177,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 14177,
											"end": 14212,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14192,
											"end": 14210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 14192,
											"end": 14210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 14192,
											"end": 14210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14192,
											"end": 14210,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 14192,
											"end": 14210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14177,
											"end": 14212,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 14177,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14231,
											"end": 14232,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14227,
											"end": 14236,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14222,
											"end": 14236,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14222,
											"end": 14236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14057,
											"end": 14242,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14057,
											"end": 14242,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14057,
											"end": 14242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14057,
											"end": 14242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14057,
											"end": 14242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/CollaborativeArt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addArtist(address,uint256)": "5d1b5805",
							"artistSigned(address)": "538b7242",
							"artistToOwnershipPercentage(address)": "7f8fbc22",
							"artists(uint256)": "cd7e10c1",
							"artworkPrice()": "89b5efa7",
							"milestones(uint256)": "e89e4ed6",
							"owner()": "8da5cb5b",
							"purchaseArtwork()": "ab1ce0b0",
							"resolveDispute(string)": "8f2238ba",
							"setArtworkPrice(uint256)": "6beeedb8",
							"totalPercentage()": "d44a0e61"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"ArtworkSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_artistAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ownershipPercentage\",\"type\":\"uint256\"}],\"name\":\"addArtist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"artistSigned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"artistToOwnershipPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"artists\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ownershipPercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"artworkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"milestones\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseArtwork\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"resolveDispute\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setArtworkPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CollaborativeArt.sol\":\"CollaborativeArt\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3\",\"dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/CollaborativeArt.sol\":{\"keccak256\":\"0x865e6fba5676e8035d3bbdca97dd6615bbf2002e3b66693a9988918d4cb6f04f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beae9075f8b5048d2466dce8c930c144d2640f8a0d7ecff1b65a16443cc9888c\",\"dweb:/ipfs/QmUPhLijVWHwC5A7Qav4XVmw5VDoMzCii7CCgoyXMbJ9vL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2438,
								"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2442,
								"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
								"label": "artists",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(Artist)2429_storage)dyn_storage"
							},
							{
								"astId": 2446,
								"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
								"label": "milestones",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Milestone)2436_storage)dyn_storage"
							},
							{
								"astId": 2450,
								"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
								"label": "artistToOwnershipPercentage",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2454,
								"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
								"label": "artistSigned",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2457,
								"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
								"label": "totalPercentage",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2459,
								"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
								"label": "artworkPrice",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Artist)2429_storage)dyn_storage": {
								"base": "t_struct(Artist)2429_storage",
								"encoding": "dynamic_array",
								"label": "struct CollaborativeArt.Artist[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Milestone)2436_storage)dyn_storage": {
								"base": "t_struct(Milestone)2436_storage",
								"encoding": "dynamic_array",
								"label": "struct CollaborativeArt.Milestone[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Artist)2429_storage": {
								"encoding": "inplace",
								"label": "struct CollaborativeArt.Artist",
								"members": [
									{
										"astId": 2426,
										"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
										"label": "artistAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2428,
										"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
										"label": "ownershipPercentage",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Milestone)2436_storage": {
								"encoding": "inplace",
								"label": "struct CollaborativeArt.Milestone",
								"members": [
									{
										"astId": 2431,
										"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
										"label": "description",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 2433,
										"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
										"label": "deadline",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2435,
										"contract": "contracts/CollaborativeArt.sol:CollaborativeArt",
										"label": "completed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "IERC5267",
							"nameLocation": "143:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 4,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"src": "247:28:0"
								},
								{
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 7,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "537:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "569:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "604:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "633:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "672:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "698:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 19,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 20,
													"nodeType": "ArrayTypeName",
													"src": "698:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:0"
									},
									"scope": 24,
									"src": "426:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "133:605:0",
							"usedErrors": [],
							"usedEvents": [
								4
							]
						}
					],
					"src": "107:632:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							30
						],
						"ShortStrings": [
							241
						],
						"StorageSlot": [
							351
						]
					},
					"id": 242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 28,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 352,
							"src": "132:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 27,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 351,
										"src": "140:11:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 30,
							"name": "ShortString",
							"nameLocation": "353:11:1",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:1",
							"underlyingType": {
								"id": 29,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:1",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 31,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:1",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 241,
							"linearizedBaseContracts": [
								241
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 34,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1345:111:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 38,
									"name": "StringTooLong",
									"nameLocation": "1469:13:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1483:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:1"
									},
									"src": "1463:32:1"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 40,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:1"
									},
									"src": "1500:27:1"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1786:208:1",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "1796:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 49,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 55,
												"initialValue": {
													"arguments": [
														{
															"id": 53,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1822:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 51,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 56,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "1840:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "1836:72:1",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "1858:50:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 61,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "1893:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 60,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1879:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 63,
															"nodeType": "RevertStatement",
															"src": "1872:25:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 74,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 50,
																						"src": "1965:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 73,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 72,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 71,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 70,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 77,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 50,
																			"src": "1974:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 68,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 66,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1924:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$30_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:1",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$30_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 48,
												"id": 82,
												"nodeType": "Return",
												"src": "1917:70:1"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:1",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1731:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 42,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1773:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 46,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 45,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "1773:11:1"
													},
													"referencedDeclaration": 30,
													"src": "1773:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:1"
									},
									"scope": 241,
									"src": "1708:286:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2152:331:1",
										"statements": [
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "2162:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 98,
												"initialValue": {
													"arguments": [
														{
															"id": 96,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "2187:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																"typeString": "ShortString"
															}
														],
														"id": 95,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2176:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$30_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:1"
											},
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "2280:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 99,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 101,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:1"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:1",
													"nodeType": "YulBlock",
													"src": "2376:81:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:1"
																},
																"nativeSrc": "2390:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:1"
															},
															"nativeSrc": "2390:16:1",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:1"
																		},
																		"nativeSrc": "2426:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:1"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:1"
																},
																"nativeSrc": "2419:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:1"
															},
															"nativeSrc": "2419:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:1",
														"valueSize": 1
													},
													{
														"declaration": 88,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:1",
														"valueSize": 1
													},
													{
														"declaration": 100,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:1",
														"valueSize": 1
													},
													{
														"declaration": 100,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:1",
														"valueSize": 1
													}
												],
												"id": 106,
												"nodeType": "InlineAssembly",
												"src": "2367:90:1"
											},
											{
												"expression": {
													"id": 107,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "2473:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 92,
												"id": 108,
												"nodeType": "Return",
												"src": "2466:10:1"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:1",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2096:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 87,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 86,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "2096:11:1"
													},
													"referencedDeclaration": 30,
													"src": "2096:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2137:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:1"
									},
									"scope": 241,
									"src": "2078:405:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2625:175:1",
										"statements": [
											{
												"assignments": [
													120
												],
												"declarations": [
													{
														"constant": false,
														"id": 120,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 141,
														"src": "2635:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 119,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 130,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 125,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "2679:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 123,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "2660:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$30_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:1",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$30_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 121,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 131,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2706:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 138,
												"nodeType": "IfStatement",
												"src": "2702:69:1",
												"trueBody": {
													"id": 137,
													"nodeType": "Block",
													"src": "2719:52:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 134,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "2740:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 136,
															"nodeType": "RevertStatement",
															"src": "2733:27:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 139,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 120,
													"src": "2787:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 118,
												"id": 140,
												"nodeType": "Return",
												"src": "2780:13:1"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:1",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2575:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 113,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 112,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "2575:11:1"
													},
													"referencedDeclaration": 30,
													"src": "2575:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2616:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:1"
									},
									"scope": 241,
									"src": "2555:245:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "3023:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "3043:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 153,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 179,
													"nodeType": "Block",
													"src": "3121:127:1",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 168,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 147,
																				"src": "3161:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 165,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 351,
																				"src": "3135:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$351_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:1",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 328,
																			"src": "3135:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$259_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$259_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 170,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:1",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "3135:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 171,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "3176:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 176,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "3219:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 174,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "3202:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$30_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:1",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$30_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 152,
															"id": 178,
															"nodeType": "Return",
															"src": "3195:42:1"
														}
													]
												},
												"id": 180,
												"nodeType": "IfStatement",
												"src": "3033:215:1",
												"trueBody": {
													"id": 164,
													"nodeType": "Block",
													"src": "3063:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 161,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3098:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 160,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "3084:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$30_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 152,
															"id": 163,
															"nodeType": "Return",
															"src": "3077:27:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:1",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2949:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2970:20:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 146,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "3010:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 149,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "3010:11:1"
													},
													"referencedDeclaration": 30,
													"src": "3010:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:1"
									},
									"scope": 241,
									"src": "2914:340:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "3494:158:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3527:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 193,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "3508:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$30_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:1",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$30_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 197,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "3537:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 206,
													"nodeType": "Block",
													"src": "3609:37:1",
													"statements": [
														{
															"expression": {
																"id": 204,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "3630:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 192,
															"id": 205,
															"nodeType": "Return",
															"src": "3623:12:1"
														}
													]
												},
												"id": 207,
												"nodeType": "IfStatement",
												"src": "3504:142:1",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "3556:47:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 200,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "3586:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 199,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "3577:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$30_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 192,
															"id": 202,
															"nodeType": "Return",
															"src": "3570:22:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:1",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3415:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 185,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 184,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "3415:11:1"
													},
													"referencedDeclaration": 30,
													"src": "3415:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3434:20:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 187,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3479:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:1"
									},
									"scope": 241,
									"src": "3385:267:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "4132:174:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 222,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "4165:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 220,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "4146:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$30_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:1",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$30_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 224,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4175:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 237,
													"nodeType": "Block",
													"src": "4249:51:1",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 233,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "4276:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 231,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 219,
															"id": 236,
															"nodeType": "Return",
															"src": "4263:26:1"
														}
													]
												},
												"id": 238,
												"nodeType": "IfStatement",
												"src": "4142:158:1",
												"trueBody": {
													"id": 230,
													"nodeType": "Block",
													"src": "4194:49:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 227,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "4226:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 226,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "4215:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$30_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 219,
															"id": 229,
															"nodeType": "Return",
															"src": "4208:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:1",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4059:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 211,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "4059:11:1"
													},
													"referencedDeclaration": 30,
													"src": "4059:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4078:20:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:1"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4123:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:1"
									},
									"scope": 241,
									"src": "4027:279:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 242,
							"src": "1255:3053:1",
							"usedErrors": [
								38,
								40
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							351
						]
					},
					"id": 352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 244,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:2",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 351,
							"linearizedBaseContracts": [
								351
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 247,
									"members": [
										{
											"constant": false,
											"id": 246,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 247,
											"src": "1300:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 245,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:2",
									"nodeType": "StructDefinition",
									"scope": 351,
									"src": "1271:49:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 250,
									"members": [
										{
											"constant": false,
											"id": 249,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 250,
											"src": "1355:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 248,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:2",
									"nodeType": "StructDefinition",
									"scope": 351,
									"src": "1326:46:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 253,
									"members": [
										{
											"constant": false,
											"id": 252,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 253,
											"src": "1407:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 251,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:2",
									"nodeType": "StructDefinition",
									"scope": 351,
									"src": "1378:49:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 256,
									"members": [
										{
											"constant": false,
											"id": 255,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 256,
											"src": "1462:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 254,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:2",
									"nodeType": "StructDefinition",
									"scope": 351,
									"src": "1433:49:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 259,
									"members": [
										{
											"constant": false,
											"id": 258,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "1516:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 257,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:2",
									"nodeType": "StructDefinition",
									"scope": 351,
									"src": "1488:47:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 262,
									"members": [
										{
											"constant": false,
											"id": 261,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 262,
											"src": "1568:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 260,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:2",
									"nodeType": "StructDefinition",
									"scope": 351,
									"src": "1541:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "1768:106:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:2",
													"nodeType": "YulBlock",
													"src": "1830:38:2",
													"statements": [
														{
															"nativeSrc": "1844:14:2",
															"nodeType": "YulAssignment",
															"src": "1844:14:2",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:2",
																"nodeType": "YulIdentifier",
																"src": "1854:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 269,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 265,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:2",
														"valueSize": 1
													}
												],
												"id": 271,
												"nodeType": "InlineAssembly",
												"src": "1821:47:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:2",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1708:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1745:21:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$247_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 247,
														"src": "1745:11:2"
													},
													"referencedDeclaration": 247,
													"src": "1745:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$247_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:2"
									},
									"scope": 351,
									"src": "1684:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "2056:106:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:2",
													"nodeType": "YulBlock",
													"src": "2118:38:2",
													"statements": [
														{
															"nativeSrc": "2132:14:2",
															"nodeType": "YulAssignment",
															"src": "2132:14:2",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:2",
																"nodeType": "YulIdentifier",
																"src": "2142:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 280,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 276,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:2",
														"valueSize": 1
													}
												],
												"id": 282,
												"nodeType": "InlineAssembly",
												"src": "2109:47:2"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:2",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1996:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2033:21:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$250_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 279,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 278,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "2033:11:2"
													},
													"referencedDeclaration": 250,
													"src": "2033:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$250_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:2"
									},
									"scope": 351,
									"src": "1972:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2344:106:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:2",
													"nodeType": "YulBlock",
													"src": "2406:38:2",
													"statements": [
														{
															"nativeSrc": "2420:14:2",
															"nodeType": "YulAssignment",
															"src": "2420:14:2",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:2",
																"nodeType": "YulIdentifier",
																"src": "2430:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 291,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 287,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:2",
														"valueSize": 1
													}
												],
												"id": 293,
												"nodeType": "InlineAssembly",
												"src": "2397:47:2"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:2",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2284:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 286,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2321:21:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$253_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 253,
														"src": "2321:11:2"
													},
													"referencedDeclaration": 253,
													"src": "2321:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$253_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:2"
									},
									"scope": 351,
									"src": "2260:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "2632:106:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:2",
													"nodeType": "YulBlock",
													"src": "2694:38:2",
													"statements": [
														{
															"nativeSrc": "2708:14:2",
															"nodeType": "YulAssignment",
															"src": "2708:14:2",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:2",
																"nodeType": "YulIdentifier",
																"src": "2718:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 302,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 298,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:2",
														"valueSize": 1
													}
												],
												"id": 304,
												"nodeType": "InlineAssembly",
												"src": "2685:47:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:2",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2572:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 297,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:2"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2609:21:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$256_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 256,
														"src": "2609:11:2"
													},
													"referencedDeclaration": 256,
													"src": "2609:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$256_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:2"
									},
									"scope": 351,
									"src": "2548:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "2917:106:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:2",
													"nodeType": "YulBlock",
													"src": "2979:38:2",
													"statements": [
														{
															"nativeSrc": "2993:14:2",
															"nodeType": "YulAssignment",
															"src": "2993:14:2",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:2",
																"nodeType": "YulIdentifier",
																"src": "3003:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 313,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 309,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:2",
														"valueSize": 1
													}
												],
												"id": 315,
												"nodeType": "InlineAssembly",
												"src": "2970:47:2"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:2",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2858:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2895:20:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$259_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 311,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 259,
														"src": "2895:10:2"
													},
													"referencedDeclaration": 259,
													"src": "2895:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$259_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:2"
									},
									"scope": 351,
									"src": "2835:188:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "3225:112:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:2",
													"nodeType": "YulBlock",
													"src": "3287:44:2",
													"statements": [
														{
															"nativeSrc": "3301:20:2",
															"nodeType": "YulAssignment",
															"src": "3301:20:2",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:2",
																"nodeType": "YulIdentifier",
																"src": "3311:10:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 324,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 320,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:2",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 326,
												"nodeType": "InlineAssembly",
												"src": "3278:53:2"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:2",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3158:20:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3203:20:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$259_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 322,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 259,
														"src": "3203:10:2"
													},
													"referencedDeclaration": 259,
													"src": "3203:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$259_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:2"
									},
									"scope": 351,
									"src": "3135:202:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "3513:106:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:2",
													"nodeType": "YulBlock",
													"src": "3575:38:2",
													"statements": [
														{
															"nativeSrc": "3589:14:2",
															"nodeType": "YulAssignment",
															"src": "3589:14:2",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:2",
																"nodeType": "YulIdentifier",
																"src": "3599:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 335,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 331,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:2",
														"valueSize": 1
													}
												],
												"id": 337,
												"nodeType": "InlineAssembly",
												"src": "3566:47:2"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:2",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "3455:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 330,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:2"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "3492:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$262_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 333,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 262,
														"src": "3492:9:2"
													},
													"referencedDeclaration": 262,
													"src": "3492:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$262_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:2"
									},
									"scope": 351,
									"src": "3433:186:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "3816:112:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:2",
													"nodeType": "YulBlock",
													"src": "3878:44:2",
													"statements": [
														{
															"nativeSrc": "3892:20:2",
															"nodeType": "YulAssignment",
															"src": "3892:20:2",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:2",
																"nodeType": "YulIdentifier",
																"src": "3902:10:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 346,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 342,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:2",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 348,
												"nodeType": "InlineAssembly",
												"src": "3869:53:2"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:2",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "3751:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:2"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "3795:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$262_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 345,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 344,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 262,
														"src": "3795:9:2"
													},
													"referencedDeclaration": 262,
													"src": "3795:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$262_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:2"
									},
									"scope": 351,
									"src": "3729:199:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 352,
							"src": "1245:2685:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2312
						],
						"SignedMath": [
							2417
						],
						"Strings": [
							606
						]
					},
					"id": 607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 2313,
							"src": "127:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2312,
										"src": "135:4:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 2418,
							"src": "165:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2417,
										"src": "173:10:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 358,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 606,
							"linearizedBaseContracts": [
								606
							],
							"name": "Strings",
							"nameLocation": "259:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 361,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 606,
									"src": "273:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 359,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 364,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 606,
									"src": "335:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 362,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:3",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 371,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "505:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "520:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:3"
									},
									"src": "470:66:3"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "708:627:3",
										"statements": [
											{
												"id": 417,
												"nodeType": "UncheckedBlock",
												"src": "718:611:3",
												"statements": [
													{
														"assignments": [
															380
														],
														"declarations": [
															{
																"constant": false,
																"id": 380,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 417,
																"src": "742:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 379,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 387,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 383,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "770:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 381,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2312,
																		"src": "759:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2312_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2132,
																	"src": "759:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:3"
													},
													{
														"assignments": [
															389
														],
														"declarations": [
															{
																"constant": false,
																"id": 389,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 417,
																"src": "794:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 388,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 394,
														"initialValue": {
															"arguments": [
																{
																	"id": 392,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "828:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 390,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:3"
													},
													{
														"assignments": [
															396
														],
														"declarations": [
															{
																"constant": false,
																"id": 396,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 417,
																"src": "849:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 397,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:3"
													},
													{
														"AST": {
															"nativeSrc": "930:67:3",
															"nodeType": "YulBlock",
															"src": "930:67:3",
															"statements": [
																{
																	"nativeSrc": "948:35:3",
																	"nodeType": "YulAssignment",
																	"src": "948:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:3",
																						"nodeType": "YulLiteral",
																						"src": "971:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:3"
																				},
																				"nativeSrc": "967:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:3"
																		},
																		"nativeSrc": "955:28:3",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:3"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 389,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:3",
																"valueSize": 1
															},
															{
																"declaration": 380,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:3",
																"valueSize": 1
															},
															{
																"declaration": 396,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:3",
																"valueSize": 1
															}
														],
														"id": 398,
														"nodeType": "InlineAssembly",
														"src": "921:76:3"
													},
													{
														"body": {
															"id": 413,
															"nodeType": "Block",
															"src": "1023:269:3",
															"statements": [
																{
																	"expression": {
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:3",
																		"subExpression": {
																			"id": 400,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "1041:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 402,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:3"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:3",
																		"nodeType": "YulBlock",
																		"src": "1124:86:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:3"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:3",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:3"
																									},
																									"nativeSrc": "1164:14:3",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:3"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:3",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:3",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:3"
																							},
																							"nativeSrc": "1159:32:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:3"
																					},
																					"nativeSrc": "1146:46:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:3"
																				},
																				"nativeSrc": "1146:46:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:3"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 361,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 396,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 374,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:3",
																			"valueSize": 1
																		}
																	],
																	"id": 403,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:3"
																},
																{
																	"expression": {
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 404,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 374,
																			"src": "1227:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 407,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 408,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 374,
																			"src": "1260:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 412,
																	"nodeType": "IfStatement",
																	"src": "1256:21:3",
																	"trueBody": {
																		"id": 411,
																		"nodeType": "Break",
																		"src": "1272:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 414,
														"nodeType": "WhileStatement",
														"src": "1010:282:3"
													},
													{
														"expression": {
															"id": 415,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "1312:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 378,
														"id": 416,
														"nodeType": "Return",
														"src": "1305:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "655:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:3"
									},
									"scope": 606,
									"src": "637:698:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1511:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "1542:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:3",
															"trueExpression": {
																"hexValue": "2d",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 439,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "1588:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 437,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2417,
																			"src": "1573:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2417_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:3",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2416,
																		"src": "1573:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 436,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "1564:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 427,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:3",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 426,
												"id": 443,
												"nodeType": "Return",
												"src": "1521:75:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:3",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1459:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 421,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1496:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:3"
									},
									"scope": 606,
									"src": "1435:168:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "1782:100:3",
										"statements": [
											{
												"id": 463,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 454,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1835:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 457,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 448,
																				"src": "1854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 455,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2312,
																				"src": "1842:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2312_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2254,
																			"src": "1842:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 453,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	465,
																	548,
																	568
																],
																"referencedDeclaration": 548,
																"src": "1823:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 452,
														"id": 462,
														"nodeType": "Return",
														"src": "1816:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1729:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:3"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1767:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:3"
									},
									"scope": 606,
									"src": "1708:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "2095:435:3",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "2105:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"id": 477,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 468,
													"src": "2126:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:3"
											},
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "2141:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 479,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 484,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "2177:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 481,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:3"
											},
											{
												"expression": {
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 490,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2198:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 492,
														"indexExpression": {
															"hexValue": "30",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:3"
											},
											{
												"expression": {
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 496,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2223:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 498,
														"indexExpression": {
															"hexValue": "31",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:3"
											},
											{
												"body": {
													"id": 530,
													"nodeType": "Block",
													"src": "2293:95:3",
													"statements": [
														{
															"expression": {
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 516,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "2307:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 518,
																	"indexExpression": {
																		"id": 517,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "2314:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 519,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "2319:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 523,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 520,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2330:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 525,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:3"
														},
														{
															"expression": {
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 526,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "2361:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 529,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 510,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "2281:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 531,
												"initializationExpression": {
													"assignments": [
														503
													],
													"declarations": [
														{
															"constant": false,
															"id": 503,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 531,
															"src": "2253:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 502,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 509,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 505,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "2269:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:3"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:3",
														"subExpression": {
															"id": 513,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "2290:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 515,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 532,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "2401:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "2397:96:3",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "2418:75:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "2468:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 537,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "2475:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 535,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "2439:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "2432:50:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 544,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2516:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 542,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 474,
												"id": 546,
												"nodeType": "Return",
												"src": "2502:21:3"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2026:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2041:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2080:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:3"
									},
									"scope": 606,
									"src": "2005:525:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2762:75:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 561,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 551,
																			"src": "2807:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 559,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 557,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 564,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "2815:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 556,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															465,
															548,
															568
														],
														"referencedDeclaration": 548,
														"src": "2779:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 555,
												"id": 566,
												"nodeType": "Return",
												"src": "2772:58:3"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2710:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:3"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2747:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 553,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:3"
									},
									"scope": 606,
									"src": "2689:148:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "2992:104:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 580,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "3015:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 578,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 585,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 573,
																		"src": "3034:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 583,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 592,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "3063:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 590,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 589,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 598,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 573,
																			"src": "3086:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 596,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 595,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 577,
												"id": 603,
												"nodeType": "Return",
												"src": "3002:87:3"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:3",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2929:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2946:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:3"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2986:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:3"
									},
									"scope": 606,
									"src": "2914:182:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 607,
							"src": "251:2847:3",
							"usedErrors": [
								371
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							954
						]
					},
					"id": 955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 608,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 609,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:4",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 954,
							"linearizedBaseContracts": [
								954
							],
							"name": "ECDSA",
							"nameLocation": "352:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 614,
									"members": [
										{
											"id": 610,
											"name": "NoError",
											"nameLocation": "392:7:4",
											"nodeType": "EnumValue",
											"src": "392:7:4"
										},
										{
											"id": 611,
											"name": "InvalidSignature",
											"nameLocation": "409:16:4",
											"nodeType": "EnumValue",
											"src": "409:16:4"
										},
										{
											"id": 612,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:4",
											"nodeType": "EnumValue",
											"src": "435:22:4"
										},
										{
											"id": 613,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:4",
											"nodeType": "EnumValue",
											"src": "467:17:4"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:4",
									"nodeType": "EnumDefinition",
									"src": "364:126:4"
								},
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:4",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 617,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:4"
									},
									"src": "564:30:4"
								},
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:4",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 622,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "699:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:4"
									},
									"src": "665:50:4"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:4",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 627,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "840:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 624,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:4"
									},
									"src": "811:40:4"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "2242:653:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 642,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "2256:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "2781:108:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 664,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 668,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "2815:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$614_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:4",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 612,
																		"src": "2815:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$614",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 672,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "2860:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 670,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 641,
															"id": 676,
															"nodeType": "Return",
															"src": "2795:83:4"
														}
													]
												},
												"id": 678,
												"nodeType": "IfStatement",
												"src": "2252:637:4",
												"trueBody": {
													"id": 663,
													"nodeType": "Block",
													"src": "2280:495:4",
													"statements": [
														{
															"assignments": [
																647
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 647,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 663,
																	"src": "2294:9:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 648,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:4"
														},
														{
															"assignments": [
																650
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 650,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 663,
																	"src": "2317:9:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 649,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 651,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:4"
														},
														{
															"assignments": [
																653
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 653,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 663,
																	"src": "2340:7:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 652,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:4"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:4",
																"nodeType": "YulBlock",
																"src": "2548:171:4",
																"statements": [
																	{
																		"nativeSrc": "2566:32:4",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:4",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:4",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:4",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:4",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:4"
																					},
																					"nativeSrc": "2577:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:4"
																			},
																			"nativeSrc": "2571:27:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:4"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:4",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:4",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:4",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:4",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:4",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:4"
																					},
																					"nativeSrc": "2626:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:4"
																			},
																			"nativeSrc": "2620:27:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:4"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:4",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:4",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:4",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:4",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:4"
																							},
																							"nativeSrc": "2683:20:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:4"
																					},
																					"nativeSrc": "2677:27:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:4"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:4"
																			},
																			"nativeSrc": "2669:36:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:4"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:4"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 647,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:4",
																	"valueSize": 1
																},
																{
																	"declaration": 650,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:4",
																	"valueSize": 1
																},
																{
																	"declaration": 632,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 632,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 632,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 653,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:4",
																	"valueSize": 1
																}
															],
															"id": 655,
															"nodeType": "InlineAssembly",
															"src": "2539:180:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 657,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "2750:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 658,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "2756:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 659,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "2759:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 660,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "2762:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 656,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		680,
																		760,
																		868
																	],
																	"referencedDeclaration": 868,
																	"src": "2739:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 641,
															"id": 662,
															"nodeType": "Return",
															"src": "2732:32:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:4",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2149:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 629,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2163:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:4"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2210:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2219:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$614",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 637,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 636,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "2219:12:4"
													},
													"referencedDeclaration": 614,
													"src": "2219:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$614",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2233:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 639,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:4"
									},
									"scope": 954,
									"src": "2129:766:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "3789:168:4",
										"statements": [
											{
												"assignments": [
													691,
													694,
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "3800:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 690,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "3819:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$614",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 693,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 692,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 614,
																"src": "3819:12:4"
															},
															"referencedDeclaration": 614,
															"src": "3819:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "3839:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 695,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"arguments": [
														{
															"id": 698,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "3870:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 699,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3876:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															760,
															868
														],
														"referencedDeclaration": 680,
														"src": "3859:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "3908:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 704,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "3915:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 702,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "3896:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$614_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:4"
											},
											{
												"expression": {
													"id": 707,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 691,
													"src": "3941:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 689,
												"id": 708,
												"nodeType": "Return",
												"src": "3934:16:4"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:4",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "3719:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 682,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "3733:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:4"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "3780:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:4"
									},
									"scope": 954,
									"src": "3702:255:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "4285:342:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:4",
												"statements": [
													{
														"assignments": [
															728
														],
														"declarations": [
															{
																"constant": false,
																"id": 728,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 758,
																"src": "4319:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 727,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 735,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 729,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "4331:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 730,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:4"
													},
													{
														"assignments": [
															737
														],
														"declarations": [
															{
																"constant": false,
																"id": 737,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 758,
																"src": "4522:7:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 736,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 750,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 742,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 717,
																							"src": "4547:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 741,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 740,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 743,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 744,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 746,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 738,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 752,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "4596:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 753,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "4602:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 754,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "4605:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 755,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "4608:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 751,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	680,
																	760,
																	868
																],
																"referencedDeclaration": 868,
																"src": "4585:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 726,
														"id": 757,
														"nodeType": "Return",
														"src": "4578:32:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:4",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4193:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4207:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 714,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4218:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 716,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:4"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4253:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4262:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$614",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 722,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 721,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "4262:12:4"
													},
													"referencedDeclaration": 614,
													"src": "4262:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$614",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4276:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 724,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:4"
									},
									"scope": 954,
									"src": "4173:454:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "4840:164:4",
										"statements": [
											{
												"assignments": [
													773,
													776,
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "4851:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "4870:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$614",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 775,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 774,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 614,
																"src": "4870:12:4"
															},
															"referencedDeclaration": 614,
															"src": "4870:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "4890:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 777,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"arguments": [
														{
															"id": 780,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "4921:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 781,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "4927:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 782,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "4930:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 779,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															760,
															868
														],
														"referencedDeclaration": 760,
														"src": "4910:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4955:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 787,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "4962:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 785,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "4943:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$614_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:4"
											},
											{
												"expression": {
													"id": 790,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "4988:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 791,
												"nodeType": "Return",
												"src": "4981:16:4"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:4",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4771:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 762,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4785:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 764,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4796:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 766,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4831:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:4"
									},
									"scope": 954,
									"src": "4754:250:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "5298:1372:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 814,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "6194:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 812,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "6182:164:4",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "6267:79:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 818,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 822,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "6301:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$614_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:4",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 613,
																		"src": "6301:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$614",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 824,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "6333:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 825,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 811,
															"id": 826,
															"nodeType": "Return",
															"src": "6281:54:4"
														}
													]
												}
											},
											{
												"assignments": [
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "6440:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 829,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 837,
												"initialValue": {
													"arguments": [
														{
															"id": 832,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "6467:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 833,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "6473:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 834,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "6476:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 835,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "6479:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 831,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 838,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6495:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 839,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 857,
												"nodeType": "IfStatement",
												"src": "6491:113:4",
												"trueBody": {
													"id": 856,
													"nodeType": "Block",
													"src": "6517:87:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 844,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 848,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "6551:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$614_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:4",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 611,
																		"src": "6551:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$614",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 852,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 850,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 854,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 811,
															"id": 855,
															"nodeType": "Return",
															"src": "6531:62:4"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 858,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "6622:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 859,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6630:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$614_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:4",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 610,
															"src": "6630:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 861,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 865,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 811,
												"id": 866,
												"nodeType": "Return",
												"src": "6614:49:4"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:4",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5169:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 795,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5191:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 797,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5208:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 799,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5227:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 801,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:4"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5266:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5275:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$614",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 807,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 806,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "5275:12:4"
													},
													"referencedDeclaration": 614,
													"src": "5275:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$614",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5289:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 809,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:4"
									},
									"scope": 954,
									"src": "5140:1530:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "6897:166:4",
										"statements": [
											{
												"assignments": [
													883,
													886,
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "6908:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 882,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "6927:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$614",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 885,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 884,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 614,
																"src": "6927:12:4"
															},
															"referencedDeclaration": 614,
															"src": "6927:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "6947:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 887,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"arguments": [
														{
															"id": 890,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "6978:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 891,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "6984:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 892,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "6987:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 893,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "6990:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 889,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															760,
															868
														],
														"referencedDeclaration": 868,
														"src": "6967:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$614_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "7014:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 898,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "7021:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 896,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "7002:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$614_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:4"
											},
											{
												"expression": {
													"id": 901,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "7047:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 881,
												"id": 902,
												"nodeType": "Return",
												"src": "7040:16:4"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:4",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6820:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 870,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6834:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 872,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6843:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 874,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6854:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 876,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:4"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6888:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:4"
									},
									"scope": 954,
									"src": "6803:260:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "7268:460:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$614",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "7282:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$614",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 914,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7291:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$614_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:4",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 610,
														"src": "7291:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$614",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$614",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 919,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "7378:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 920,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "7387:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$614_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:4",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 611,
															"src": "7387:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$614",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 927,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "7483:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$614",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 928,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "7492:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$614_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:4",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 612,
																"src": "7492:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$614",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$614",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 939,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "7617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$614",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 940,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "7626:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$614_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:4",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "7626:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$614",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 948,
															"nodeType": "IfStatement",
															"src": "7613:109:4",
															"trueBody": {
																"id": 947,
																"nodeType": "Block",
																"src": "7658:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 944,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "7702:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 943,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7679:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 946,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:4"
																	}
																]
															}
														},
														"id": 949,
														"nodeType": "IfStatement",
														"src": "7479:243:4",
														"trueBody": {
															"id": 938,
															"nodeType": "Block",
															"src": "7529:78:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 934,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 910,
																						"src": "7586:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 932,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 931,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 622,
																			"src": "7550:27:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 937,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:4"
																}
															]
														}
													},
													"id": 950,
													"nodeType": "IfStatement",
													"src": "7374:348:4",
													"trueBody": {
														"id": 926,
														"nodeType": "Block",
														"src": "7418:55:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 923,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "7439:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 925,
																"nodeType": "RevertStatement",
																"src": "7432:30:4"
															}
														]
													}
												},
												"id": 951,
												"nodeType": "IfStatement",
												"src": "7278:444:4",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "7313:55:4",
													"statements": [
														{
															"functionReturnParameters": 912,
															"id": 917,
															"nodeType": "Return",
															"src": "7327:7:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:4",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "7217:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$614",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 907,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 906,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "7217:12:4"
													},
													"referencedDeclaration": 614,
													"src": "7217:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$614",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "7237:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 909,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:4"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:4"
									},
									"scope": 954,
									"src": "7196:532:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 955,
							"src": "344:7386:4",
							"usedErrors": [
								617,
								622,
								627
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							1181
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							1255
						],
						"ShortString": [
							30
						],
						"ShortStrings": [
							241
						]
					},
					"id": 1182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 958,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1182,
							"sourceUnit": 1256,
							"src": "139:56:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 957,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1255,
										"src": "147:16:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 961,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1182,
							"sourceUnit": 242,
							"src": "196:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 959,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 241,
										"src": "204:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 960,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 30,
										"src": "218:11:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 963,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1182,
							"sourceUnit": 25,
							"src": "259:55:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 962,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 24,
										"src": "267:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 965,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "1988:8:5"
									},
									"id": 966,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:5"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 964,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:5",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 1181,
							"linearizedBaseContracts": [
								1181,
								24
							],
							"name": "EIP712",
							"nameLocation": "1978:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 968,
									"libraryName": {
										"id": 967,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 241,
										"src": "2009:12:5"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:5"
								},
								{
									"constant": true,
									"id": 973,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2034:140:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 969,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 971,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 970,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 972,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 975,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2373:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 974,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 977,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2427:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 976,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 979,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2473:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 978,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 981,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2517:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 980,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 983,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2560:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 982,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 986,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2607:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 985,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 984,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 30,
											"src": "2607:11:5"
										},
										"referencedDeclaration": 30,
										"src": "2607:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 989,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2648:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 988,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 987,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 30,
											"src": "2648:11:5"
										},
										"referencedDeclaration": 30,
										"src": "2648:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 991,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2692:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 990,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 993,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "2726:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 992,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "3383:376:5",
										"statements": [
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1001,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "3393:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1004,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "3432:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1002,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "3401:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:5",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "3401:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$30_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
														"typeString": "ShortString"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:5"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "3456:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1011,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "3501:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1009,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "3467:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:5",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "3467:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$30_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
														"typeString": "ShortString"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:5"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1015,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "3528:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1019,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "3558:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1017,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1016,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:5"
											},
											{
												"expression": {
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1024,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "3574:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1028,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "3607:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1026,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1025,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:5"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1033,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "3627:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1034,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:5",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:5"
											},
											{
												"expression": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1038,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "3667:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1039,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "3692:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:5"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1043,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3725:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1046,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$1181",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$1181",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1044,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:5"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:5",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 1051,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "3340:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "3360:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 997,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:5"
									},
									"scope": 1181,
									"src": "3328:431:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "3907:200:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1059,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$1181",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$1181",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1057,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1061,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3938:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1063,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:5",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1065,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3970:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "4046:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1071,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "4067:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1056,
															"id": 1073,
															"nodeType": "Return",
															"src": "4060:30:5"
														}
													]
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "3917:184:5",
												"trueBody": {
													"id": 1070,
													"nodeType": "Block",
													"src": "3986:54:5",
													"statements": [
														{
															"expression": {
																"id": 1068,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "4007:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1056,
															"id": 1069,
															"nodeType": "Return",
															"src": "4000:29:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:5",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:5"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "3898:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1054,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:5"
									},
									"scope": 1181,
									"src": "3845:262:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "4177:115:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1085,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "4215:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1086,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "4226:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1087,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "4239:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1088,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:5",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1092,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$1181",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$1181",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1090,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1083,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1082,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1081,
												"id": 1096,
												"nodeType": "Return",
												"src": "4187:98:5"
											}
										]
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:5"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "4168:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:5"
									},
									"scope": 1181,
									"src": "4113:179:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "5003:90:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1108,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "5053:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1110,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "5075:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1106,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "5020:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$1255_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:5",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1254,
														"src": "5020:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1112,
												"nodeType": "Return",
												"src": "5013:73:5"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:5",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "4943:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:5"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "4994:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:5"
									},
									"scope": 1181,
									"src": "4917:176:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "5472:229:5",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1134,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "5533:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1136,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "5560:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1138,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:5",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1142,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$1181",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$1181",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1140,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1144,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 1148,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1149,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 1153,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 1132,
												"id": 1154,
												"nodeType": "Return",
												"src": "5482:212:5"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:5",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5242:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1117,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5269:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1119,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5301:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1121,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5336:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5365:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5404:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1127,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5430:27:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1129,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1130,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:5"
									},
									"scope": 1181,
									"src": "5144:557:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "6082:65:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1164,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "6126:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 1162,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "6099:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																"typeString": "ShortString"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:5",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "6099:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$30_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$30_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1161,
												"id": 1166,
												"nodeType": "Return",
												"src": "6092:48:5"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:5",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:5"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "6067:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:5"
									},
									"scope": 1181,
									"src": "6021:126:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "6537:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1176,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "6584:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 1174,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "6554:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$30",
																"typeString": "ShortString"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:5",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "6554:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$30_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$30_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1173,
												"id": 1178,
												"nodeType": "Return",
												"src": "6547:54:5"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:5",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:5"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "6522:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:5"
									},
									"scope": 1181,
									"src": "6473:135:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1182,
							"src": "1960:4650:5",
							"usedErrors": [
								38,
								40
							],
							"usedEvents": [
								4
							]
						}
					],
					"src": "113:6498:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							1255
						],
						"Strings": [
							606
						]
					},
					"id": 1256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 1185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1256,
							"sourceUnit": 607,
							"src": "149:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1184,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 606,
										"src": "157:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1186,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:6",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 1255,
							"linearizedBaseContracts": [
								1255
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "1314:368:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:6",
													"nodeType": "YulBlock",
													"src": "1376:300:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:6",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:6",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:6",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:6"
																},
																"nativeSrc": "1390:48:6",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:6"
															},
															"nativeSrc": "1390:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:6",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:6"
																},
																"nativeSrc": "1492:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:6"
															},
															"nativeSrc": "1492:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:6"
														},
														{
															"nativeSrc": "1571:31:6",
															"nodeType": "YulAssignment",
															"src": "1571:31:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:6",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:6",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:6"
																},
																"nativeSrc": "1581:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:6"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1192,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1189,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:6",
														"valueSize": 1
													}
												],
												"id": 1194,
												"nodeType": "InlineAssembly",
												"src": "1367:309:6"
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:6",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1254:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:6"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1298:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:6"
									},
									"scope": 1255,
									"src": "1222:460:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "2234:143:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1213,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1199,
																						"src": "2343:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1214,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:6",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1211,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 606,
																					"src": "2326:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$606_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:6",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 419,
																				"src": "2326:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1209,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 1217,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "2361:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1205,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:6",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1204,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1203,
												"id": 1220,
												"nodeType": "Return",
												"src": "2244:126:6"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:6",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2180:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:6"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2225:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:6"
									},
									"scope": 1255,
									"src": "2148:229:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "2831:80:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1236,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "2887:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1237,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "2898:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1233,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1232,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1231,
												"id": 1240,
												"nodeType": "Return",
												"src": "2841:63:6"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:6",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2761:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2780:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:6"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2822:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:6"
									},
									"scope": 1255,
									"src": "2720:191:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "3462:292:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:6",
													"nodeType": "YulBlock",
													"src": "3524:224:6",
													"statements": [
														{
															"nativeSrc": "3538:22:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:6",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:6"
																},
																"nativeSrc": "3549:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:6"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:6",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:6"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:6",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:6",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:6"
																},
																"nativeSrc": "3573:23:6",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:6"
															},
															"nativeSrc": "3573:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:6",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:6"
																		},
																		"nativeSrc": "3616:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:6"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:6",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:6"
																},
																"nativeSrc": "3609:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:6"
															},
															"nativeSrc": "3609:39:6",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:6",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:6"
																		},
																		"nativeSrc": "3668:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:6"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:6"
																},
																"nativeSrc": "3661:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:6"
															},
															"nativeSrc": "3661:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:6"
														},
														{
															"nativeSrc": "3708:30:6",
															"nodeType": "YulAssignment",
															"src": "3708:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:6",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:6"
																},
																"nativeSrc": "3718:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:6"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1250,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1245,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:6",
														"valueSize": 1
													},
													{
														"declaration": 1247,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:6",
														"valueSize": 1
													}
												],
												"id": 1252,
												"nodeType": "InlineAssembly",
												"src": "3515:233:6"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:6",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "3378:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "3403:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:6"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "3446:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:6"
									},
									"scope": 1255,
									"src": "3353:401:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1256,
							"src": "521:3235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							1181
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							1255
						],
						"ShortString": [
							30
						],
						"ShortStrings": [
							241
						]
					},
					"id": 1259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "119:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "./EIP712.sol",
							"id": 1258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1259,
							"sourceUnit": 1182,
							"src": "208:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "119:112:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2312
						]
					},
					"id": 2313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1260,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1261,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2312,
							"linearizedBaseContracts": [
								2312
							],
							"name": "Math",
							"nameLocation": "211:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:8",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1264,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:8"
									},
									"src": "277:29:8"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1269,
									"members": [
										{
											"id": 1265,
											"name": "Floor",
											"nameLocation": "336:5:8",
											"nodeType": "EnumValue",
											"src": "336:5:8"
										},
										{
											"id": 1266,
											"name": "Ceil",
											"nameLocation": "379:4:8",
											"nodeType": "EnumValue",
											"src": "379:4:8"
										},
										{
											"id": 1267,
											"name": "Trunc",
											"nameLocation": "421:5:8",
											"nodeType": "EnumValue",
											"src": "421:5:8"
										},
										{
											"id": 1268,
											"name": "Expand",
											"nameLocation": "451:6:8",
											"nodeType": "EnumValue",
											"src": "451:6:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:8",
									"nodeType": "EnumDefinition",
									"src": "312:169:8"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "661:140:8",
										"statements": [
											{
												"id": 1299,
												"nodeType": "UncheckedBlock",
												"src": "671:124:8",
												"statements": [
													{
														"assignments": [
															1282
														],
														"declarations": [
															{
																"constant": false,
																"id": 1282,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1299,
																"src": "695:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1286,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "707:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1284,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "711:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1287,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "730:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "734:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1294,
														"nodeType": "IfStatement",
														"src": "726:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1280,
															"id": 1293,
															"nodeType": "Return",
															"src": "737:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1296,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "782:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1280,
														"id": 1298,
														"nodeType": "Return",
														"src": "768:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:8"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "646:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "652:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:8"
									},
									"scope": 2312,
									"src": "585:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "984:113:8",
										"statements": [
											{
												"id": 1327,
												"nodeType": "UncheckedBlock",
												"src": "994:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1313,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "1022:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "1026:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1320,
														"nodeType": "IfStatement",
														"src": "1018:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1312,
															"id": 1319,
															"nodeType": "Return",
															"src": "1029:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1322,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "1074:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1323,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "1078:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1325,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1312,
														"id": 1326,
														"nodeType": "Return",
														"src": "1060:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "924:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "935:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:8"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "969:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "975:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:8"
									},
									"scope": 2312,
									"src": "908:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "1283:417:8",
										"statements": [
											{
												"id": 1369,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1341,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "1551:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1348,
														"nodeType": "IfStatement",
														"src": "1547:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1340,
															"id": 1347,
															"nodeType": "Return",
															"src": "1559:16:8"
														}
													},
													{
														"assignments": [
															1350
														],
														"declarations": [
															{
																"constant": false,
																"id": 1350,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1369,
																"src": "1589:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1349,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1354,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1351,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "1601:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "1605:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1355,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "1624:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1356,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "1628:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "1633:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1364,
														"nodeType": "IfStatement",
														"src": "1620:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1340,
															"id": 1363,
															"nodeType": "Return",
															"src": "1636:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1366,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "1681:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1340,
														"id": 1368,
														"nodeType": "Return",
														"src": "1667:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1223:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1234:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:8"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1268:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1274:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:8"
									},
									"scope": 2312,
									"src": "1207:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "1887:114:8",
										"statements": [
											{
												"id": 1397,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "1925:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1390,
														"nodeType": "IfStatement",
														"src": "1921:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1382,
															"id": 1389,
															"nodeType": "Return",
															"src": "1933:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1392,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "1978:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1393,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "1982:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1395,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1382,
														"id": 1396,
														"nodeType": "Return",
														"src": "1964:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1827:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1838:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:8"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1872:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1878:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:8"
									},
									"scope": 2312,
									"src": "1811:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "2198:114:8",
										"statements": [
											{
												"id": 1425,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1411,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "2236:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1418,
														"nodeType": "IfStatement",
														"src": "2232:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1410,
															"id": 1417,
															"nodeType": "Return",
															"src": "2244:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1420,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "2289:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1421,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "2293:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1423,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1410,
														"id": 1424,
														"nodeType": "Return",
														"src": "2275:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2138:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2149:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:8"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2183:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2189:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:8"
									},
									"scope": 2312,
									"src": "2122:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "2449:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1437,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "2466:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1438,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "2470:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1441,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "2478:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:8",
													"trueExpression": {
														"id": 1440,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "2474:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1443,
												"nodeType": "Return",
												"src": "2459:20:8"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "2395:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "2406:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:8"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "2440:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:8"
									},
									"scope": 2312,
									"src": "2382:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "2624:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1455,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "2641:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1456,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "2645:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1459,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "2653:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:8",
													"trueExpression": {
														"id": 1458,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "2649:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1454,
												"id": 1461,
												"nodeType": "Return",
												"src": "2634:20:8"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "2570:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "2581:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:8"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "2615:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:8"
									},
									"scope": 2312,
									"src": "2557:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "2845:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1473,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "2900:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1474,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "2904:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1476,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1477,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "2910:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1478,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "2914:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1480,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1484,
												"nodeType": "Return",
												"src": "2892:28:8"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2791:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2802:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:8"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2836:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:8"
									},
									"scope": 2312,
									"src": "2774:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "3219:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1496,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "3233:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "3229:127:8",
												"trueBody": {
													"id": 1503,
													"nodeType": "Block",
													"src": "3241:115:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1499,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "3340:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1500,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "3344:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1495,
															"id": 1502,
															"nodeType": "Return",
															"src": "3333:12:8"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1505,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "3444:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1509,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "3458:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1512,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1513,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "3467:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1518,
												"nodeType": "Return",
												"src": "3437:35:8"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "3165:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "3176:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:8"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "3210:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:8"
									},
									"scope": 2312,
									"src": "3148:331:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "3901:4018:8",
										"statements": [
											{
												"id": 1644,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:8",
												"statements": [
													{
														"assignments": [
															1533
														],
														"declarations": [
															{
																"constant": false,
																"id": 1533,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1644,
																"src": "4232:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1532,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1537,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1534,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "4248:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1535,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "4252:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:8"
													},
													{
														"assignments": [
															1539
														],
														"declarations": [
															{
																"constant": false,
																"id": 1539,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1644,
																"src": "4312:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1538,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1540,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:8"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:8",
															"nodeType": "YulBlock",
															"src": "4392:122:8",
															"statements": [
																{
																	"nativeSrc": "4410:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:8"
																				},
																				"nativeSrc": "4433:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:8"
																		},
																		"nativeSrc": "4420:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:8",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:8",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:8"
																				},
																				"nativeSrc": "4470:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:8"
																				},
																				"nativeSrc": "4486:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:8"
																		},
																		"nativeSrc": "4466:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1539,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1523,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1525,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:8",
																"valueSize": 1
															}
														],
														"id": 1541,
														"nodeType": "InlineAssembly",
														"src": "4383:131:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "4595:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1550,
														"nodeType": "IfStatement",
														"src": "4591:368:8",
														"trueBody": {
															"id": 1549,
															"nodeType": "Block",
															"src": "4607:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1545,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "4925:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1546,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1527,
																			"src": "4933:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1531,
																	"id": 1548,
																	"nodeType": "Return",
																	"src": "4918:26:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1551,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "5065:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1552,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "5080:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1558,
														"nodeType": "IfStatement",
														"src": "5061:88:8",
														"trueBody": {
															"id": 1557,
															"nodeType": "Block",
															"src": "5087:62:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1554,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "5112:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1556,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:8"
																}
															]
														}
													},
													{
														"assignments": [
															1560
														],
														"declarations": [
															{
																"constant": false,
																"id": 1560,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1644,
																"src": "5404:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1561,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:8"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:8",
															"nodeType": "YulBlock",
															"src": "5444:291:8",
															"statements": [
																{
																	"nativeSrc": "5513:38:8",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:8"
																		},
																		"nativeSrc": "5526:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:8",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:8"
																				},
																				"nativeSrc": "5653:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:8"
																		},
																		"nativeSrc": "5642:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:8",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:8"
																		},
																		"nativeSrc": "5700:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1527,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1539,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1539,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1560,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1560,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1560,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1523,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1525,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:8",
																"valueSize": 1
															}
														],
														"id": 1562,
														"nodeType": "InlineAssembly",
														"src": "5435:300:8"
													},
													{
														"assignments": [
															1564
														],
														"declarations": [
															{
																"constant": false,
																"id": 1564,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1644,
																"src": "5939:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1563,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1571,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1565,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "5954:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1567,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1527,
																			"src": "5973:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1569,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:8"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:8",
															"nodeType": "YulBlock",
															"src": "6008:362:8",
															"statements": [
																{
																	"nativeSrc": "6073:37:8",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:8"
																		},
																		"nativeSrc": "6088:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:8",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:8"
																		},
																		"nativeSrc": "6186:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:8",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:8"
																						},
																						"nativeSrc": "6333:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:8"
																				},
																				"nativeSrc": "6329:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:8"
																		},
																		"nativeSrc": "6325:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1527,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1527,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1564,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1564,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1564,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1564,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1564,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:8",
																"valueSize": 1
															}
														],
														"id": 1572,
														"nodeType": "InlineAssembly",
														"src": "5999:371:8"
													},
													{
														"expression": {
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1573,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "6436:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1574,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "6445:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1575,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "6453:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1578,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:8"
													},
													{
														"assignments": [
															1580
														],
														"declarations": [
															{
																"constant": false,
																"id": 1580,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1644,
																"src": "6775:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1579,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1582,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1527,
																			"src": "6798:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1584,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:8"
													},
													{
														"expression": {
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1588,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "7031:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1590,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "7046:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1591,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "7060:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1595,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:8"
													},
													{
														"expression": {
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1596,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "7100:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1598,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "7115:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1599,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "7129:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1603,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:8"
													},
													{
														"expression": {
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1604,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "7170:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1606,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "7185:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1607,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "7199:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1611,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:8"
													},
													{
														"expression": {
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1612,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "7240:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1614,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "7255:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1615,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "7269:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1619,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:8"
													},
													{
														"expression": {
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1620,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "7310:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1622,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "7325:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1623,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "7339:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1627,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:8"
													},
													{
														"expression": {
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1628,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "7381:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1630,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "7396:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1631,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "7410:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1635,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:8"
													},
													{
														"expression": {
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1636,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "7851:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1637,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "7860:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1638,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "7868:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1641,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:8"
													},
													{
														"expression": {
															"id": 1642,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "7896:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1531,
														"id": 1643,
														"nodeType": "Return",
														"src": "7889:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3819:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3830:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3841:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:8"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3885:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:8"
									},
									"scope": 2312,
									"src": "3803:4116:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "8161:192:8",
										"statements": [
											{
												"assignments": [
													1662
												],
												"declarations": [
													{
														"constant": false,
														"id": 1662,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "8171:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1668,
												"initialValue": {
													"arguments": [
														{
															"id": 1664,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "8195:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1665,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "8198:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1666,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "8201:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1663,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1646,
															1689
														],
														"referencedDeclaration": 1646,
														"src": "8188:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1670,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "8244:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1269",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1269",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1669,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "8227:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1269_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1673,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "8264:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1674,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "8267:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1675,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "8270:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1672,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1685,
												"nodeType": "IfStatement",
												"src": "8223:101:8",
												"trueBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "8288:36:8",
													"statements": [
														{
															"expression": {
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1680,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "8302:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1683,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1686,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1662,
													"src": "8340:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1660,
												"id": 1687,
												"nodeType": "Return",
												"src": "8333:13:8"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "8067:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "8078:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "8089:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "8110:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1269",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1655,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1654,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1269,
														"src": "8110:8:8"
													},
													"referencedDeclaration": 1269,
													"src": "8110:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1269",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:8"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "8152:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:8"
									},
									"scope": 2312,
									"src": "8051:302:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "8644:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1697,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "8658:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1703,
												"nodeType": "IfStatement",
												"src": "8654:45:8",
												"trueBody": {
													"id": 1702,
													"nodeType": "Block",
													"src": "8666:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1696,
															"id": 1701,
															"nodeType": "Return",
															"src": "8680:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "9378:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1714,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1708,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "9406:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1707,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1968,
																			2003
																		],
																		"referencedDeclaration": 1968,
																		"src": "9401:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1712,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:8"
											},
											{
												"id": 1799,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:8",
												"statements": [
													{
														"expression": {
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1715,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "9839:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1716,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "9849:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1717,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1692,
																					"src": "9858:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1718,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "9862:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1721,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1725,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:8"
													},
													{
														"expression": {
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1726,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "9888:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1727,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "9898:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1728,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1692,
																					"src": "9907:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1729,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "9911:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1732,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1736,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:8"
													},
													{
														"expression": {
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1737,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "9937:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1738,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "9947:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1739,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1692,
																					"src": "9956:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1740,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "9960:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1743,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1747,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:8"
													},
													{
														"expression": {
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1748,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "9986:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1749,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "9996:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1750,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1692,
																					"src": "10005:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1751,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "10009:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1754,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1758,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:8"
													},
													{
														"expression": {
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1759,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "10035:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1760,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "10045:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1761,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1692,
																					"src": "10054:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1762,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "10058:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1765,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1769,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:8"
													},
													{
														"expression": {
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1770,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "10084:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1771,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "10094:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1772,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1692,
																					"src": "10103:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1773,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "10107:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1776,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1780,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:8"
													},
													{
														"expression": {
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1781,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "10133:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1782,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "10143:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1783,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1692,
																					"src": "10152:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1784,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "10156:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1787,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1791,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1793,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "10193:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1794,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "10201:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1795,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "10205:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1792,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "10189:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1696,
														"id": 1798,
														"nodeType": "Return",
														"src": "10182:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "8601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:8"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "8635:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:8"
									},
									"scope": 2312,
									"src": "8587:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "10405:164:8",
										"statements": [
											{
												"id": 1834,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:8",
												"statements": [
													{
														"assignments": [
															1813
														],
														"declarations": [
															{
																"constant": false,
																"id": 1813,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1834,
																"src": "10439:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1812,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1817,
														"initialValue": {
															"arguments": [
																{
																	"id": 1815,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "10461:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1814,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1801,
																	1836
																],
																"referencedDeclaration": 1801,
																"src": "10456:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1818,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "10484:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1820,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1807,
																						"src": "10511:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1269",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1269",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1819,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "10494:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1269_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1824,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1822,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1813,
																						"src": "10524:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1823,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1813,
																						"src": "10533:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1825,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1804,
																					"src": "10542:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1811,
														"id": 1833,
														"nodeType": "Return",
														"src": "10477:75:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "10343:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "10354:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1269",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1806,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1805,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1269,
														"src": "10354:8:8"
													},
													"referencedDeclaration": 1269,
													"src": "10354:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1269",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:8"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "10396:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:8"
									},
									"scope": 2312,
									"src": "10329:240:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "10760:922:8",
										"statements": [
											{
												"assignments": [
													1845
												],
												"declarations": [
													{
														"constant": false,
														"id": 1845,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "10770:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1847,
												"initialValue": {
													"hexValue": "30",
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:8"
											},
											{
												"id": 1964,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1848,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "10826:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1862,
														"nodeType": "IfStatement",
														"src": "10822:99:8",
														"trueBody": {
															"id": 1861,
															"nodeType": "Block",
															"src": "10844:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "10862:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1856,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:8"
																},
																{
																	"expression": {
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1857,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "10893:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1860,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1863,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "10938:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1877,
														"nodeType": "IfStatement",
														"src": "10934:96:8",
														"trueBody": {
															"id": 1876,
															"nodeType": "Block",
															"src": "10955:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1868,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "10973:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1871,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:8"
																},
																{
																	"expression": {
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1872,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "11003:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1875,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1878,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "11047:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1892,
														"nodeType": "IfStatement",
														"src": "11043:96:8",
														"trueBody": {
															"id": 1891,
															"nodeType": "Block",
															"src": "11064:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1883,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "11082:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1886,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:8"
																},
																{
																	"expression": {
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1887,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "11112:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1890,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1893,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "11156:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1907,
														"nodeType": "IfStatement",
														"src": "11152:96:8",
														"trueBody": {
															"id": 1906,
															"nodeType": "Block",
															"src": "11173:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1898,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "11191:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1901,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:8"
																},
																{
																	"expression": {
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1902,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "11221:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1905,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1908,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "11265:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1922,
														"nodeType": "IfStatement",
														"src": "11261:93:8",
														"trueBody": {
															"id": 1921,
															"nodeType": "Block",
															"src": "11281:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1913,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "11299:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1916,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:8"
																},
																{
																	"expression": {
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1917,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "11328:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1920,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1923,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "11371:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1937,
														"nodeType": "IfStatement",
														"src": "11367:93:8",
														"trueBody": {
															"id": 1936,
															"nodeType": "Block",
															"src": "11387:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1928,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "11405:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1931,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:8"
																},
																{
																	"expression": {
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1932,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "11434:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1935,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1938,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "11477:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1952,
														"nodeType": "IfStatement",
														"src": "11473:93:8",
														"trueBody": {
															"id": 1951,
															"nodeType": "Block",
															"src": "11493:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1943,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "11511:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1946,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:8"
																},
																{
																	"expression": {
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1947,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "11540:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1950,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1953,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "11583:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1963,
														"nodeType": "IfStatement",
														"src": "11579:64:8",
														"trueBody": {
															"id": 1962,
															"nodeType": "Block",
															"src": "11599:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1958,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "11617:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1961,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1965,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1845,
													"src": "11669:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1966,
												"nodeType": "Return",
												"src": "11662:13:8"
											}
										]
									},
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:8",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "10713:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:8"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "10751:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:8"
									},
									"scope": 2312,
									"src": "10699:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "11915:168:8",
										"statements": [
											{
												"id": 2001,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:8",
												"statements": [
													{
														"assignments": [
															1980
														],
														"declarations": [
															{
																"constant": false,
																"id": 1980,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2001,
																"src": "11949:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1979,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1984,
														"initialValue": {
															"arguments": [
																{
																	"id": 1982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1971,
																	"src": "11971:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1981,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1968,
																	2003
																],
																"referencedDeclaration": 1968,
																"src": "11966:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1985,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1980,
																"src": "11998:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1987,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1974,
																						"src": "12025:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1269",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1269",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1986,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "12008:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1269_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1991,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1989,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1990,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1980,
																						"src": "12043:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1992,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1971,
																					"src": "12052:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1978,
														"id": 2000,
														"nodeType": "Return",
														"src": "11991:75:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "11849:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "11864:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1269",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1973,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1972,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1269,
														"src": "11864:8:8"
													},
													"referencedDeclaration": 1269,
													"src": "11864:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1269",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:8"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "11906:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:8"
									},
									"scope": 2312,
									"src": "11835:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "12276:854:8",
										"statements": [
											{
												"assignments": [
													2012
												],
												"declarations": [
													{
														"constant": false,
														"id": 2012,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2131,
														"src": "12286:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2014,
												"initialValue": {
													"hexValue": "30",
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:8"
											},
											{
												"id": 2128,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2015,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "12342:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2031,
														"nodeType": "IfStatement",
														"src": "12338:103:8",
														"trueBody": {
															"id": 2030,
															"nodeType": "Block",
															"src": "12361:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2020,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "12379:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2025,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:8"
																},
																{
																	"expression": {
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2026,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "12414:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2029,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2032,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "12458:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2048,
														"nodeType": "IfStatement",
														"src": "12454:103:8",
														"trueBody": {
															"id": 2047,
															"nodeType": "Block",
															"src": "12477:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2037,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "12495:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2042,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:8"
																},
																{
																	"expression": {
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2043,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "12530:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2046,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2049,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "12574:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2065,
														"nodeType": "IfStatement",
														"src": "12570:103:8",
														"trueBody": {
															"id": 2064,
															"nodeType": "Block",
															"src": "12593:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2054,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "12611:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2059,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:8"
																},
																{
																	"expression": {
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2060,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "12646:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2063,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2066,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "12690:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2082,
														"nodeType": "IfStatement",
														"src": "12686:100:8",
														"trueBody": {
															"id": 2081,
															"nodeType": "Block",
															"src": "12708:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2071,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "12726:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2076,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:8"
																},
																{
																	"expression": {
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2077,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "12760:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2080,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2083,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "12803:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2099,
														"nodeType": "IfStatement",
														"src": "12799:100:8",
														"trueBody": {
															"id": 2098,
															"nodeType": "Block",
															"src": "12821:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2088,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "12839:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2093,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:8"
																},
																{
																	"expression": {
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2094,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "12873:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2097,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2100,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "12916:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2116,
														"nodeType": "IfStatement",
														"src": "12912:100:8",
														"trueBody": {
															"id": 2115,
															"nodeType": "Block",
															"src": "12934:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2105,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "12952:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2110,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:8"
																},
																{
																	"expression": {
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2111,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "12986:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2114,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2117,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "13029:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2127,
														"nodeType": "IfStatement",
														"src": "13025:66:8",
														"trueBody": {
															"id": 2126,
															"nodeType": "Block",
															"src": "13047:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2122,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "13065:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2125,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2129,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2012,
													"src": "13117:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2010,
												"id": 2130,
												"nodeType": "Return",
												"src": "13110:13:8"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:8",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "12229:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:8"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "12267:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:8"
									},
									"scope": 2312,
									"src": "12214:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "13365:170:8",
										"statements": [
											{
												"id": 2165,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:8",
												"statements": [
													{
														"assignments": [
															2144
														],
														"declarations": [
															{
																"constant": false,
																"id": 2144,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2165,
																"src": "13399:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2143,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2148,
														"initialValue": {
															"arguments": [
																{
																	"id": 2146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "13422:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2145,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2132,
																	2167
																],
																"referencedDeclaration": 2132,
																"src": "13416:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2149,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "13449:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2151,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2138,
																						"src": "13476:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1269",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1269",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2150,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "13459:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1269_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2154,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2144,
																						"src": "13495:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2156,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2135,
																					"src": "13504:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2162,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2142,
														"id": 2164,
														"nodeType": "Return",
														"src": "13442:76:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "13299:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "13314:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1269",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2137,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2136,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1269,
														"src": "13314:8:8"
													},
													"referencedDeclaration": 1269,
													"src": "13314:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1269",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:8"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "13356:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:8"
									},
									"scope": 2312,
									"src": "13284:251:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2253,
										"nodeType": "Block",
										"src": "13855:600:8",
										"statements": [
											{
												"assignments": [
													2176
												],
												"declarations": [
													{
														"constant": false,
														"id": 2176,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2253,
														"src": "13865:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2178,
												"initialValue": {
													"hexValue": "30",
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:8"
											},
											{
												"id": 2250,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2179,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "13921:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2193,
														"nodeType": "IfStatement",
														"src": "13917:98:8",
														"trueBody": {
															"id": 2192,
															"nodeType": "Block",
															"src": "13939:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2170,
																			"src": "13957:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2187,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:8"
																},
																{
																	"expression": {
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2188,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "13988:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2191,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2194,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "14032:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2208,
														"nodeType": "IfStatement",
														"src": "14028:95:8",
														"trueBody": {
															"id": 2207,
															"nodeType": "Block",
															"src": "14049:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2199,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2170,
																			"src": "14067:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2202,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:8"
																},
																{
																	"expression": {
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2203,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "14097:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2206,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2209,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "14140:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2223,
														"nodeType": "IfStatement",
														"src": "14136:95:8",
														"trueBody": {
															"id": 2222,
															"nodeType": "Block",
															"src": "14157:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2214,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2170,
																			"src": "14175:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2217,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:8"
																},
																{
																	"expression": {
																		"id": 2220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2218,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "14205:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2221,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2224,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "14248:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2238,
														"nodeType": "IfStatement",
														"src": "14244:95:8",
														"trueBody": {
															"id": 2237,
															"nodeType": "Block",
															"src": "14265:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2229,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2170,
																			"src": "14283:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2232,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:8"
																},
																{
																	"expression": {
																		"id": 2235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2233,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "14313:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2236,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2239,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "14356:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2249,
														"nodeType": "IfStatement",
														"src": "14352:64:8",
														"trueBody": {
															"id": 2248,
															"nodeType": "Block",
															"src": "14372:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2244,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "14390:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2247,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2251,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2176,
													"src": "14442:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2174,
												"id": 2252,
												"nodeType": "Return",
												"src": "14435:13:8"
											}
										]
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:8",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "13808:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:8"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "13846:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:8"
									},
									"scope": 2312,
									"src": "13792:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "14692:177:8",
										"statements": [
											{
												"id": 2290,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:8",
												"statements": [
													{
														"assignments": [
															2266
														],
														"declarations": [
															{
																"constant": false,
																"id": 2266,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2290,
																"src": "14726:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2265,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2270,
														"initialValue": {
															"arguments": [
																{
																	"id": 2268,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "14750:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2267,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2254,
																	2292
																],
																"referencedDeclaration": 2254,
																"src": "14743:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2271,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "14777:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2273,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2260,
																						"src": "14804:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1269",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1269",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2272,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "14787:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1269_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2278,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2276,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2266,
																									"src": "14823:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2277,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2279,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2281,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2257,
																					"src": "14838:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2287,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2264,
														"id": 2289,
														"nodeType": "Return",
														"src": "14770:82:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2255,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "14626:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "14641:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1269",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2258,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1269,
														"src": "14641:8:8"
													},
													"referencedDeclaration": 1269,
													"src": "14641:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1269",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:8"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "14683:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:8"
									},
									"scope": 2312,
									"src": "14610:259:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2310,
										"nodeType": "Block",
										"src": "15067:48:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2303,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "15090:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1269",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1269",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2301,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2300,
												"id": 2309,
												"nodeType": "Return",
												"src": "15077:31:8"
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:8",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "15019:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1269",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2295,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2294,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1269,
														"src": "15019:8:8"
													},
													"referencedDeclaration": 1269,
													"src": "15019:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1269",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:8"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "15061:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:8"
									},
									"scope": 2312,
									"src": "14993:122:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2313,
							"src": "203:14914:8",
							"usedErrors": [
								1264
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2417
						]
					},
					"id": 2418,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2315,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:9",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2417,
							"linearizedBaseContracts": [
								2417
							],
							"name": "SignedMath",
							"nameLocation": "224:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2332,
										"nodeType": "Block",
										"src": "376:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2325,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "393:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2326,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "397:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2329,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "405:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:9",
													"trueExpression": {
														"id": 2328,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "401:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2324,
												"id": 2331,
												"nodeType": "Return",
												"src": "386:20:9"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:9",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "325:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2317,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "335:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2319,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:9"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "368:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2322,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:9"
									},
									"scope": 2417,
									"src": "312:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "555:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2343,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "572:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2344,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "576:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2347,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "584:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:9",
													"trueExpression": {
														"id": 2346,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2336,
														"src": "580:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2342,
												"id": 2349,
												"nodeType": "Return",
												"src": "565:20:9"
											}
										]
									},
									"documentation": {
										"id": 2334,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:9",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "504:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2335,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "514:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2337,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:9"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "547:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2340,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:9"
									},
									"scope": 2417,
									"src": "491:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "797:162:9",
										"statements": [
											{
												"assignments": [
													2362
												],
												"declarations": [
													{
														"constant": false,
														"id": 2362,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2394,
														"src": "859:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2361,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2375,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2363,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2354,
																	"src": "871:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2364,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2356,
																	"src": "875:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2366,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2367,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2354,
																				"src": "882:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2368,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2356,
																				"src": "886:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2370,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2373,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2376,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2362,
														"src": "911:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2381,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2362,
																						"src": "931:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2380,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2379,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2377,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2386,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2354,
																				"src": "945:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2387,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2356,
																				"src": "949:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2389,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2391,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2360,
												"id": 2393,
												"nodeType": "Return",
												"src": "904:48:9"
											}
										]
									},
									"documentation": {
										"id": 2352,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:9",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "746:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2353,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "756:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2355,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:9"
									},
									"returnParameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "789:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2358,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:9"
									},
									"scope": 2417,
									"src": "729:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2415,
										"nodeType": "Block",
										"src": "1103:158:9",
										"statements": [
											{
												"id": 2414,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2405,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2398,
																			"src": "1228:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:9",
																		"subExpression": {
																			"id": 2409,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2398,
																			"src": "1242:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:9",
																	"trueExpression": {
																		"id": 2408,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2398,
																		"src": "1237:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2402,
														"id": 2413,
														"nodeType": "Return",
														"src": "1213:31:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:9",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "1061:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2397,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:9"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "1094:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:9"
									},
									"scope": 2417,
									"src": "1048:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2418,
							"src": "216:1047:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:9"
				},
				"id": 9
			},
			"contracts/CollaborativeArt.sol": {
				"ast": {
					"absolutePath": "contracts/CollaborativeArt.sol",
					"exportedSymbols": {
						"CollaborativeArt": [
							2635
						],
						"ECDSA": [
							954
						],
						"EIP712": [
							1181
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							1255
						],
						"ShortString": [
							30
						],
						"ShortStrings": [
							241
						]
					},
					"id": 2636,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2419,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 2420,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2636,
							"sourceUnit": 955,
							"src": "60:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
							"id": 2421,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2636,
							"sourceUnit": 1259,
							"src": "124:69:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CollaborativeArt",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2635,
							"linearizedBaseContracts": [
								2635
							],
							"name": "CollaborativeArt",
							"nameLocation": "228:16:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2424,
									"libraryName": {
										"id": 2422,
										"name": "ECDSA",
										"nameLocations": [
											"257:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 954,
										"src": "257:5:10"
									},
									"nodeType": "UsingForDirective",
									"src": "251:24:10",
									"typeName": {
										"id": 2423,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "267:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"canonicalName": "CollaborativeArt.Artist",
									"id": 2429,
									"members": [
										{
											"constant": false,
											"id": 2426,
											"mutability": "mutable",
											"name": "artistAddress",
											"nameLocation": "315:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "307:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2425,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "307:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2428,
											"mutability": "mutable",
											"name": "ownershipPercentage",
											"nameLocation": "347:19:10",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "339:27:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2427,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "339:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Artist",
									"nameLocation": "290:6:10",
									"nodeType": "StructDefinition",
									"scope": 2635,
									"src": "283:91:10",
									"visibility": "public"
								},
								{
									"canonicalName": "CollaborativeArt.Milestone",
									"id": 2436,
									"members": [
										{
											"constant": false,
											"id": 2431,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "414:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 2436,
											"src": "407:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2430,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "407:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2433,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "444:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2436,
											"src": "436:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2432,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "436:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2435,
											"mutability": "mutable",
											"name": "completed",
											"nameLocation": "468:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 2436,
											"src": "463:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2434,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "463:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Milestone",
									"nameLocation": "387:9:10",
									"nodeType": "StructDefinition",
									"scope": 2635,
									"src": "380:105:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 2438,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "508:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2635,
									"src": "493:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2437,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cd7e10c1",
									"id": 2442,
									"mutability": "mutable",
									"name": "artists",
									"nameLocation": "536:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 2635,
									"src": "520:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Artist_$2429_storage_$dyn_storage",
										"typeString": "struct CollaborativeArt.Artist[]"
									},
									"typeName": {
										"baseType": {
											"id": 2440,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2439,
												"name": "Artist",
												"nameLocations": [
													"520:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2429,
												"src": "520:6:10"
											},
											"referencedDeclaration": 2429,
											"src": "520:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Artist_$2429_storage_ptr",
												"typeString": "struct CollaborativeArt.Artist"
											}
										},
										"id": 2441,
										"nodeType": "ArrayTypeName",
										"src": "520:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Artist_$2429_storage_$dyn_storage_ptr",
											"typeString": "struct CollaborativeArt.Artist[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e89e4ed6",
									"id": 2446,
									"mutability": "mutable",
									"name": "milestones",
									"nameLocation": "569:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2635,
									"src": "550:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Milestone_$2436_storage_$dyn_storage",
										"typeString": "struct CollaborativeArt.Milestone[]"
									},
									"typeName": {
										"baseType": {
											"id": 2444,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2443,
												"name": "Milestone",
												"nameLocations": [
													"550:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2436,
												"src": "550:9:10"
											},
											"referencedDeclaration": 2436,
											"src": "550:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Milestone_$2436_storage_ptr",
												"typeString": "struct CollaborativeArt.Milestone"
											}
										},
										"id": 2445,
										"nodeType": "ArrayTypeName",
										"src": "550:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Milestone_$2436_storage_$dyn_storage_ptr",
											"typeString": "struct CollaborativeArt.Milestone[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7f8fbc22",
									"id": 2450,
									"mutability": "mutable",
									"name": "artistToOwnershipPercentage",
									"nameLocation": "623:27:10",
									"nodeType": "VariableDeclaration",
									"scope": 2635,
									"src": "588:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2449,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2447,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "596:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "588:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2448,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "607:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "538b7242",
									"id": 2454,
									"mutability": "mutable",
									"name": "artistSigned",
									"nameLocation": "689:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2635,
									"src": "657:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2453,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2451,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "665:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "657:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2452,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "676:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d44a0e61",
									"id": 2457,
									"mutability": "mutable",
									"name": "totalPercentage",
									"nameLocation": "723:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2635,
									"src": "708:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2455,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "708:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2456,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "741:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89b5efa7",
									"id": 2459,
									"mutability": "mutable",
									"name": "artworkPrice",
									"nameLocation": "764:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2635,
									"src": "749:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d9952cbf75a3b7d22cfb7c2b9c7c00a23513676e5a486e14dcaf74485b483127",
									"id": 2465,
									"name": "ArtworkSold",
									"nameLocation": "791:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "811:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "803:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "825:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "818:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:31:10"
									},
									"src": "785:49:10"
								},
								{
									"anonymous": false,
									"eventSelector": "6478282e06f428e8cc4a5a3f8e08080cef19dcc8ed01914a202782c93d1ad51e",
									"id": 2469,
									"name": "DisputeResolved",
									"nameLocation": "846:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "869:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "862:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "862:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:16:10"
									},
									"src": "840:38:10"
								},
								{
									"body": {
										"id": 2480,
										"nodeType": "Block",
										"src": "907:100:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2472,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "926:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "930:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "926:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2474,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "940:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "926:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "947:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															},
															"value": "Only the owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															}
														],
														"id": 2471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "918:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "918:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2478,
												"nodeType": "ExpressionStatement",
												"src": "918:69:10"
											},
											{
												"id": 2479,
												"nodeType": "PlaceholderStatement",
												"src": "998:1:10"
											}
										]
									},
									"id": 2481,
									"name": "onlyOwner",
									"nameLocation": "895:9:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:2:10"
									},
									"src": "886:121:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2492,
										"nodeType": "Block",
										"src": "1037:105:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2484,
																"name": "artistSigned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "1056:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2487,
															"indexExpression": {
																"expression": {
																	"id": 2485,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1069:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1073:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1069:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1056:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920616e206172746973742063616e2063616c6c20746869732066756e6374696f6e",
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1082:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c444ffe0e280324d37da117a0f786220c7ad5d7dfebfd37243431665453864ef",
																"typeString": "literal_string \"Only an artist can call this function\""
															},
															"value": "Only an artist can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c444ffe0e280324d37da117a0f786220c7ad5d7dfebfd37243431665453864ef",
																"typeString": "literal_string \"Only an artist can call this function\""
															}
														],
														"id": 2483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1048:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1048:74:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2490,
												"nodeType": "ExpressionStatement",
												"src": "1048:74:10"
											},
											{
												"id": 2491,
												"nodeType": "PlaceholderStatement",
												"src": "1133:1:10"
											}
										]
									},
									"id": 2493,
									"name": "onlyArtist",
									"nameLocation": "1024:10:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:2:10"
									},
									"src": "1015:127:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2501,
										"nodeType": "Block",
										"src": "1163:37:10",
										"statements": [
											{
												"expression": {
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2496,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2438,
														"src": "1174:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2497,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1182:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1186:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1182:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1174:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2500,
												"nodeType": "ExpressionStatement",
												"src": "1174:18:10"
											}
										]
									},
									"id": 2502,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1161:2:10"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1163:0:10"
									},
									"scope": 2635,
									"src": "1150:50:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2550,
										"nodeType": "Block",
										"src": "1323:387:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2512,
																	"name": "totalPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2457,
																	"src": "1342:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2513,
																	"name": "_ownershipPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2506,
																	"src": "1360:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1342:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1383:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1342:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c204f776e657273686970206d61782031303025",
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1387:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925",
																"typeString": "literal_string \"Total Ownership max 100%\""
															},
															"value": "Total Ownership max 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3e42a35703265a3de1da19824f5f7fe1d24e904e004ed391475cfc87f44b925",
																"typeString": "literal_string \"Total Ownership max 100%\""
															}
														],
														"id": 2511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1334:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:80:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2519,
												"nodeType": "ExpressionStatement",
												"src": "1334:80:10"
											},
											{
												"assignments": [
													2522
												],
												"declarations": [
													{
														"constant": false,
														"id": 2522,
														"mutability": "mutable",
														"name": "newArtist",
														"nameLocation": "1439:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 2550,
														"src": "1425:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Artist_$2429_memory_ptr",
															"typeString": "struct CollaborativeArt.Artist"
														},
														"typeName": {
															"id": 2521,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2520,
																"name": "Artist",
																"nameLocations": [
																	"1425:6:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2429,
																"src": "1425:6:10"
															},
															"referencedDeclaration": 2429,
															"src": "1425:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Artist_$2429_storage_ptr",
																"typeString": "struct CollaborativeArt.Artist"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2527,
												"initialValue": {
													"arguments": [
														{
															"id": 2524,
															"name": "_artistAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "1458:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2525,
															"name": "_ownershipPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2506,
															"src": "1474:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2523,
														"name": "Artist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2429,
														"src": "1451:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Artist_$2429_storage_ptr_$",
															"typeString": "type(struct CollaborativeArt.Artist storage pointer)"
														}
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1451:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Artist_$2429_memory_ptr",
														"typeString": "struct CollaborativeArt.Artist memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1425:70:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2531,
															"name": "newArtist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "1519:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Artist_$2429_memory_ptr",
																"typeString": "struct CollaborativeArt.Artist memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Artist_$2429_memory_ptr",
																"typeString": "struct CollaborativeArt.Artist memory"
															}
														],
														"expression": {
															"id": 2528,
															"name": "artists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2442,
															"src": "1506:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Artist_$2429_storage_$dyn_storage",
																"typeString": "struct CollaborativeArt.Artist storage ref[] storage ref"
															}
														},
														"id": 2530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1514:4:10",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1506:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Artist_$2429_storage_$dyn_storage_ptr_$_t_struct$_Artist_$2429_storage_$returns$__$attached_to$_t_array$_t_struct$_Artist_$2429_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CollaborativeArt.Artist storage ref[] storage pointer,struct CollaborativeArt.Artist storage ref)"
														}
													},
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2533,
												"nodeType": "ExpressionStatement",
												"src": "1506:23:10"
											},
											{
												"expression": {
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2534,
															"name": "artistToOwnershipPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2450,
															"src": "1540:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2536,
														"indexExpression": {
															"id": 2535,
															"name": "_artistAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "1568:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1540:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2537,
														"name": "_ownershipPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2506,
														"src": "1586:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1540:66:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2539,
												"nodeType": "ExpressionStatement",
												"src": "1540:66:10"
											},
											{
												"expression": {
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2540,
															"name": "artistSigned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "1617:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2542,
														"indexExpression": {
															"id": 2541,
															"name": "_artistAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "1630:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1617:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1648:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1617:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2545,
												"nodeType": "ExpressionStatement",
												"src": "1617:35:10"
											},
											{
												"expression": {
													"id": 2548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2546,
														"name": "totalPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "1663:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2547,
														"name": "_ownershipPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2506,
														"src": "1682:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1663:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2549,
												"nodeType": "ExpressionStatement",
												"src": "1663:39:10"
											}
										]
									},
									"functionSelector": "5d1b5805",
									"id": 2551,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2509,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2508,
												"name": "onlyOwner",
												"nameLocations": [
													"1314:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2481,
												"src": "1314:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1314:9:10"
										}
									],
									"name": "addArtist",
									"nameLocation": "1243:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "_artistAddress",
												"nameLocation": "1261:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2551,
												"src": "1253:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "_ownershipPercentage",
												"nameLocation": "1285:20:10",
												"nodeType": "VariableDeclaration",
												"scope": 2551,
												"src": "1277:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:54:10"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1323:0:10"
									},
									"scope": 2635,
									"src": "1234:476:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2562,
										"nodeType": "Block",
										"src": "1811:40:10",
										"statements": [
											{
												"expression": {
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2558,
														"name": "artworkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2459,
														"src": "1822:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2559,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2553,
														"src": "1837:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1822:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2561,
												"nodeType": "ExpressionStatement",
												"src": "1822:21:10"
											}
										]
									},
									"functionSelector": "6beeedb8",
									"id": 2563,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2556,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2555,
												"name": "onlyOwner",
												"nameLocations": [
													"1802:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2481,
												"src": "1802:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1802:9:10"
										}
									],
									"name": "setArtworkPrice",
									"nameLocation": "1763:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1787:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "1779:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:10"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:10"
									},
									"scope": 2635,
									"src": "1754:97:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "1931:173:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2567,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1950:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1954:5:10",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1950:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2569,
																"name": "artworkPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2459,
																"src": "1963:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1950:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061796d656e74206d75737420657175616c20746f20617274207072696365",
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1977:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94",
																"typeString": "literal_string \"Payment must equal to art price\""
															},
															"value": "Payment must equal to art price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d557e43f4603ea088d4b2ca84e8bca4a232e3c12815a7663e8c786487242e94",
																"typeString": "literal_string \"Payment must equal to art price\""
															}
														],
														"id": 2566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1942:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2573,
												"nodeType": "ExpressionStatement",
												"src": "1942:69:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2574,
														"name": "distributeFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2622,
														"src": "2022:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2576,
												"nodeType": "ExpressionStatement",
												"src": "2022:17:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2578,
															"name": "artworkPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "2067:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "617274776f726b20736f6c64",
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2081:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f",
																"typeString": "literal_string \"artwork sold\""
															},
															"value": "artwork sold"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_fffe7b842e4e5274288e7e98614dd90ae358ba48be1df9bd5497ca06a137574f",
																"typeString": "literal_string \"artwork sold\""
															}
														],
														"id": 2577,
														"name": "ArtworkSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2465,
														"src": "2055:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2055:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2581,
												"nodeType": "EmitStatement",
												"src": "2050:46:10"
											}
										]
									},
									"functionSelector": "ab1ce0b0",
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseArtwork",
									"nameLocation": "1899:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1914:2:10"
									},
									"returnParameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:0:10"
									},
									"scope": 2635,
									"src": "1890:214:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2621,
										"nodeType": "Block",
										"src": "2168:225:10",
										"statements": [
											{
												"body": {
													"id": 2619,
													"nodeType": "Block",
													"src": "2223:163:10",
													"statements": [
														{
															"assignments": [
																2599
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2599,
																	"mutability": "mutable",
																	"name": "artist",
																	"nameLocation": "2252:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2619,
																	"src": "2238:20:10",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Artist_$2429_memory_ptr",
																		"typeString": "struct CollaborativeArt.Artist"
																	},
																	"typeName": {
																		"id": 2598,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2597,
																			"name": "Artist",
																			"nameLocations": [
																				"2238:6:10"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2429,
																			"src": "2238:6:10"
																		},
																		"referencedDeclaration": 2429,
																		"src": "2238:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Artist_$2429_storage_ptr",
																			"typeString": "struct CollaborativeArt.Artist"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2603,
															"initialValue": {
																"baseExpression": {
																	"id": 2600,
																	"name": "artists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "2261:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Artist_$2429_storage_$dyn_storage",
																		"typeString": "struct CollaborativeArt.Artist storage ref[] storage ref"
																	}
																},
																"id": 2602,
																"indexExpression": {
																	"id": 2601,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2587,
																	"src": "2269:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2261:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Artist_$2429_storage",
																	"typeString": "struct CollaborativeArt.Artist storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2238:33:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2613,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2610,
																						"name": "artworkPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2459,
																						"src": "2326:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"expression": {
																							"id": 2611,
																							"name": "artist",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2599,
																							"src": "2341:6:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Artist_$2429_memory_ptr",
																								"typeString": "struct CollaborativeArt.Artist memory"
																							}
																						},
																						"id": 2612,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2348:19:10",
																						"memberName": "ownershipPercentage",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2428,
																						"src": "2341:26:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2326:41:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2614,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2325:44:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2370:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "2325:48:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2606,
																					"name": "artist",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2599,
																					"src": "2294:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Artist_$2429_memory_ptr",
																						"typeString": "struct CollaborativeArt.Artist memory"
																					}
																				},
																				"id": 2607,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2301:13:10",
																				"memberName": "artistAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2426,
																				"src": "2294:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2286:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2286:8:10",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2286:29:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2316:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2286:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2286:88:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2618,
															"nodeType": "ExpressionStatement",
															"src": "2286:88:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2590,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2587,
														"src": "2199:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2591,
															"name": "artists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2442,
															"src": "2203:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Artist_$2429_storage_$dyn_storage",
																"typeString": "struct CollaborativeArt.Artist storage ref[] storage ref"
															}
														},
														"id": 2592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2211:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2203:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2199:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2620,
												"initializationExpression": {
													"assignments": [
														2587
													],
													"declarations": [
														{
															"constant": false,
															"id": 2587,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2192:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2620,
															"src": "2184:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2586,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2184:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2589,
													"initialValue": {
														"hexValue": "30",
														"id": 2588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2196:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2184:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2219:3:10",
														"subExpression": {
															"id": 2594,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2587,
															"src": "2219:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2596,
													"nodeType": "ExpressionStatement",
													"src": "2219:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2179:207:10"
											}
										]
									},
									"id": 2622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distributeFunds",
									"nameLocation": "2143:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:2:10"
									},
									"returnParameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2168:0:10"
									},
									"scope": 2635,
									"src": "2134:259:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2633,
										"nodeType": "Block",
										"src": "2521:34:10",
										"statements": [
											{
												"expression": {
													"id": 2631,
													"name": "_message",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2624,
													"src": "2539:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2630,
												"id": 2632,
												"nodeType": "Return",
												"src": "2532:15:10"
											}
										]
									},
									"functionSelector": "8f2238ba",
									"id": 2634,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2626,
												"name": "onlyOwner",
												"nameLocations": [
													"2487:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2481,
												"src": "2487:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2487:9:10"
										}
									],
									"name": "resolveDispute",
									"nameLocation": "2436:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "_message",
												"nameLocation": "2465:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "2451:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2451:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:24:10"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "2506:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2506:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:15:10"
									},
									"scope": 2635,
									"src": "2427:128:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2636,
							"src": "219:2339:10",
							"usedErrors": [],
							"usedEvents": [
								2465,
								2469
							]
						}
					],
					"src": "33:2525:10"
				},
				"id": 10
			}
		}
	}
}